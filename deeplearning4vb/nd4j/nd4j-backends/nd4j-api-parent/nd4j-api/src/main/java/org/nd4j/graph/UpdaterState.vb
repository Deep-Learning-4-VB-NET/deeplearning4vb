Imports com.google.flatbuffers

' automatically generated by the FlatBuffers compiler, do not modify
'
' *  ******************************************************************************
' *  *
' *  *
' *  * This program and the accompanying materials are made available under the
' *  * terms of the Apache License, Version 2.0 which is available at
' *  * https://www.apache.org/licenses/LICENSE-2.0.
' *  *
' *  *  See the NOTICE file distributed with this work for additional
' *  *  information regarding copyright ownership.
' *  * Unless required by applicable law or agreed to in writing, software
' *  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
' *  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
' *  * License for the specific language governing permissions and limitations
' *  * under the License.
' *  *
' *  * SPDX-License-Identifier: Apache-2.0
' *  *****************************************************************************
' 
Namespace org.nd4j.graph

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @SuppressWarnings("unused") public final class UpdaterState extends Table
	Public NotInheritable Class UpdaterState
		Inherits Table

	  Public Shared Function getRootAsUpdaterState(ByVal _bb As ByteBuffer) As UpdaterState
		  Return getRootAsUpdaterState(_bb, New UpdaterState())
	  End Function
	  Public Shared Function getRootAsUpdaterState(ByVal _bb As ByteBuffer, ByVal obj As UpdaterState) As UpdaterState
		  _bb.order(ByteOrder.LITTLE_ENDIAN)
		  Return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
	  End Function
	  Public Sub __init(ByVal _i As Integer, ByVal _bb As ByteBuffer)
		  bb_pos = _i
		  bb = _bb
		  vtable_start = bb_pos - bb.getInt(bb_pos)
		  vtable_size = bb.getShort(vtable_start)
	  End Sub
	  Public Function __assign(ByVal _i As Integer, ByVal _bb As ByteBuffer) As UpdaterState
		  __init(_i, _bb)
		  Return Me
	  End Function

	  Public Function paramName() As String
		  Dim o As Integer = __offset(4)
		  Return If(o <> 0, __string(o + bb_pos), Nothing)
	  End Function
	  Public Function paramNameAsByteBuffer() As ByteBuffer
		  Return __vector_as_bytebuffer(4, 1)
	  End Function
	  Public Function paramNameInByteBuffer(ByVal _bb As ByteBuffer) As ByteBuffer
		  Return __vector_in_bytebuffer(_bb, 4, 1)
	  End Function
	  Public Function updaterStateKeys(ByVal j As Integer) As String
		  Dim o As Integer = __offset(6)
		  Return If(o <> 0, __string(__vector(o) + j * 4), Nothing)
	  End Function
	  Public Function updaterStateKeysLength() As Integer
		  Dim o As Integer = __offset(6)
		  Return If(o <> 0, __vector_len(o), 0)
	  End Function
	  Public Function updaterStateValues(ByVal j As Integer) As FlatArray
		  Return updaterStateValues(New FlatArray(), j)
	  End Function
	  Public Function updaterStateValues(ByVal obj As FlatArray, ByVal j As Integer) As FlatArray
		  Dim o As Integer = __offset(8)
		  Return If(o <> 0, obj.__assign(__indirect(__vector(o) + j * 4), bb), Nothing)
	  End Function
	  Public Function updaterStateValuesLength() As Integer
		  Dim o As Integer = __offset(8)
		  Return If(o <> 0, __vector_len(o), 0)
	  End Function

	  Public Shared Function createUpdaterState(ByVal builder As FlatBufferBuilder, ByVal paramNameOffset As Integer, ByVal updaterStateKeysOffset As Integer, ByVal updaterStateValuesOffset As Integer) As Integer
		builder.startObject(3)
		UpdaterState.addUpdaterStateValues(builder, updaterStateValuesOffset)
		UpdaterState.addUpdaterStateKeys(builder, updaterStateKeysOffset)
		UpdaterState.addParamName(builder, paramNameOffset)
		Return UpdaterState.endUpdaterState(builder)
	  End Function

	  Public Shared Sub startUpdaterState(ByVal builder As FlatBufferBuilder)
		  builder.startObject(3)
	  End Sub
	  Public Shared Sub addParamName(ByVal builder As FlatBufferBuilder, ByVal paramNameOffset As Integer)
		  builder.addOffset(0, paramNameOffset, 0)
	  End Sub
	  Public Shared Sub addUpdaterStateKeys(ByVal builder As FlatBufferBuilder, ByVal updaterStateKeysOffset As Integer)
		  builder.addOffset(1, updaterStateKeysOffset, 0)
	  End Sub
	  Public Shared Function createUpdaterStateKeysVector(ByVal builder As FlatBufferBuilder, ByVal data() As Integer) As Integer
		  builder.startVector(4, data.Length, 4)
		  For i As Integer = data.Length - 1 To 0 Step -1
			  builder.addOffset(data(i))
		  Next i
		  Return builder.endVector()
	  End Function
	  Public Shared Sub startUpdaterStateKeysVector(ByVal builder As FlatBufferBuilder, ByVal numElems As Integer)
		  builder.startVector(4, numElems, 4)
	  End Sub
	  Public Shared Sub addUpdaterStateValues(ByVal builder As FlatBufferBuilder, ByVal updaterStateValuesOffset As Integer)
		  builder.addOffset(2, updaterStateValuesOffset, 0)
	  End Sub
	  Public Shared Function createUpdaterStateValuesVector(ByVal builder As FlatBufferBuilder, ByVal data() As Integer) As Integer
		  builder.startVector(4, data.Length, 4)
		  For i As Integer = data.Length - 1 To 0 Step -1
			  builder.addOffset(data(i))
		  Next i
		  Return builder.endVector()
	  End Function
	  Public Shared Sub startUpdaterStateValuesVector(ByVal builder As FlatBufferBuilder, ByVal numElems As Integer)
		  builder.startVector(4, numElems, 4)
	  End Sub
	  Public Shared Function endUpdaterState(ByVal builder As FlatBufferBuilder) As Integer
		Dim o As Integer = builder.endObject()
		Return o
	  End Function
	End Class


End Namespace