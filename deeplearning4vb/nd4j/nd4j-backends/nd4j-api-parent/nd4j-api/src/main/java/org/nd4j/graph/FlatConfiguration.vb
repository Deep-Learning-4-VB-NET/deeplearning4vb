Imports com.google.flatbuffers

' automatically generated by the FlatBuffers compiler, do not modify
'
' *  ******************************************************************************
' *  *
' *  *
' *  * This program and the accompanying materials are made available under the
' *  * terms of the Apache License, Version 2.0 which is available at
' *  * https://www.apache.org/licenses/LICENSE-2.0.
' *  *
' *  *  See the NOTICE file distributed with this work for additional
' *  *  information regarding copyright ownership.
' *  * Unless required by applicable law or agreed to in writing, software
' *  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
' *  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
' *  * License for the specific language governing permissions and limitations
' *  * under the License.
' *  *
' *  * SPDX-License-Identifier: Apache-2.0
' *  *****************************************************************************
' 
Namespace org.nd4j.graph

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @SuppressWarnings("unused") public final class FlatConfiguration extends Table
	Public NotInheritable Class FlatConfiguration
		Inherits Table

	  Public Shared Function getRootAsFlatConfiguration(ByVal _bb As ByteBuffer) As FlatConfiguration
		  Return getRootAsFlatConfiguration(_bb, New FlatConfiguration())
	  End Function
	  Public Shared Function getRootAsFlatConfiguration(ByVal _bb As ByteBuffer, ByVal obj As FlatConfiguration) As FlatConfiguration
		  _bb.order(ByteOrder.LITTLE_ENDIAN)
		  Return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
	  End Function
	  Public Sub __init(ByVal _i As Integer, ByVal _bb As ByteBuffer)
		  bb_pos = _i
		  bb = _bb
		  vtable_start = bb_pos - bb.getInt(bb_pos)
		  vtable_size = bb.getShort(vtable_start)
	  End Sub
	  Public Function __assign(ByVal _i As Integer, ByVal _bb As ByteBuffer) As FlatConfiguration
		  __init(_i, _bb)
		  Return Me
	  End Function

	  Public Function id() As Long
		  Dim o As Integer = __offset(4)
		  Return If(o <> 0, bb.getLong(o + bb_pos), 0L)
	  End Function
	  Public Function executionMode() As SByte
		  Dim o As Integer = __offset(6)
		  Return If(o <> 0, bb.get(o + bb_pos), 0)
	  End Function
	  Public Function profilingMode() As SByte
		  Dim o As Integer = __offset(8)
		  Return If(o <> 0, bb.get(o + bb_pos), 0)
	  End Function
	  Public Function outputMode() As SByte
		  Dim o As Integer = __offset(10)
		  Return If(o <> 0, bb.get(o + bb_pos), 0)
	  End Function
	  Public Function timestats() As Boolean
		  Dim o As Integer = __offset(12)
		  Return If(o <> 0, 0<>bb.get(o + bb_pos), False)
	  End Function
	  Public Function footprintForward() As Long
		  Dim o As Integer = __offset(14)
		  Return If(o <> 0, bb.getLong(o + bb_pos), 0L)
	  End Function
	  Public Function footprintBackward() As Long
		  Dim o As Integer = __offset(16)
		  Return If(o <> 0, bb.getLong(o + bb_pos), 0L)
	  End Function
	  Public Function direction() As SByte
		  Dim o As Integer = __offset(18)
		  Return If(o <> 0, bb.get(o + bb_pos), 0)
	  End Function

'JAVA TO VB CONVERTER NOTE: The parameter executionMode was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
'JAVA TO VB CONVERTER NOTE: The parameter profilingMode was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
'JAVA TO VB CONVERTER NOTE: The parameter outputMode was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
'JAVA TO VB CONVERTER NOTE: The parameter direction was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
	  Public Shared Function createFlatConfiguration(ByVal builder As FlatBufferBuilder, ByVal id As Long, ByVal executionMode_Conflict As SByte, ByVal profilingMode_Conflict As SByte, ByVal outputMode_Conflict As SByte, ByVal timestats As Boolean, ByVal footprintForward As Long, ByVal footprintBackward As Long, ByVal direction_Conflict As SByte) As Integer
		builder.startObject(8)
		FlatConfiguration.addFootprintBackward(builder, footprintBackward)
		FlatConfiguration.addFootprintForward(builder, footprintForward)
		FlatConfiguration.addId(builder, id)
		FlatConfiguration.addDirection(builder, direction_Conflict)
		FlatConfiguration.addTimestats(builder, timestats)
		FlatConfiguration.addOutputMode(builder, outputMode_Conflict)
		FlatConfiguration.addProfilingMode(builder, profilingMode_Conflict)
		FlatConfiguration.addExecutionMode(builder, executionMode_Conflict)
		Return FlatConfiguration.endFlatConfiguration(builder)
	  End Function

	  Public Shared Sub startFlatConfiguration(ByVal builder As FlatBufferBuilder)
		  builder.startObject(8)
	  End Sub
	  Public Shared Sub addId(ByVal builder As FlatBufferBuilder, ByVal id As Long)
		  builder.addLong(0, id, 0L)
	  End Sub
'JAVA TO VB CONVERTER NOTE: The parameter executionMode was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
	  Public Shared Sub addExecutionMode(ByVal builder As FlatBufferBuilder, ByVal executionMode_Conflict As SByte)
		  builder.addByte(1, executionMode_Conflict, 0)
	  End Sub
'JAVA TO VB CONVERTER NOTE: The parameter profilingMode was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
	  Public Shared Sub addProfilingMode(ByVal builder As FlatBufferBuilder, ByVal profilingMode_Conflict As SByte)
		  builder.addByte(2, profilingMode_Conflict, 0)
	  End Sub
'JAVA TO VB CONVERTER NOTE: The parameter outputMode was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
	  Public Shared Sub addOutputMode(ByVal builder As FlatBufferBuilder, ByVal outputMode_Conflict As SByte)
		  builder.addByte(3, outputMode_Conflict, 0)
	  End Sub
	  Public Shared Sub addTimestats(ByVal builder As FlatBufferBuilder, ByVal timestats As Boolean)
		  builder.addBoolean(4, timestats, False)
	  End Sub
	  Public Shared Sub addFootprintForward(ByVal builder As FlatBufferBuilder, ByVal footprintForward As Long)
		  builder.addLong(5, footprintForward, 0L)
	  End Sub
	  Public Shared Sub addFootprintBackward(ByVal builder As FlatBufferBuilder, ByVal footprintBackward As Long)
		  builder.addLong(6, footprintBackward, 0L)
	  End Sub
'JAVA TO VB CONVERTER NOTE: The parameter direction was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
	  Public Shared Sub addDirection(ByVal builder As FlatBufferBuilder, ByVal direction_Conflict As SByte)
		  builder.addByte(7, direction_Conflict, 0)
	  End Sub
	  Public Shared Function endFlatConfiguration(ByVal builder As FlatBufferBuilder) As Integer
		Dim o As Integer = builder.endObject()
		Return o
	  End Function
	  Public Shared Sub finishFlatConfigurationBuffer(ByVal builder As FlatBufferBuilder, ByVal offset As Integer)
		  builder.finish(offset)
	  End Sub
	  Public Shared Sub finishSizePrefixedFlatConfigurationBuffer(ByVal builder As FlatBufferBuilder, ByVal offset As Integer)
		  builder.finishSizePrefixed(offset)
	  End Sub
	End Class


End Namespace