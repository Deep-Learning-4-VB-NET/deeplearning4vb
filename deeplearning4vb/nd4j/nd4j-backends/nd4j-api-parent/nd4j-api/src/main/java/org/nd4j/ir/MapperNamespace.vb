Imports System
Imports System.Collections.Generic
Imports System.IO
Imports Microsoft.VisualBasic
Imports System.Linq

' Generated by the protocol buffer compiler.  DO NOT EDIT!
' source: mapper.proto

Namespace org.nd4j.ir

	Public NotInheritable Class MapperNamespace
	  Private Sub New()
	  End Sub
	  Public Shared Sub registerAllExtensions(ByVal registry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
	  End Sub

	  Public Shared Sub registerAllExtensions(ByVal registry As org.nd4j.shade.protobuf.ExtensionRegistry)
		registerAllExtensions(CType(registry, org.nd4j.shade.protobuf.ExtensionRegistryLite))
	  End Sub
	  ''' <summary>
	  ''' Protobuf enum {@code org.nd4j.ir.OpListType}
	  ''' </summary>
	  Public NotInheritable Class OpListType Implements org.nd4j.shade.protobuf.ProtocolMessageEnum
		''' <summary>
		''' <code>TARG = 0;</code>
		''' </summary>
		Public Shared ReadOnly TARG As New OpListType("TARG", InnerEnum.TARG, 0)
		''' <summary>
		''' <code>IARG = 1;</code>
		''' </summary>
		Public Shared ReadOnly IARG As New OpListType("IARG", InnerEnum.IARG, 1)
		''' <summary>
		''' <code>BARG = 2;</code>
		''' </summary>
		Public Shared ReadOnly BARG As New OpListType("BARG", InnerEnum.BARG, 2)
		''' <summary>
		''' <code>DTYPEARG = 3;</code>
		''' </summary>
		Public Shared ReadOnly DTYPEARG As New OpListType("DTYPEARG", InnerEnum.DTYPEARG, 3)
		''' <summary>
		''' <code>INPUTARG = 4;</code>
		''' </summary>
		Public Shared ReadOnly INPUTARG As New OpListType("INPUTARG", InnerEnum.INPUTARG, 4)
		''' <summary>
		''' <code>OUTPUTARG = 5;</code>
		''' </summary>
		Public Shared ReadOnly OUTPUTARG As New OpListType("OUTPUTARG", InnerEnum.OUTPUTARG, 5)
		''' <summary>
		''' <code>AXISARG = 6;</code>
		''' </summary>
		Public Shared ReadOnly AXISARG As New OpListType("AXISARG", InnerEnum.AXISARG, 6)
		Public Shared ReadOnly UNRECOGNIZED As New OpListType("UNRECOGNIZED", InnerEnum.UNRECOGNIZED, -1)

		Private Shared ReadOnly valueList As New List(Of OpListType)()

		Shared Sub New()
			valueList.Add(TARG)
			valueList.Add(IARG)
			valueList.Add(BARG)
			valueList.Add(DTYPEARG)
			valueList.Add(INPUTARG)
			valueList.Add(OUTPUTARG)
			valueList.Add(AXISARG)
			valueList.Add(UNRECOGNIZED)
		End Sub

		Public Enum InnerEnum
			TARG
			IARG
			BARG
			DTYPEARG
			INPUTARG
			OUTPUTARG
			AXISARG
			UNRECOGNIZED
		End Enum

		Public ReadOnly innerEnumValue As InnerEnum
		Private ReadOnly nameValue As String
		Private ReadOnly ordinalValue As Integer
		Private Shared nextOrdinal As Integer = 0

		''' <summary>
		''' <code>TARG = 0;</code>
		''' </summary>
		Public Const TARG_VALUE As Integer = 0
		''' <summary>
		''' <code>IARG = 1;</code>
		''' </summary>
		Public Const IARG_VALUE As Integer = 1
		''' <summary>
		''' <code>BARG = 2;</code>
		''' </summary>
		Public Const BARG_VALUE As Integer = 2
		''' <summary>
		''' <code>DTYPEARG = 3;</code>
		''' </summary>
		Public Const DTYPEARG_VALUE As Integer = 3
		''' <summary>
		''' <code>INPUTARG = 4;</code>
		''' </summary>
		Public Const INPUTARG_VALUE As Integer = 4
		''' <summary>
		''' <code>OUTPUTARG = 5;</code>
		''' </summary>
		Public Const OUTPUTARG_VALUE As Integer = 5
		''' <summary>
		''' <code>AXISARG = 6;</code>
		''' </summary>
		Public Const AXISARG_VALUE As Integer = 6


		Public ReadOnly Property Number As Integer
			Get
			  If Me = UNRECOGNIZED Then
				Throw New System.ArgumentException("Can't get the number of an unknown enum value.")
			  End If
			  Return outerInstance.value
			End Get
		End Property

		''' @deprecated Use <seealso cref="forNumber(Integer)"/> instead. 
		<Obsolete("Use <seealso cref=""forNumber(Integer)""/> instead.")>
		Public Shared Function valueOf(ByVal value As Integer) As OpListType
		  Return forNumber(value)
		End Function

		Public Shared Function forNumber(ByVal value As Integer) As OpListType
		  Select Case value
			Case 0
				Return TARG
			Case 1
				Return IARG
			Case 2
				Return BARG
			Case 3
				Return DTYPEARG
			Case 4
				Return INPUTARG
			Case 5
				Return OUTPUTARG
			Case 6
				Return AXISARG
			Case Else
				Return Nothing
		  End Select
		End Function

		Public Shared Function internalGetValueMap() As org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of OpListType)
		  Return internalValueMap
		End Function
		Friend Shared ReadOnly internalValueMap As org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of OpListType) = New EnumLiteMapAnonymousInnerClass()

		Public ReadOnly Property ValueDescriptor As org.nd4j.shade.protobuf.Descriptors.EnumValueDescriptor
			Get
			  Return Descriptor.getValues().get(ordinal())
			End Get
		End Property

'JAVA TO VB CONVERTER TODO TASK: Java to VB Converter does not convert types within enums:
'		private static class EnumLiteMapAnonymousInnerClass extends org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of OpListType)
	'	{
	'		public OpListType findValueByNumber(int number)
	'		{
	'		  Return OpListType.forNumber(number);
	'		}
	'	}
		Public ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.EnumDescriptor
			Get
			  Return Descriptor
			End Get
		End Property
		Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.EnumDescriptor
			Get
			  Return org.nd4j.ir.MapperNamespace.Descriptor.getEnumTypes().get(0)
			End Get
		End Property

		Friend Shared ReadOnly VALUES() As OpListType = values()

		Public Shared Function valueOf(ByVal desc As org.nd4j.shade.protobuf.Descriptors.EnumValueDescriptor) As OpListType
		  If desc.getType() <> Descriptor Then
			Throw New System.ArgumentException("EnumValueDescriptor is not for this type.")
		  End If
		  If desc.getIndex() = -1 Then
			Return UNRECOGNIZED
		  End If
		  Return VALUES(desc.getIndex())
		End Function

		Friend ReadOnly value As Integer

		Friend Sub New(ByVal name As String, ByVal thisInnerEnumValue As InnerEnum, ByVal outerInstance As MapperNamespace, ByVal value As Integer)
			Me.outerInstance = outerInstance
		  Me.value = value

			nameValue = name
			ordinalValue = nextOrdinal
			nextOrdinal += 1
			innerEnumValue = thisInnerEnumValue
		End Sub

		' @@protoc_insertion_point(enum_scope:org.nd4j.ir.OpListType)

		  Public Shared Function values() As OpListType()
			  Return valueList.ToArray()
		  End Function

		  Public Function ordinal() As Integer
			  Return ordinalValue
		  End Function

		  Public Overrides Function ToString() As String
			  Return nameValue
		  End Function

		  Public Shared Operator =(ByVal one As OpListType, ByVal two As OpListType) As Boolean
			  Return one.innerEnumValue = two.innerEnumValue
		  End Operator

		  Public Shared Operator <>(ByVal one As OpListType, ByVal two As OpListType) As Boolean
			  Return one.innerEnumValue <> two.innerEnumValue
		  End Operator

		  Public Shared Function valueOf(ByVal name As String) As OpListType
			  For Each enumInstance As OpListType In OpListType.valueList
				  If enumInstance.nameValue = name Then
					  Return enumInstance
				  End If
			  Next
			  Throw New System.ArgumentException(name)
		  End Function
	  End Class

	  Public Interface MappingRuleOrBuilder
		  Inherits org.nd4j.shade.protobuf.MessageOrBuilder

		''' <summary>
		''' <code>string ruleName = 1;</code>
		''' </summary>
		ReadOnly Property RuleName As String
		''' <summary>
		''' <code>string ruleName = 1;</code>
		''' </summary>
		ReadOnly Property RuleNameBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>string functionName = 2;</code>
		''' </summary>
		ReadOnly Property FunctionName As String
		''' <summary>
		''' <code>string functionName = 2;</code>
		''' </summary>
		ReadOnly Property FunctionNameBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string inputStringAttrName = 3;</code>
		''' </summary>
		ReadOnly Property InputStringAttrNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string inputStringAttrName = 3;</code>
		''' </summary>
		ReadOnly Property InputStringAttrNameCount As Integer
		''' <summary>
		''' <code>repeated string inputStringAttrName = 3;</code>
		''' </summary>
		Function getInputStringAttrName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string inputStringAttrName = 3;</code>
		''' </summary>
		Function getInputStringAttrNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string outputStringAttrName = 4;</code>
		''' </summary>
		ReadOnly Property OutputStringAttrNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string outputStringAttrName = 4;</code>
		''' </summary>
		ReadOnly Property OutputStringAttrNameCount As Integer
		''' <summary>
		''' <code>repeated string outputStringAttrName = 4;</code>
		''' </summary>
		Function getOutputStringAttrName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string outputStringAttrName = 4;</code>
		''' </summary>
		Function getOutputStringAttrNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string inputIntName = 5;</code>
		''' </summary>
		ReadOnly Property InputIntNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string inputIntName = 5;</code>
		''' </summary>
		ReadOnly Property InputIntNameCount As Integer
		''' <summary>
		''' <code>repeated string inputIntName = 5;</code>
		''' </summary>
		Function getInputIntName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string inputIntName = 5;</code>
		''' </summary>
		Function getInputIntNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string outputIntName = 6;</code>
		''' </summary>
		ReadOnly Property OutputIntNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string outputIntName = 6;</code>
		''' </summary>
		ReadOnly Property OutputIntNameCount As Integer
		''' <summary>
		''' <code>repeated string outputIntName = 6;</code>
		''' </summary>
		Function getOutputIntName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string outputIntName = 6;</code>
		''' </summary>
		Function getOutputIntNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string inputFloatName = 7;</code>
		''' </summary>
		ReadOnly Property InputFloatNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string inputFloatName = 7;</code>
		''' </summary>
		ReadOnly Property InputFloatNameCount As Integer
		''' <summary>
		''' <code>repeated string inputFloatName = 7;</code>
		''' </summary>
		Function getInputFloatName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string inputFloatName = 7;</code>
		''' </summary>
		Function getInputFloatNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string outputFloatName = 8;</code>
		''' </summary>
		ReadOnly Property OutputFloatNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string outputFloatName = 8;</code>
		''' </summary>
		ReadOnly Property OutputFloatNameCount As Integer
		''' <summary>
		''' <code>repeated string outputFloatName = 8;</code>
		''' </summary>
		Function getOutputFloatName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string outputFloatName = 8;</code>
		''' </summary>
		Function getOutputFloatNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string inputDoubleName = 9;</code>
		''' </summary>
		ReadOnly Property InputDoubleNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string inputDoubleName = 9;</code>
		''' </summary>
		ReadOnly Property InputDoubleNameCount As Integer
		''' <summary>
		''' <code>repeated string inputDoubleName = 9;</code>
		''' </summary>
		Function getInputDoubleName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string inputDoubleName = 9;</code>
		''' </summary>
		Function getInputDoubleNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string outputDoubleName = 10;</code>
		''' </summary>
		ReadOnly Property OutputDoubleNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string outputDoubleName = 10;</code>
		''' </summary>
		ReadOnly Property OutputDoubleNameCount As Integer
		''' <summary>
		''' <code>repeated string outputDoubleName = 10;</code>
		''' </summary>
		Function getOutputDoubleName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string outputDoubleName = 10;</code>
		''' </summary>
		Function getOutputDoubleNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string inputBooleanName = 11;</code>
		''' </summary>
		ReadOnly Property InputBooleanNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string inputBooleanName = 11;</code>
		''' </summary>
		ReadOnly Property InputBooleanNameCount As Integer
		''' <summary>
		''' <code>repeated string inputBooleanName = 11;</code>
		''' </summary>
		Function getInputBooleanName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string inputBooleanName = 11;</code>
		''' </summary>
		Function getInputBooleanNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string outputBooleanName = 12;</code>
		''' </summary>
		ReadOnly Property OutputBooleanNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string outputBooleanName = 12;</code>
		''' </summary>
		ReadOnly Property OutputBooleanNameCount As Integer
		''' <summary>
		''' <code>repeated string outputBooleanName = 12;</code>
		''' </summary>
		Function getOutputBooleanName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string outputBooleanName = 12;</code>
		''' </summary>
		Function getOutputBooleanNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string inputTensorName = 13;</code>
		''' </summary>
		ReadOnly Property InputTensorNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string inputTensorName = 13;</code>
		''' </summary>
		ReadOnly Property InputTensorNameCount As Integer
		''' <summary>
		''' <code>repeated string inputTensorName = 13;</code>
		''' </summary>
		Function getInputTensorName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string inputTensorName = 13;</code>
		''' </summary>
		Function getInputTensorNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string outputTensorName = 14;</code>
		''' </summary>
		ReadOnly Property OutputTensorNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string outputTensorName = 14;</code>
		''' </summary>
		ReadOnly Property OutputTensorNameCount As Integer
		''' <summary>
		''' <code>repeated string outputTensorName = 14;</code>
		''' </summary>
		Function getOutputTensorName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string outputTensorName = 14;</code>
		''' </summary>
		Function getOutputTensorNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string inputDataTypeName = 15;</code>
		''' </summary>
		ReadOnly Property InputDataTypeNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string inputDataTypeName = 15;</code>
		''' </summary>
		ReadOnly Property InputDataTypeNameCount As Integer
		''' <summary>
		''' <code>repeated string inputDataTypeName = 15;</code>
		''' </summary>
		Function getInputDataTypeName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string inputDataTypeName = 15;</code>
		''' </summary>
		Function getInputDataTypeNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated string outputDataTypeName = 16;</code>
		''' </summary>
		ReadOnly Property OutputDataTypeNameList As IList(Of String)
		''' <summary>
		''' <code>repeated string outputDataTypeName = 16;</code>
		''' </summary>
		ReadOnly Property OutputDataTypeNameCount As Integer
		''' <summary>
		''' <code>repeated string outputDataTypeName = 16;</code>
		''' </summary>
		Function getOutputDataTypeName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string outputDataTypeName = 16;</code>
		''' </summary>
		Function getOutputDataTypeNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>
		ReadOnly Property InputToOutputCount As Integer
		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>
		Function containsInputToOutput(ByVal key As String) As Boolean
		''' <summary>
		''' Use <seealso cref="getInputToOutputMap()"/> instead.
		''' </summary>
		<Obsolete>
		ReadOnly Property InputToOutput As IDictionary(Of String, String)
		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>
		ReadOnly Property InputToOutputMap As IDictionary(Of String, String)
		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>

		Function getInputToOutputOrDefault(ByVal key As String, ByVal defaultValue As String) As String
		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>

		Function getInputToOutputOrThrow(ByVal key As String) As String

		''' <summary>
		''' <code>string ruleType = 18;</code>
		''' </summary>
		ReadOnly Property RuleType As String
		''' <summary>
		''' <code>string ruleType = 18;</code>
		''' </summary>
		ReadOnly Property RuleTypeBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
		ReadOnly Property TransformerArgsList As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgs)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
		Function getTransformerArgs(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.TransformerArgs
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
		ReadOnly Property TransformerArgsCount As Integer
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: java.util.List<? extends org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder> getTransformerArgsOrBuilderList();
		ReadOnly Property TransformerArgsOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
		Function getTransformerArgsOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder

		''' <summary>
		''' <code>string inputFrameworkOpName = 20;</code>
		''' </summary>
		ReadOnly Property InputFrameworkOpName As String
		''' <summary>
		''' <code>string inputFrameworkOpName = 20;</code>
		''' </summary>
		ReadOnly Property InputFrameworkOpNameBytes As org.nd4j.shade.protobuf.ByteString
	  End Interface
	  ''' <summary>
	  ''' Protobuf type {@code org.nd4j.ir.MappingRule}
	  ''' </summary>
	  Public NotInheritable Class MappingRule
		  Inherits org.nd4j.shade.protobuf.GeneratedMessageV3
		  Implements MappingRuleOrBuilder

	  Friend Const serialVersionUID As Long = 0L
		' Use MappingRule.newBuilder() to construct.
'JAVA TO VB CONVERTER TODO TASK: Wildcard generics in constructor parameters are not converted. Move the generic type parameter and constraint to the class header:
'ORIGINAL LINE: private MappingRule(org.nd4j.shade.protobuf.GeneratedMessageV3.Builder<?> builder)
'JAVA TO VB CONVERTER NOTE: The parameter builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		Friend Sub New(ByVal builder_Conflict As org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of T1))
		  MyBase.New(builder_Conflict)
		End Sub
		Friend Sub New()
		  ruleName_ = ""
		  functionName_ = ""
		  inputStringAttrName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  outputStringAttrName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  inputIntName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  outputIntName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  inputFloatName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  outputFloatName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  inputDoubleName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  outputDoubleName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  inputBooleanName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  outputBooleanName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  inputTensorName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  outputTensorName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  inputDataTypeName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  outputDataTypeName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  ruleType_ = ""
		  transformerArgs_ = java.util.Collections.emptyList()
		  inputFrameworkOpName_ = ""
		End Sub

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @java.lang.Override @SuppressWarnings({"unused"}) protected java.lang.Object newInstance(UnusedPrivateParameter unused)
		Protected Friend Overrides Function newInstance(ByVal unused As UnusedPrivateParameter) As Object
		  Return New MappingRule()
		End Function

		Public Overrides ReadOnly Property UnknownFields As org.nd4j.shade.protobuf.UnknownFieldSet
			Get
			  Return Me.unknownFields
			End Get
		End Property
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: private MappingRule(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Friend Sub New(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
		  Me.New()
		  If extensionRegistry Is Nothing Then
			Throw New System.NullReferenceException()
		  End If
		  Dim mutable_bitField0_ As Integer = 0
		  Dim unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet.Builder = org.nd4j.shade.protobuf.UnknownFieldSet.newBuilder()
		  Try
			Dim done As Boolean = False
			Do While Not done
			  Dim tag As Integer = input.readTag()
			  Select Case tag
				Case 0
				  done = True
				Case 10
				  Dim s As String = input.readStringRequireUtf8()

				  ruleName_ = s
				Case 18
				  Dim s As String = input.readStringRequireUtf8()

				  functionName_ = s
				Case 26
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H1) <> 0) Then
					inputStringAttrName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H1
				  End If
				  inputStringAttrName_.add(s)
				Case 34
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H2) <> 0) Then
					outputStringAttrName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H2
				  End If
				  outputStringAttrName_.add(s)
				Case 42
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H4) <> 0) Then
					inputIntName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H4
				  End If
				  inputIntName_.add(s)
				Case 50
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H8) <> 0) Then
					outputIntName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H8
				  End If
				  outputIntName_.add(s)
				Case 58
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H10) <> 0) Then
					inputFloatName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H10
				  End If
				  inputFloatName_.add(s)
				Case 66
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H20) <> 0) Then
					outputFloatName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H20
				  End If
				  outputFloatName_.add(s)
				Case 74
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H40) <> 0) Then
					inputDoubleName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H40
				  End If
				  inputDoubleName_.add(s)
				Case 82
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H80) <> 0) Then
					outputDoubleName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H80
				  End If
				  outputDoubleName_.add(s)
				Case 90
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H100) <> 0) Then
					inputBooleanName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H100
				  End If
				  inputBooleanName_.add(s)
				Case 98
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H200) <> 0) Then
					outputBooleanName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H200
				  End If
				  outputBooleanName_.add(s)
				Case 106
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H400) <> 0) Then
					inputTensorName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H400
				  End If
				  inputTensorName_.add(s)
				Case 114
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H800) <> 0) Then
					outputTensorName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H800
				  End If
				  outputTensorName_.add(s)
				Case 122
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H1000) <> 0) Then
					inputDataTypeName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H1000
				  End If
				  inputDataTypeName_.add(s)
				Case 130
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H2000) <> 0) Then
					outputDataTypeName_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H2000
				  End If
				  outputDataTypeName_.add(s)
				Case 138
				  If Not ((mutable_bitField0_ And &H4000) <> 0) Then
					inputToOutput_ = org.nd4j.shade.protobuf.MapField.newMapField(InputToOutputDefaultEntryHolder.defaultEntry)
					mutable_bitField0_ = mutable_bitField0_ Or &H4000
				  End If
				  Dim inputToOutput__ As org.nd4j.shade.protobuf.MapEntry(Of String, String) = input.readMessage(InputToOutputDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry)
				  inputToOutput_.getMutableMap().put(inputToOutput__.getKey(), inputToOutput__.getValue())
				Case 146
				  Dim s As String = input.readStringRequireUtf8()

				  ruleType_ = s
				Case 154
				  If Not ((mutable_bitField0_ And &H8000) <> 0) Then
					transformerArgs_ = New List(Of org.nd4j.ir.MapperNamespace.TransformerArgs)()
					mutable_bitField0_ = mutable_bitField0_ Or &H8000
				  End If
				  transformerArgs_.Add(input.readMessage(org.nd4j.ir.MapperNamespace.TransformerArgs.parser(), extensionRegistry))
				Case 162
				  Dim s As String = input.readStringRequireUtf8()

				  inputFrameworkOpName_ = s
				Case Else
				  If Not parseUnknownField(input, unknownFields, extensionRegistry, tag) Then
					done = True
				  End If
			  End Select
			Loop
		  Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Throw e.setUnfinishedMessage(Me)
		  Catch e As java.io.IOException
			Throw (New org.nd4j.shade.protobuf.InvalidProtocolBufferException(e)).setUnfinishedMessage(Me)
		  Finally
			If ((mutable_bitField0_ And &H1) <> 0) Then
			  inputStringAttrName_ = inputStringAttrName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H2) <> 0) Then
			  outputStringAttrName_ = outputStringAttrName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H4) <> 0) Then
			  inputIntName_ = inputIntName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H8) <> 0) Then
			  outputIntName_ = outputIntName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H10) <> 0) Then
			  inputFloatName_ = inputFloatName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H20) <> 0) Then
			  outputFloatName_ = outputFloatName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H40) <> 0) Then
			  inputDoubleName_ = inputDoubleName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H80) <> 0) Then
			  outputDoubleName_ = outputDoubleName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H100) <> 0) Then
			  inputBooleanName_ = inputBooleanName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H200) <> 0) Then
			  outputBooleanName_ = outputBooleanName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H400) <> 0) Then
			  inputTensorName_ = inputTensorName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H800) <> 0) Then
			  outputTensorName_ = outputTensorName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H1000) <> 0) Then
			  inputDataTypeName_ = inputDataTypeName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H2000) <> 0) Then
			  outputDataTypeName_ = outputDataTypeName_.getUnmodifiableView()
			End If
			If ((mutable_bitField0_ And &H8000) <> 0) Then
			  transformerArgs_ = java.util.Collections.unmodifiableList(transformerArgs_)
			End If
			Me.unknownFields = unknownFields.build()
			makeExtensionsImmutable()
		  End Try
		End Sub
		Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			Get
			  Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingRule_descriptor
			End Get
		End Property

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @SuppressWarnings({"rawtypes"}) @java.lang.Override protected org.nd4j.shade.protobuf.MapField internalGetMapField(int number)
		Protected Friend Overrides Function internalGetMapField(ByVal number As Integer) As org.nd4j.shade.protobuf.MapField
		  Select Case number
			Case 17
			  Return internalGetInputToOutput()
			Case Else
			  Throw New Exception("Invalid map field number: " & number)
		  End Select
		End Function
		Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
		  Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingRule_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.MapperNamespace.MappingRule), GetType(org.nd4j.ir.MapperNamespace.MappingRule.Builder))
		End Function

		Public Const RULENAME_FIELD_NUMBER As Integer = 1
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object ruleName_;
		Friend ruleName_ As Object
		''' <summary>
		''' <code>string ruleName = 1;</code>
		''' </summary>
		Public ReadOnly Property RuleName As String Implements MappingRuleOrBuilder.getRuleName
			Get
			  Dim ref As Object = ruleName_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				ruleName_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string ruleName = 1;</code>
		''' </summary>
		Public ReadOnly Property RuleNameBytes As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getRuleNameBytes
			Get
			  Dim ref As Object = ruleName_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				ruleName_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const FUNCTIONNAME_FIELD_NUMBER As Integer = 2
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object functionName_;
		Friend functionName_ As Object
		''' <summary>
		''' <code>string functionName = 2;</code>
		''' </summary>
		Public ReadOnly Property FunctionName As String Implements MappingRuleOrBuilder.getFunctionName
			Get
			  Dim ref As Object = functionName_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				functionName_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string functionName = 2;</code>
		''' </summary>
		Public ReadOnly Property FunctionNameBytes As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getFunctionNameBytes
			Get
			  Dim ref As Object = functionName_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				functionName_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const INPUTSTRINGATTRNAME_FIELD_NUMBER As Integer = 3
		Friend inputStringAttrName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string inputStringAttrName = 3;</code>
		''' </summary>
		Public ReadOnly Property InputStringAttrNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return inputStringAttrName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputStringAttrName = 3;</code>
		''' </summary>
		Public ReadOnly Property InputStringAttrNameCount As Integer Implements MappingRuleOrBuilder.getInputStringAttrNameCount
			Get
			  Return inputStringAttrName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputStringAttrName = 3;</code>
		''' </summary>
		Public Function getInputStringAttrName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getInputStringAttrName
		  Return inputStringAttrName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string inputStringAttrName = 3;</code>
		''' </summary>
		Public Function getInputStringAttrNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getInputStringAttrNameBytes
		  Return inputStringAttrName_.getByteString(index)
		End Function

		Public Const OUTPUTSTRINGATTRNAME_FIELD_NUMBER As Integer = 4
		Friend outputStringAttrName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string outputStringAttrName = 4;</code>
		''' </summary>
		Public ReadOnly Property OutputStringAttrNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return outputStringAttrName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputStringAttrName = 4;</code>
		''' </summary>
		Public ReadOnly Property OutputStringAttrNameCount As Integer Implements MappingRuleOrBuilder.getOutputStringAttrNameCount
			Get
			  Return outputStringAttrName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputStringAttrName = 4;</code>
		''' </summary>
		Public Function getOutputStringAttrName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getOutputStringAttrName
		  Return outputStringAttrName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string outputStringAttrName = 4;</code>
		''' </summary>
		Public Function getOutputStringAttrNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getOutputStringAttrNameBytes
		  Return outputStringAttrName_.getByteString(index)
		End Function

		Public Const INPUTINTNAME_FIELD_NUMBER As Integer = 5
		Friend inputIntName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string inputIntName = 5;</code>
		''' </summary>
		Public ReadOnly Property InputIntNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return inputIntName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputIntName = 5;</code>
		''' </summary>
		Public ReadOnly Property InputIntNameCount As Integer Implements MappingRuleOrBuilder.getInputIntNameCount
			Get
			  Return inputIntName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputIntName = 5;</code>
		''' </summary>
		Public Function getInputIntName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getInputIntName
		  Return inputIntName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string inputIntName = 5;</code>
		''' </summary>
		Public Function getInputIntNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getInputIntNameBytes
		  Return inputIntName_.getByteString(index)
		End Function

		Public Const OUTPUTINTNAME_FIELD_NUMBER As Integer = 6
		Friend outputIntName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string outputIntName = 6;</code>
		''' </summary>
		Public ReadOnly Property OutputIntNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return outputIntName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputIntName = 6;</code>
		''' </summary>
		Public ReadOnly Property OutputIntNameCount As Integer Implements MappingRuleOrBuilder.getOutputIntNameCount
			Get
			  Return outputIntName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputIntName = 6;</code>
		''' </summary>
		Public Function getOutputIntName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getOutputIntName
		  Return outputIntName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string outputIntName = 6;</code>
		''' </summary>
		Public Function getOutputIntNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getOutputIntNameBytes
		  Return outputIntName_.getByteString(index)
		End Function

		Public Const INPUTFLOATNAME_FIELD_NUMBER As Integer = 7
		Friend inputFloatName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string inputFloatName = 7;</code>
		''' </summary>
		Public ReadOnly Property InputFloatNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return inputFloatName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputFloatName = 7;</code>
		''' </summary>
		Public ReadOnly Property InputFloatNameCount As Integer Implements MappingRuleOrBuilder.getInputFloatNameCount
			Get
			  Return inputFloatName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputFloatName = 7;</code>
		''' </summary>
		Public Function getInputFloatName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getInputFloatName
		  Return inputFloatName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string inputFloatName = 7;</code>
		''' </summary>
		Public Function getInputFloatNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getInputFloatNameBytes
		  Return inputFloatName_.getByteString(index)
		End Function

		Public Const OUTPUTFLOATNAME_FIELD_NUMBER As Integer = 8
		Friend outputFloatName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string outputFloatName = 8;</code>
		''' </summary>
		Public ReadOnly Property OutputFloatNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return outputFloatName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputFloatName = 8;</code>
		''' </summary>
		Public ReadOnly Property OutputFloatNameCount As Integer Implements MappingRuleOrBuilder.getOutputFloatNameCount
			Get
			  Return outputFloatName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputFloatName = 8;</code>
		''' </summary>
		Public Function getOutputFloatName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getOutputFloatName
		  Return outputFloatName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string outputFloatName = 8;</code>
		''' </summary>
		Public Function getOutputFloatNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getOutputFloatNameBytes
		  Return outputFloatName_.getByteString(index)
		End Function

		Public Const INPUTDOUBLENAME_FIELD_NUMBER As Integer = 9
		Friend inputDoubleName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string inputDoubleName = 9;</code>
		''' </summary>
		Public ReadOnly Property InputDoubleNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return inputDoubleName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputDoubleName = 9;</code>
		''' </summary>
		Public ReadOnly Property InputDoubleNameCount As Integer Implements MappingRuleOrBuilder.getInputDoubleNameCount
			Get
			  Return inputDoubleName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputDoubleName = 9;</code>
		''' </summary>
		Public Function getInputDoubleName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getInputDoubleName
		  Return inputDoubleName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string inputDoubleName = 9;</code>
		''' </summary>
		Public Function getInputDoubleNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getInputDoubleNameBytes
		  Return inputDoubleName_.getByteString(index)
		End Function

		Public Const OUTPUTDOUBLENAME_FIELD_NUMBER As Integer = 10
		Friend outputDoubleName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string outputDoubleName = 10;</code>
		''' </summary>
		Public ReadOnly Property OutputDoubleNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return outputDoubleName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputDoubleName = 10;</code>
		''' </summary>
		Public ReadOnly Property OutputDoubleNameCount As Integer Implements MappingRuleOrBuilder.getOutputDoubleNameCount
			Get
			  Return outputDoubleName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputDoubleName = 10;</code>
		''' </summary>
		Public Function getOutputDoubleName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getOutputDoubleName
		  Return outputDoubleName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string outputDoubleName = 10;</code>
		''' </summary>
		Public Function getOutputDoubleNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getOutputDoubleNameBytes
		  Return outputDoubleName_.getByteString(index)
		End Function

		Public Const INPUTBOOLEANNAME_FIELD_NUMBER As Integer = 11
		Friend inputBooleanName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string inputBooleanName = 11;</code>
		''' </summary>
		Public ReadOnly Property InputBooleanNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return inputBooleanName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputBooleanName = 11;</code>
		''' </summary>
		Public ReadOnly Property InputBooleanNameCount As Integer Implements MappingRuleOrBuilder.getInputBooleanNameCount
			Get
			  Return inputBooleanName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputBooleanName = 11;</code>
		''' </summary>
		Public Function getInputBooleanName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getInputBooleanName
		  Return inputBooleanName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string inputBooleanName = 11;</code>
		''' </summary>
		Public Function getInputBooleanNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getInputBooleanNameBytes
		  Return inputBooleanName_.getByteString(index)
		End Function

		Public Const OUTPUTBOOLEANNAME_FIELD_NUMBER As Integer = 12
		Friend outputBooleanName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string outputBooleanName = 12;</code>
		''' </summary>
		Public ReadOnly Property OutputBooleanNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return outputBooleanName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputBooleanName = 12;</code>
		''' </summary>
		Public ReadOnly Property OutputBooleanNameCount As Integer Implements MappingRuleOrBuilder.getOutputBooleanNameCount
			Get
			  Return outputBooleanName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputBooleanName = 12;</code>
		''' </summary>
		Public Function getOutputBooleanName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getOutputBooleanName
		  Return outputBooleanName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string outputBooleanName = 12;</code>
		''' </summary>
		Public Function getOutputBooleanNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getOutputBooleanNameBytes
		  Return outputBooleanName_.getByteString(index)
		End Function

		Public Const INPUTTENSORNAME_FIELD_NUMBER As Integer = 13
		Friend inputTensorName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string inputTensorName = 13;</code>
		''' </summary>
		Public ReadOnly Property InputTensorNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return inputTensorName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputTensorName = 13;</code>
		''' </summary>
		Public ReadOnly Property InputTensorNameCount As Integer Implements MappingRuleOrBuilder.getInputTensorNameCount
			Get
			  Return inputTensorName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputTensorName = 13;</code>
		''' </summary>
		Public Function getInputTensorName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getInputTensorName
		  Return inputTensorName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string inputTensorName = 13;</code>
		''' </summary>
		Public Function getInputTensorNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getInputTensorNameBytes
		  Return inputTensorName_.getByteString(index)
		End Function

		Public Const OUTPUTTENSORNAME_FIELD_NUMBER As Integer = 14
		Friend outputTensorName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string outputTensorName = 14;</code>
		''' </summary>
		Public ReadOnly Property OutputTensorNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return outputTensorName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputTensorName = 14;</code>
		''' </summary>
		Public ReadOnly Property OutputTensorNameCount As Integer Implements MappingRuleOrBuilder.getOutputTensorNameCount
			Get
			  Return outputTensorName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputTensorName = 14;</code>
		''' </summary>
		Public Function getOutputTensorName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getOutputTensorName
		  Return outputTensorName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string outputTensorName = 14;</code>
		''' </summary>
		Public Function getOutputTensorNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getOutputTensorNameBytes
		  Return outputTensorName_.getByteString(index)
		End Function

		Public Const INPUTDATATYPENAME_FIELD_NUMBER As Integer = 15
		Friend inputDataTypeName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string inputDataTypeName = 15;</code>
		''' </summary>
		Public ReadOnly Property InputDataTypeNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return inputDataTypeName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputDataTypeName = 15;</code>
		''' </summary>
		Public ReadOnly Property InputDataTypeNameCount As Integer Implements MappingRuleOrBuilder.getInputDataTypeNameCount
			Get
			  Return inputDataTypeName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string inputDataTypeName = 15;</code>
		''' </summary>
		Public Function getInputDataTypeName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getInputDataTypeName
		  Return inputDataTypeName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string inputDataTypeName = 15;</code>
		''' </summary>
		Public Function getInputDataTypeNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getInputDataTypeNameBytes
		  Return inputDataTypeName_.getByteString(index)
		End Function

		Public Const OUTPUTDATATYPENAME_FIELD_NUMBER As Integer = 16
		Friend outputDataTypeName_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string outputDataTypeName = 16;</code>
		''' </summary>
		Public ReadOnly Property OutputDataTypeNameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return outputDataTypeName_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputDataTypeName = 16;</code>
		''' </summary>
		Public ReadOnly Property OutputDataTypeNameCount As Integer Implements MappingRuleOrBuilder.getOutputDataTypeNameCount
			Get
			  Return outputDataTypeName_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string outputDataTypeName = 16;</code>
		''' </summary>
		Public Function getOutputDataTypeName(ByVal index As Integer) As String Implements MappingRuleOrBuilder.getOutputDataTypeName
		  Return outputDataTypeName_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string outputDataTypeName = 16;</code>
		''' </summary>
		Public Function getOutputDataTypeNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getOutputDataTypeNameBytes
		  Return outputDataTypeName_.getByteString(index)
		End Function

		Public Const INPUTTOOUTPUT_FIELD_NUMBER As Integer = 17
		Private NotInheritable Class InputToOutputDefaultEntryHolder
		  Friend Shared ReadOnly defaultEntry As org.nd4j.shade.protobuf.MapEntry(Of String, String) = org.nd4j.shade.protobuf.MapEntry.newDefaultInstance(Of String, String)(org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingRule_InputToOutputEntry_descriptor, org.nd4j.shade.protobuf.WireFormat.FieldType.STRING, "", org.nd4j.shade.protobuf.WireFormat.FieldType.STRING, "")
		End Class
		Friend inputToOutput_ As org.nd4j.shade.protobuf.MapField(Of String, String)
		Friend Function internalGetInputToOutput() As org.nd4j.shade.protobuf.MapField(Of String, String)
		  If inputToOutput_ Is Nothing Then
			Return org.nd4j.shade.protobuf.MapField.emptyMapField(InputToOutputDefaultEntryHolder.defaultEntry)
		  End If
		  Return inputToOutput_
		End Function

		Public ReadOnly Property InputToOutputCount As Integer Implements MappingRuleOrBuilder.getInputToOutputCount
			Get
			  Return internalGetInputToOutput().getMap().size()
			End Get
		End Property
		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>

		Public Function containsInputToOutput(ByVal key As String) As Boolean Implements MappingRuleOrBuilder.containsInputToOutput
		  If key Is Nothing Then
			  Throw New System.NullReferenceException()
		  End If
		  Return internalGetInputToOutput().getMap().containsKey(key)
		End Function
		''' <summary>
		''' Use <seealso cref="getInputToOutputMap()"/> instead.
		''' </summary>
		<Obsolete>
		Public ReadOnly Property InputToOutput As IDictionary(Of String, String) Implements MappingRuleOrBuilder.getInputToOutput
			Get
			  Return getInputToOutputMap()
			End Get
		End Property
		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>

		Public ReadOnly Property InputToOutputMap As IDictionary(Of String, String) Implements MappingRuleOrBuilder.getInputToOutputMap
			Get
			  Return internalGetInputToOutput().getMap()
			End Get
		End Property
		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>

		Public Function getInputToOutputOrDefault(ByVal key As String, ByVal defaultValue As String) As String Implements MappingRuleOrBuilder.getInputToOutputOrDefault
		  If key Is Nothing Then
			  Throw New System.NullReferenceException()
		  End If
		  Dim map As IDictionary(Of String, String) = internalGetInputToOutput().getMap()
		  Return If(map.ContainsKey(key), map(key), defaultValue)
		End Function
		''' <summary>
		''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		''' </summary>

		Public Function getInputToOutputOrThrow(ByVal key As String) As String Implements MappingRuleOrBuilder.getInputToOutputOrThrow
		  If key Is Nothing Then
			  Throw New System.NullReferenceException()
		  End If
		  Dim map As IDictionary(Of String, String) = internalGetInputToOutput().getMap()
		  If Not map.ContainsKey(key) Then
			Throw New System.ArgumentException()
		  End If
		  Return map(key)
		End Function

		Public Const RULETYPE_FIELD_NUMBER As Integer = 18
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object ruleType_;
		Friend ruleType_ As Object
		''' <summary>
		''' <code>string ruleType = 18;</code>
		''' </summary>
		Public ReadOnly Property RuleType As String Implements MappingRuleOrBuilder.getRuleType
			Get
			  Dim ref As Object = ruleType_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				ruleType_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string ruleType = 18;</code>
		''' </summary>
		Public ReadOnly Property RuleTypeBytes As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getRuleTypeBytes
			Get
			  Dim ref As Object = ruleType_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				ruleType_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const TRANSFORMERARGS_FIELD_NUMBER As Integer = 19
		Friend transformerArgs_ As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgs)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
		Public ReadOnly Property TransformerArgsList As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgs) Implements MappingRuleOrBuilder.getTransformerArgsList
			Get
			  Return transformerArgs_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder> getTransformerArgsOrBuilderList()
		Public ReadOnly Property TransformerArgsOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder) Implements MappingRuleOrBuilder.getTransformerArgsOrBuilderList
			Get
			  Return transformerArgs_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
		Public ReadOnly Property TransformerArgsCount As Integer Implements MappingRuleOrBuilder.getTransformerArgsCount
			Get
			  Return transformerArgs_.Count
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
		Public Function getTransformerArgs(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.TransformerArgs Implements MappingRuleOrBuilder.getTransformerArgs
		  Return transformerArgs_(index)
		End Function
		''' <summary>
		''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		''' </summary>
		Public Function getTransformerArgsOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder Implements MappingRuleOrBuilder.getTransformerArgsOrBuilder
		  Return transformerArgs_(index)
		End Function

		Public Const INPUTFRAMEWORKOPNAME_FIELD_NUMBER As Integer = 20
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object inputFrameworkOpName_;
		Friend inputFrameworkOpName_ As Object
		''' <summary>
		''' <code>string inputFrameworkOpName = 20;</code>
		''' </summary>
		Public ReadOnly Property InputFrameworkOpName As String Implements MappingRuleOrBuilder.getInputFrameworkOpName
			Get
			  Dim ref As Object = inputFrameworkOpName_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				inputFrameworkOpName_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string inputFrameworkOpName = 20;</code>
		''' </summary>
		Public ReadOnly Property InputFrameworkOpNameBytes As org.nd4j.shade.protobuf.ByteString Implements MappingRuleOrBuilder.getInputFrameworkOpNameBytes
			Get
			  Dim ref As Object = inputFrameworkOpName_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				inputFrameworkOpName_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Friend memoizedIsInitialized As SByte = -1
		Public Overrides ReadOnly Property Initialized As Boolean
			Get
	'JAVA TO VB CONVERTER NOTE: The local variable isInitialized was renamed since Visual Basic will not allow local variables with the same name as their enclosing function or property:
			  Dim isInitialized_Conflict As SByte = memoizedIsInitialized
			  If isInitialized_Conflict = 1 Then
				  Return True
			  End If
			  If isInitialized_Conflict = 0 Then
				  Return False
			  End If
    
			  memoizedIsInitialized = 1
			  Return True
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public void writeTo(org.nd4j.shade.protobuf.CodedOutputStream output) throws java.io.IOException
		Public Overrides Sub writeTo(ByVal output As org.nd4j.shade.protobuf.CodedOutputStream)
		  If Not RuleNameBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 1, ruleName_)
		  End If
		  If Not FunctionNameBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 2, functionName_)
		  End If
		  For i As Integer = 0 To inputStringAttrName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 3, inputStringAttrName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To outputStringAttrName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 4, outputStringAttrName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To inputIntName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 5, inputIntName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To outputIntName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 6, outputIntName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To inputFloatName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 7, inputFloatName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To outputFloatName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 8, outputFloatName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To inputDoubleName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 9, inputDoubleName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To outputDoubleName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 10, outputDoubleName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To inputBooleanName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 11, inputBooleanName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To outputBooleanName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 12, outputBooleanName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To inputTensorName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 13, inputTensorName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To outputTensorName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 14, outputTensorName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To inputDataTypeName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 15, inputDataTypeName_.getRaw(i))
		  Next i
		  For i As Integer = 0 To outputDataTypeName_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 16, outputDataTypeName_.getRaw(i))
		  Next i
		  org.nd4j.shade.protobuf.GeneratedMessageV3.serializeStringMapTo(output, internalGetInputToOutput(), InputToOutputDefaultEntryHolder.defaultEntry, 17)
		  If Not RuleTypeBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 18, ruleType_)
		  End If
		  For i As Integer = 0 To transformerArgs_.Count - 1
			output.writeMessage(19, transformerArgs_(i))
		  Next i
		  If Not InputFrameworkOpNameBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 20, inputFrameworkOpName_)
		  End If
		  unknownFields.writeTo(output)
		End Sub

		Public Overrides ReadOnly Property SerializedSize As Integer
			Get
			  Dim size As Integer = memoizedSize
			  If size <> -1 Then
				  Return size
			  End If
    
			  size = 0
			  If Not RuleNameBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(1, ruleName_)
			  End If
			  If Not FunctionNameBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(2, functionName_)
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To inputStringAttrName_.size() - 1
				  dataSize += computeStringSizeNoTag(inputStringAttrName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * InputStringAttrNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To outputStringAttrName_.size() - 1
				  dataSize += computeStringSizeNoTag(outputStringAttrName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * OutputStringAttrNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To inputIntName_.size() - 1
				  dataSize += computeStringSizeNoTag(inputIntName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * InputIntNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To outputIntName_.size() - 1
				  dataSize += computeStringSizeNoTag(outputIntName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * OutputIntNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To inputFloatName_.size() - 1
				  dataSize += computeStringSizeNoTag(inputFloatName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * InputFloatNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To outputFloatName_.size() - 1
				  dataSize += computeStringSizeNoTag(outputFloatName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * OutputFloatNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To inputDoubleName_.size() - 1
				  dataSize += computeStringSizeNoTag(inputDoubleName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * InputDoubleNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To outputDoubleName_.size() - 1
				  dataSize += computeStringSizeNoTag(outputDoubleName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * OutputDoubleNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To inputBooleanName_.size() - 1
				  dataSize += computeStringSizeNoTag(inputBooleanName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * InputBooleanNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To outputBooleanName_.size() - 1
				  dataSize += computeStringSizeNoTag(outputBooleanName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * OutputBooleanNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To inputTensorName_.size() - 1
				  dataSize += computeStringSizeNoTag(inputTensorName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * InputTensorNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To outputTensorName_.size() - 1
				  dataSize += computeStringSizeNoTag(outputTensorName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * OutputTensorNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To inputDataTypeName_.size() - 1
				  dataSize += computeStringSizeNoTag(inputDataTypeName_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * InputDataTypeNameList.size()
			  End If
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To outputDataTypeName_.size() - 1
				  dataSize += computeStringSizeNoTag(outputDataTypeName_.getRaw(i))
				Next i
				size += dataSize
				size += 2 * OutputDataTypeNameList.size()
			  End If
			  For Each entry As KeyValuePair(Of String, String) In internalGetInputToOutput().getMap().entrySet()
				Dim inputToOutput__ As org.nd4j.shade.protobuf.MapEntry(Of String, String) = InputToOutputDefaultEntryHolder.defaultEntry.newBuilderForType().setKey(entry.Key).setValue(entry.Value).build()
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(17, inputToOutput__)
			  Next entry
			  If Not RuleTypeBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(18, ruleType_)
			  End If
			  For i As Integer = 0 To transformerArgs_.Count - 1
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(19, transformerArgs_(i))
			  Next i
			  If Not InputFrameworkOpNameBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(20, inputFrameworkOpName_)
			  End If
			  size += unknownFields.getSerializedSize()
			  memoizedSize = size
			  Return size
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public boolean equals(final java.lang.Object obj)
		Public Overrides Function Equals(ByVal obj As Object) As Boolean
		  If obj Is Me Then
		   Return True
		  End If
		  If Not (TypeOf obj Is org.nd4j.ir.MapperNamespace.MappingRule) Then
			Return MyBase.Equals(obj)
		  End If
		  Dim other As org.nd4j.ir.MapperNamespace.MappingRule = DirectCast(obj, org.nd4j.ir.MapperNamespace.MappingRule)

		  If Not RuleName.Equals(other.RuleName) Then
			  Return False
		  End If
		  If Not FunctionName.Equals(other.FunctionName) Then
			  Return False
		  End If
		  If Not InputStringAttrNameList.Equals(other.InputStringAttrNameList) Then
			  Return False
		  End If
		  If Not OutputStringAttrNameList.Equals(other.OutputStringAttrNameList) Then
			  Return False
		  End If
		  If Not InputIntNameList.Equals(other.InputIntNameList) Then
			  Return False
		  End If
		  If Not OutputIntNameList.Equals(other.OutputIntNameList) Then
			  Return False
		  End If
		  If Not InputFloatNameList.Equals(other.InputFloatNameList) Then
			  Return False
		  End If
		  If Not OutputFloatNameList.Equals(other.OutputFloatNameList) Then
			  Return False
		  End If
		  If Not InputDoubleNameList.Equals(other.InputDoubleNameList) Then
			  Return False
		  End If
		  If Not OutputDoubleNameList.Equals(other.OutputDoubleNameList) Then
			  Return False
		  End If
		  If Not InputBooleanNameList.Equals(other.InputBooleanNameList) Then
			  Return False
		  End If
		  If Not OutputBooleanNameList.Equals(other.OutputBooleanNameList) Then
			  Return False
		  End If
		  If Not InputTensorNameList.Equals(other.InputTensorNameList) Then
			  Return False
		  End If
		  If Not OutputTensorNameList.Equals(other.OutputTensorNameList) Then
			  Return False
		  End If
		  If Not InputDataTypeNameList.Equals(other.InputDataTypeNameList) Then
			  Return False
		  End If
		  If Not OutputDataTypeNameList.Equals(other.OutputDataTypeNameList) Then
			  Return False
		  End If
		  If Not internalGetInputToOutput().Equals(other.internalGetInputToOutput()) Then
			  Return False
		  End If
		  If Not RuleType.Equals(other.RuleType) Then
			  Return False
		  End If
'JAVA TO VB CONVERTER WARNING: LINQ 'SequenceEqual' is not always identical to Java AbstractList 'equals':
'ORIGINAL LINE: if (!getTransformerArgsList().equals(other.getTransformerArgsList()))
		  If Not getTransformerArgsList().SequenceEqual(other.getTransformerArgsList()) Then
			  Return False
		  End If
		  If Not InputFrameworkOpName.Equals(other.InputFrameworkOpName) Then
			  Return False
		  End If
		  If Not unknownFields.Equals(other.unknownFields) Then
			  Return False
		  End If
		  Return True
		End Function

		Public Overrides Function GetHashCode() As Integer
		  If memoizedHashCode <> 0 Then
			Return memoizedHashCode
		  End If
		  Dim hash As Integer = 41
		  hash = (19 * hash) + Descriptor.GetHashCode()
		  hash = (37 * hash) + RULENAME_FIELD_NUMBER
		  hash = (53 * hash) + RuleName.GetHashCode()
		  hash = (37 * hash) + FUNCTIONNAME_FIELD_NUMBER
		  hash = (53 * hash) + FunctionName.GetHashCode()
		  If InputStringAttrNameCount > 0 Then
			hash = (37 * hash) + INPUTSTRINGATTRNAME_FIELD_NUMBER
			hash = (53 * hash) + InputStringAttrNameList.GetHashCode()
		  End If
		  If OutputStringAttrNameCount > 0 Then
			hash = (37 * hash) + OUTPUTSTRINGATTRNAME_FIELD_NUMBER
			hash = (53 * hash) + OutputStringAttrNameList.GetHashCode()
		  End If
		  If InputIntNameCount > 0 Then
			hash = (37 * hash) + INPUTINTNAME_FIELD_NUMBER
			hash = (53 * hash) + InputIntNameList.GetHashCode()
		  End If
		  If OutputIntNameCount > 0 Then
			hash = (37 * hash) + OUTPUTINTNAME_FIELD_NUMBER
			hash = (53 * hash) + OutputIntNameList.GetHashCode()
		  End If
		  If InputFloatNameCount > 0 Then
			hash = (37 * hash) + INPUTFLOATNAME_FIELD_NUMBER
			hash = (53 * hash) + InputFloatNameList.GetHashCode()
		  End If
		  If OutputFloatNameCount > 0 Then
			hash = (37 * hash) + OUTPUTFLOATNAME_FIELD_NUMBER
			hash = (53 * hash) + OutputFloatNameList.GetHashCode()
		  End If
		  If InputDoubleNameCount > 0 Then
			hash = (37 * hash) + INPUTDOUBLENAME_FIELD_NUMBER
			hash = (53 * hash) + InputDoubleNameList.GetHashCode()
		  End If
		  If OutputDoubleNameCount > 0 Then
			hash = (37 * hash) + OUTPUTDOUBLENAME_FIELD_NUMBER
			hash = (53 * hash) + OutputDoubleNameList.GetHashCode()
		  End If
		  If InputBooleanNameCount > 0 Then
			hash = (37 * hash) + INPUTBOOLEANNAME_FIELD_NUMBER
			hash = (53 * hash) + InputBooleanNameList.GetHashCode()
		  End If
		  If OutputBooleanNameCount > 0 Then
			hash = (37 * hash) + OUTPUTBOOLEANNAME_FIELD_NUMBER
			hash = (53 * hash) + OutputBooleanNameList.GetHashCode()
		  End If
		  If InputTensorNameCount > 0 Then
			hash = (37 * hash) + INPUTTENSORNAME_FIELD_NUMBER
			hash = (53 * hash) + InputTensorNameList.GetHashCode()
		  End If
		  If OutputTensorNameCount > 0 Then
			hash = (37 * hash) + OUTPUTTENSORNAME_FIELD_NUMBER
			hash = (53 * hash) + OutputTensorNameList.GetHashCode()
		  End If
		  If InputDataTypeNameCount > 0 Then
			hash = (37 * hash) + INPUTDATATYPENAME_FIELD_NUMBER
			hash = (53 * hash) + InputDataTypeNameList.GetHashCode()
		  End If
		  If OutputDataTypeNameCount > 0 Then
			hash = (37 * hash) + OUTPUTDATATYPENAME_FIELD_NUMBER
			hash = (53 * hash) + OutputDataTypeNameList.GetHashCode()
		  End If
		  If Not internalGetInputToOutput().getMap().isEmpty() Then
			hash = (37 * hash) + INPUTTOOUTPUT_FIELD_NUMBER
			hash = (53 * hash) + internalGetInputToOutput().GetHashCode()
		  End If
		  hash = (37 * hash) + RULETYPE_FIELD_NUMBER
		  hash = (53 * hash) + RuleType.GetHashCode()
		  If TransformerArgsCount > 0 Then
			hash = (37 * hash) + TRANSFORMERARGS_FIELD_NUMBER
			hash = (53 * hash) + getTransformerArgsList().GetHashCode()
		  End If
		  hash = (37 * hash) + INPUTFRAMEWORKOPNAME_FIELD_NUMBER
		  hash = (53 * hash) + InputFrameworkOpName.GetHashCode()
		  hash = (29 * hash) + unknownFields.GetHashCode()
		  memoizedHashCode = hash
		  Return hash
		End Function

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(java.nio.ByteBuffer data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(java.nio.ByteBuffer data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(org.nd4j.shade.protobuf.ByteString data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(org.nd4j.shade.protobuf.ByteString data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(byte[] data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(byte[] data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseDelimitedFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(org.nd4j.shade.protobuf.CodedInputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingRule parseFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingRule
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function

		Public Overrides Function newBuilderForType() As Builder
			Return newBuilder()
		End Function
		Public Shared Function newBuilder() As Builder
		  Return DEFAULT_INSTANCE.toBuilder()
		End Function
		Public Shared Function newBuilder(ByVal prototype As org.nd4j.ir.MapperNamespace.MappingRule) As Builder
		  Return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype)
		End Function
		Public Overrides Function toBuilder() As Builder
		  Return If(Me Is DEFAULT_INSTANCE, New Builder(), (New Builder()).mergeFrom(Me))
		End Function

		Protected Friend Overrides Function newBuilderForType(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent) As Builder
'JAVA TO VB CONVERTER NOTE: The variable builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		  Dim builder_Conflict As New Builder(parent)
		  Return builder_Conflict
		End Function
		''' <summary>
		''' Protobuf type {@code org.nd4j.ir.MappingRule}
		''' </summary>
		Public NotInheritable Class Builder
			Inherits org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of Builder)
			Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder

		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingRule_descriptor
			  End Get
		  End Property

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @SuppressWarnings({"rawtypes"}) protected org.nd4j.shade.protobuf.MapField internalGetMapField(int number)
		  Protected Friend Function internalGetMapField(ByVal number As Integer) As org.nd4j.shade.protobuf.MapField
			Select Case number
			  Case 17
				Return internalGetInputToOutput()
			  Case Else
				Throw New Exception("Invalid map field number: " & number)
			End Select
		  End Function
'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @SuppressWarnings({"rawtypes"}) protected org.nd4j.shade.protobuf.MapField internalGetMutableMapField(int number)
		  Protected Friend Function internalGetMutableMapField(ByVal number As Integer) As org.nd4j.shade.protobuf.MapField
			Select Case number
			  Case 17
				Return internalGetMutableInputToOutput()
			  Case Else
				Throw New Exception("Invalid map field number: " & number)
			End Select
		  End Function
		  Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
			Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingRule_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.MapperNamespace.MappingRule), GetType(org.nd4j.ir.MapperNamespace.MappingRule.Builder))
		  End Function

		  ' Construct using org.nd4j.ir.MapperNamespace.MappingRule.newBuilder()
		  Friend Sub New()
			maybeForceBuilderInitialization()
		  End Sub

		  Friend Sub New(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent)
			MyBase.New(parent)
			maybeForceBuilderInitialization()
		  End Sub
		  Friend Sub maybeForceBuilderInitialization()
			If org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders Then
			  getTransformerArgsFieldBuilder()
			End If
		  End Sub
		  Public Overrides Function clear() As Builder
			MyBase.clear()
			ruleName_ = ""

			functionName_ = ""

			inputStringAttrName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H1)
			outputStringAttrName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H2)
			inputIntName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H4)
			outputIntName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H8)
			inputFloatName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H10)
			outputFloatName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H20)
			inputDoubleName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H40)
			outputDoubleName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H80)
			inputBooleanName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H100)
			outputBooleanName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H200)
			inputTensorName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H400)
			outputTensorName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H800)
			inputDataTypeName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H1000)
			outputDataTypeName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H2000)
			internalGetMutableInputToOutput().clear()
			ruleType_ = ""

			If transformerArgsBuilder_ Is Nothing Then
			  transformerArgs_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H8000)
			Else
			  transformerArgsBuilder_.clear()
			End If
			inputFrameworkOpName_ = ""

			Return Me
		  End Function

		  Public Overrides ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingRule_descriptor
			  End Get
		  End Property

		  Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.MapperNamespace.MappingRule
			  Get
				Return org.nd4j.ir.MapperNamespace.MappingRule.DefaultInstance
			  End Get
		  End Property

		  Public Overrides Function build() As org.nd4j.ir.MapperNamespace.MappingRule
			Dim result As org.nd4j.ir.MapperNamespace.MappingRule = buildPartial()
			If Not result.Initialized Then
			  Throw newUninitializedMessageException(result)
			End If
			Return result
		  End Function

		  Public Overrides Function buildPartial() As org.nd4j.ir.MapperNamespace.MappingRule
			Dim result As New org.nd4j.ir.MapperNamespace.MappingRule(Me)
			Dim from_bitField0_ As Integer = bitField0_
			result.ruleName_ = ruleName_
			result.functionName_ = functionName_
			If ((bitField0_ And &H1) <> 0) Then
			  inputStringAttrName_ = inputStringAttrName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H1)
			End If
			result.inputStringAttrName_ = inputStringAttrName_
			If ((bitField0_ And &H2) <> 0) Then
			  outputStringAttrName_ = outputStringAttrName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H2)
			End If
			result.outputStringAttrName_ = outputStringAttrName_
			If ((bitField0_ And &H4) <> 0) Then
			  inputIntName_ = inputIntName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H4)
			End If
			result.inputIntName_ = inputIntName_
			If ((bitField0_ And &H8) <> 0) Then
			  outputIntName_ = outputIntName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H8)
			End If
			result.outputIntName_ = outputIntName_
			If ((bitField0_ And &H10) <> 0) Then
			  inputFloatName_ = inputFloatName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H10)
			End If
			result.inputFloatName_ = inputFloatName_
			If ((bitField0_ And &H20) <> 0) Then
			  outputFloatName_ = outputFloatName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H20)
			End If
			result.outputFloatName_ = outputFloatName_
			If ((bitField0_ And &H40) <> 0) Then
			  inputDoubleName_ = inputDoubleName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H40)
			End If
			result.inputDoubleName_ = inputDoubleName_
			If ((bitField0_ And &H80) <> 0) Then
			  outputDoubleName_ = outputDoubleName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H80)
			End If
			result.outputDoubleName_ = outputDoubleName_
			If ((bitField0_ And &H100) <> 0) Then
			  inputBooleanName_ = inputBooleanName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H100)
			End If
			result.inputBooleanName_ = inputBooleanName_
			If ((bitField0_ And &H200) <> 0) Then
			  outputBooleanName_ = outputBooleanName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H200)
			End If
			result.outputBooleanName_ = outputBooleanName_
			If ((bitField0_ And &H400) <> 0) Then
			  inputTensorName_ = inputTensorName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H400)
			End If
			result.inputTensorName_ = inputTensorName_
			If ((bitField0_ And &H800) <> 0) Then
			  outputTensorName_ = outputTensorName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H800)
			End If
			result.outputTensorName_ = outputTensorName_
			If ((bitField0_ And &H1000) <> 0) Then
			  inputDataTypeName_ = inputDataTypeName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H1000)
			End If
			result.inputDataTypeName_ = inputDataTypeName_
			If ((bitField0_ And &H2000) <> 0) Then
			  outputDataTypeName_ = outputDataTypeName_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H2000)
			End If
			result.outputDataTypeName_ = outputDataTypeName_
			result.inputToOutput_ = internalGetInputToOutput()
			result.inputToOutput_.makeImmutable()
			result.ruleType_ = ruleType_
			If transformerArgsBuilder_ Is Nothing Then
			  If ((bitField0_ And &H8000) <> 0) Then
				transformerArgs_ = java.util.Collections.unmodifiableList(transformerArgs_)
				bitField0_ = (bitField0_ And Not &H8000)
			  End If
			  result.transformerArgs_ = transformerArgs_
			Else
			  result.transformerArgs_ = transformerArgsBuilder_.build()
			End If
			result.inputFrameworkOpName_ = inputFrameworkOpName_
			onBuilt()
			Return result
		  End Function

		  Public Overrides Function clone() As Builder
			Return MyBase.clone()
		  End Function
		  Public Overrides Function setField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.setField(field, value)
		  End Function
		  Public Overrides Function clearField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor) As Builder
			Return MyBase.clearField(field)
		  End Function
		  Public Overrides Function clearOneof(ByVal oneof As org.nd4j.shade.protobuf.Descriptors.OneofDescriptor) As Builder
			Return MyBase.clearOneof(oneof)
		  End Function
		  Public Overrides Function setRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal index As Integer, ByVal value As Object) As Builder
			Return MyBase.setRepeatedField(field, index, value)
		  End Function
		  Public Overrides Function addRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.addRepeatedField(field, value)
		  End Function
		  Public Overrides Function mergeFrom(ByVal other As org.nd4j.shade.protobuf.Message) As Builder
			If TypeOf other Is org.nd4j.ir.MapperNamespace.MappingRule Then
			  Return mergeFrom(CType(other, org.nd4j.ir.MapperNamespace.MappingRule))
			Else
			  MyBase.mergeFrom(other)
			  Return Me
			End If
		  End Function

		  Public Function mergeFrom(ByVal other As org.nd4j.ir.MapperNamespace.MappingRule) As Builder
			If other Is org.nd4j.ir.MapperNamespace.MappingRule.DefaultInstance Then
				Return Me
			End If
			If other.RuleName.Length > 0 Then
			  ruleName_ = other.ruleName_
			  onChanged()
			End If
			If other.FunctionName.Length > 0 Then
			  functionName_ = other.functionName_
			  onChanged()
			End If
			If Not other.inputStringAttrName_.isEmpty() Then
			  If inputStringAttrName_.isEmpty() Then
				inputStringAttrName_ = other.inputStringAttrName_
				bitField0_ = (bitField0_ And Not &H1)
			  Else
				ensureInputStringAttrNameIsMutable()
				inputStringAttrName_.addAll(other.inputStringAttrName_)
			  End If
			  onChanged()
			End If
			If Not other.outputStringAttrName_.isEmpty() Then
			  If outputStringAttrName_.isEmpty() Then
				outputStringAttrName_ = other.outputStringAttrName_
				bitField0_ = (bitField0_ And Not &H2)
			  Else
				ensureOutputStringAttrNameIsMutable()
				outputStringAttrName_.addAll(other.outputStringAttrName_)
			  End If
			  onChanged()
			End If
			If Not other.inputIntName_.isEmpty() Then
			  If inputIntName_.isEmpty() Then
				inputIntName_ = other.inputIntName_
				bitField0_ = (bitField0_ And Not &H4)
			  Else
				ensureInputIntNameIsMutable()
				inputIntName_.addAll(other.inputIntName_)
			  End If
			  onChanged()
			End If
			If Not other.outputIntName_.isEmpty() Then
			  If outputIntName_.isEmpty() Then
				outputIntName_ = other.outputIntName_
				bitField0_ = (bitField0_ And Not &H8)
			  Else
				ensureOutputIntNameIsMutable()
				outputIntName_.addAll(other.outputIntName_)
			  End If
			  onChanged()
			End If
			If Not other.inputFloatName_.isEmpty() Then
			  If inputFloatName_.isEmpty() Then
				inputFloatName_ = other.inputFloatName_
				bitField0_ = (bitField0_ And Not &H10)
			  Else
				ensureInputFloatNameIsMutable()
				inputFloatName_.addAll(other.inputFloatName_)
			  End If
			  onChanged()
			End If
			If Not other.outputFloatName_.isEmpty() Then
			  If outputFloatName_.isEmpty() Then
				outputFloatName_ = other.outputFloatName_
				bitField0_ = (bitField0_ And Not &H20)
			  Else
				ensureOutputFloatNameIsMutable()
				outputFloatName_.addAll(other.outputFloatName_)
			  End If
			  onChanged()
			End If
			If Not other.inputDoubleName_.isEmpty() Then
			  If inputDoubleName_.isEmpty() Then
				inputDoubleName_ = other.inputDoubleName_
				bitField0_ = (bitField0_ And Not &H40)
			  Else
				ensureInputDoubleNameIsMutable()
				inputDoubleName_.addAll(other.inputDoubleName_)
			  End If
			  onChanged()
			End If
			If Not other.outputDoubleName_.isEmpty() Then
			  If outputDoubleName_.isEmpty() Then
				outputDoubleName_ = other.outputDoubleName_
				bitField0_ = (bitField0_ And Not &H80)
			  Else
				ensureOutputDoubleNameIsMutable()
				outputDoubleName_.addAll(other.outputDoubleName_)
			  End If
			  onChanged()
			End If
			If Not other.inputBooleanName_.isEmpty() Then
			  If inputBooleanName_.isEmpty() Then
				inputBooleanName_ = other.inputBooleanName_
				bitField0_ = (bitField0_ And Not &H100)
			  Else
				ensureInputBooleanNameIsMutable()
				inputBooleanName_.addAll(other.inputBooleanName_)
			  End If
			  onChanged()
			End If
			If Not other.outputBooleanName_.isEmpty() Then
			  If outputBooleanName_.isEmpty() Then
				outputBooleanName_ = other.outputBooleanName_
				bitField0_ = (bitField0_ And Not &H200)
			  Else
				ensureOutputBooleanNameIsMutable()
				outputBooleanName_.addAll(other.outputBooleanName_)
			  End If
			  onChanged()
			End If
			If Not other.inputTensorName_.isEmpty() Then
			  If inputTensorName_.isEmpty() Then
				inputTensorName_ = other.inputTensorName_
				bitField0_ = (bitField0_ And Not &H400)
			  Else
				ensureInputTensorNameIsMutable()
				inputTensorName_.addAll(other.inputTensorName_)
			  End If
			  onChanged()
			End If
			If Not other.outputTensorName_.isEmpty() Then
			  If outputTensorName_.isEmpty() Then
				outputTensorName_ = other.outputTensorName_
				bitField0_ = (bitField0_ And Not &H800)
			  Else
				ensureOutputTensorNameIsMutable()
				outputTensorName_.addAll(other.outputTensorName_)
			  End If
			  onChanged()
			End If
			If Not other.inputDataTypeName_.isEmpty() Then
			  If inputDataTypeName_.isEmpty() Then
				inputDataTypeName_ = other.inputDataTypeName_
				bitField0_ = (bitField0_ And Not &H1000)
			  Else
				ensureInputDataTypeNameIsMutable()
				inputDataTypeName_.addAll(other.inputDataTypeName_)
			  End If
			  onChanged()
			End If
			If Not other.outputDataTypeName_.isEmpty() Then
			  If outputDataTypeName_.isEmpty() Then
				outputDataTypeName_ = other.outputDataTypeName_
				bitField0_ = (bitField0_ And Not &H2000)
			  Else
				ensureOutputDataTypeNameIsMutable()
				outputDataTypeName_.addAll(other.outputDataTypeName_)
			  End If
			  onChanged()
			End If
			internalGetMutableInputToOutput().mergeFrom(other.internalGetInputToOutput())
			If other.RuleType.Length > 0 Then
			  ruleType_ = other.ruleType_
			  onChanged()
			End If
			If transformerArgsBuilder_ Is Nothing Then
			  If other.transformerArgs_.Count > 0 Then
				If transformerArgs_.Count = 0 Then
				  transformerArgs_ = other.transformerArgs_
				  bitField0_ = (bitField0_ And Not &H8000)
				Else
				  ensureTransformerArgsIsMutable()
				  CType(transformerArgs_, List(Of org.nd4j.ir.MapperNamespace.TransformerArgs)).AddRange(other.transformerArgs_)
				End If
				onChanged()
			  End If
			Else
			  If other.transformerArgs_.Count > 0 Then
				If transformerArgsBuilder_.isEmpty() Then
				  transformerArgsBuilder_.dispose()
				  transformerArgsBuilder_ = Nothing
				  transformerArgs_ = other.transformerArgs_
				  bitField0_ = (bitField0_ And Not &H8000)
				  transformerArgsBuilder_ = If(org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders, getTransformerArgsFieldBuilder(), Nothing)
				Else
				  transformerArgsBuilder_.addAllMessages(other.transformerArgs_)
				End If
			  End If
			End If
			If other.InputFrameworkOpName.Length > 0 Then
			  inputFrameworkOpName_ = other.inputFrameworkOpName_
			  onChanged()
			End If
			Me.mergeUnknownFields(other.unknownFields)
			onChanged()
			Return Me
		  End Function

		  Public Overrides ReadOnly Property Initialized As Boolean
			  Get
				Return True
			  End Get
		  End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public Builder mergeFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		  Public Overrides Function mergeFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As Builder
			Dim parsedMessage As org.nd4j.ir.MapperNamespace.MappingRule = Nothing
			Try
			  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
			Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			  parsedMessage = CType(e.getUnfinishedMessage(), org.nd4j.ir.MapperNamespace.MappingRule)
			  Throw e.unwrapIOException()
			Finally
			  If parsedMessage IsNot Nothing Then
				mergeFrom(parsedMessage)
			  End If
			End Try
			Return Me
		  End Function
		  Friend bitField0_ As Integer

		  Friend ruleName_ As Object = ""
		  ''' <summary>
		  ''' <code>string ruleName = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property RuleName As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getRuleName
			  Get
				Dim ref As Object = ruleName_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  ruleName_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string ruleName = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property RuleNameBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getRuleNameBytes
			  Get
				Dim ref As Object = ruleName_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  ruleName_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string ruleName = 1;</code>
		  ''' </summary>
		  Public Function setRuleName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			ruleName_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string ruleName = 1;</code>
		  ''' </summary>
		  Public Function clearRuleName() As Builder

			ruleName_ = DefaultInstance.RuleName
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string ruleName = 1;</code>
		  ''' </summary>
		  Public Function setRuleNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			ruleName_ = value
			onChanged()
			Return Me
		  End Function

		  Friend functionName_ As Object = ""
		  ''' <summary>
		  ''' <code>string functionName = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property FunctionName As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getFunctionName
			  Get
				Dim ref As Object = functionName_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  functionName_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string functionName = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property FunctionNameBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getFunctionNameBytes
			  Get
				Dim ref As Object = functionName_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  functionName_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string functionName = 2;</code>
		  ''' </summary>
		  Public Function setFunctionName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			functionName_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string functionName = 2;</code>
		  ''' </summary>
		  Public Function clearFunctionName() As Builder

			functionName_ = DefaultInstance.FunctionName
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string functionName = 2;</code>
		  ''' </summary>
		  Public Function setFunctionNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			functionName_ = value
			onChanged()
			Return Me
		  End Function

		  Friend inputStringAttrName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureInputStringAttrNameIsMutable()
			If Not ((bitField0_ And &H1) <> 0) Then
			  inputStringAttrName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(inputStringAttrName_)
			  bitField0_ = bitField0_ Or &H1
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public ReadOnly Property InputStringAttrNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return inputStringAttrName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public ReadOnly Property InputStringAttrNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputStringAttrNameCount
			  Get
				Return inputStringAttrName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public Function getInputStringAttrName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputStringAttrName
			Return inputStringAttrName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public Function getInputStringAttrNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputStringAttrNameBytes
			Return inputStringAttrName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public Function setInputStringAttrName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputStringAttrNameIsMutable()
			inputStringAttrName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public Function addInputStringAttrName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputStringAttrNameIsMutable()
			inputStringAttrName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public Function addAllInputStringAttrName(ByVal values As IEnumerable(Of String)) As Builder
			ensureInputStringAttrNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, inputStringAttrName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public Function clearInputStringAttrName() As Builder
			inputStringAttrName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H1)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputStringAttrName = 3;</code>
		  ''' </summary>
		  Public Function addInputStringAttrNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureInputStringAttrNameIsMutable()
			inputStringAttrName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend outputStringAttrName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureOutputStringAttrNameIsMutable()
			If Not ((bitField0_ And &H2) <> 0) Then
			  outputStringAttrName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(outputStringAttrName_)
			  bitField0_ = bitField0_ Or &H2
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputStringAttrNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return outputStringAttrName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputStringAttrNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputStringAttrNameCount
			  Get
				Return outputStringAttrName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public Function getOutputStringAttrName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputStringAttrName
			Return outputStringAttrName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public Function getOutputStringAttrNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputStringAttrNameBytes
			Return outputStringAttrName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public Function setOutputStringAttrName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputStringAttrNameIsMutable()
			outputStringAttrName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public Function addOutputStringAttrName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputStringAttrNameIsMutable()
			outputStringAttrName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public Function addAllOutputStringAttrName(ByVal values As IEnumerable(Of String)) As Builder
			ensureOutputStringAttrNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, outputStringAttrName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public Function clearOutputStringAttrName() As Builder
			outputStringAttrName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H2)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputStringAttrName = 4;</code>
		  ''' </summary>
		  Public Function addOutputStringAttrNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureOutputStringAttrNameIsMutable()
			outputStringAttrName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend inputIntName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureInputIntNameIsMutable()
			If Not ((bitField0_ And &H4) <> 0) Then
			  inputIntName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(inputIntName_)
			  bitField0_ = bitField0_ Or &H4
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public ReadOnly Property InputIntNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return inputIntName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public ReadOnly Property InputIntNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputIntNameCount
			  Get
				Return inputIntName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public Function getInputIntName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputIntName
			Return inputIntName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public Function getInputIntNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputIntNameBytes
			Return inputIntName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public Function setInputIntName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputIntNameIsMutable()
			inputIntName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public Function addInputIntName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputIntNameIsMutable()
			inputIntName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public Function addAllInputIntName(ByVal values As IEnumerable(Of String)) As Builder
			ensureInputIntNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, inputIntName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public Function clearInputIntName() As Builder
			inputIntName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H4)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputIntName = 5;</code>
		  ''' </summary>
		  Public Function addInputIntNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureInputIntNameIsMutable()
			inputIntName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend outputIntName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureOutputIntNameIsMutable()
			If Not ((bitField0_ And &H8) <> 0) Then
			  outputIntName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(outputIntName_)
			  bitField0_ = bitField0_ Or &H8
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputIntNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return outputIntName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputIntNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputIntNameCount
			  Get
				Return outputIntName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public Function getOutputIntName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputIntName
			Return outputIntName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public Function getOutputIntNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputIntNameBytes
			Return outputIntName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public Function setOutputIntName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputIntNameIsMutable()
			outputIntName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public Function addOutputIntName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputIntNameIsMutable()
			outputIntName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public Function addAllOutputIntName(ByVal values As IEnumerable(Of String)) As Builder
			ensureOutputIntNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, outputIntName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public Function clearOutputIntName() As Builder
			outputIntName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H8)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputIntName = 6;</code>
		  ''' </summary>
		  Public Function addOutputIntNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureOutputIntNameIsMutable()
			outputIntName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend inputFloatName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureInputFloatNameIsMutable()
			If Not ((bitField0_ And &H10) <> 0) Then
			  inputFloatName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(inputFloatName_)
			  bitField0_ = bitField0_ Or &H10
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public ReadOnly Property InputFloatNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return inputFloatName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public ReadOnly Property InputFloatNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputFloatNameCount
			  Get
				Return inputFloatName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public Function getInputFloatName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputFloatName
			Return inputFloatName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public Function getInputFloatNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputFloatNameBytes
			Return inputFloatName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public Function setInputFloatName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputFloatNameIsMutable()
			inputFloatName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public Function addInputFloatName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputFloatNameIsMutable()
			inputFloatName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public Function addAllInputFloatName(ByVal values As IEnumerable(Of String)) As Builder
			ensureInputFloatNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, inputFloatName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public Function clearInputFloatName() As Builder
			inputFloatName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H10)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputFloatName = 7;</code>
		  ''' </summary>
		  Public Function addInputFloatNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureInputFloatNameIsMutable()
			inputFloatName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend outputFloatName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureOutputFloatNameIsMutable()
			If Not ((bitField0_ And &H20) <> 0) Then
			  outputFloatName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(outputFloatName_)
			  bitField0_ = bitField0_ Or &H20
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputFloatNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return outputFloatName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputFloatNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputFloatNameCount
			  Get
				Return outputFloatName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public Function getOutputFloatName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputFloatName
			Return outputFloatName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public Function getOutputFloatNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputFloatNameBytes
			Return outputFloatName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public Function setOutputFloatName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputFloatNameIsMutable()
			outputFloatName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public Function addOutputFloatName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputFloatNameIsMutable()
			outputFloatName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public Function addAllOutputFloatName(ByVal values As IEnumerable(Of String)) As Builder
			ensureOutputFloatNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, outputFloatName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public Function clearOutputFloatName() As Builder
			outputFloatName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H20)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputFloatName = 8;</code>
		  ''' </summary>
		  Public Function addOutputFloatNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureOutputFloatNameIsMutable()
			outputFloatName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend inputDoubleName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureInputDoubleNameIsMutable()
			If Not ((bitField0_ And &H40) <> 0) Then
			  inputDoubleName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(inputDoubleName_)
			  bitField0_ = bitField0_ Or &H40
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public ReadOnly Property InputDoubleNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return inputDoubleName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public ReadOnly Property InputDoubleNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputDoubleNameCount
			  Get
				Return inputDoubleName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public Function getInputDoubleName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputDoubleName
			Return inputDoubleName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public Function getInputDoubleNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputDoubleNameBytes
			Return inputDoubleName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public Function setInputDoubleName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputDoubleNameIsMutable()
			inputDoubleName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public Function addInputDoubleName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputDoubleNameIsMutable()
			inputDoubleName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public Function addAllInputDoubleName(ByVal values As IEnumerable(Of String)) As Builder
			ensureInputDoubleNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, inputDoubleName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public Function clearInputDoubleName() As Builder
			inputDoubleName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H40)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDoubleName = 9;</code>
		  ''' </summary>
		  Public Function addInputDoubleNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureInputDoubleNameIsMutable()
			inputDoubleName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend outputDoubleName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureOutputDoubleNameIsMutable()
			If Not ((bitField0_ And &H80) <> 0) Then
			  outputDoubleName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(outputDoubleName_)
			  bitField0_ = bitField0_ Or &H80
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputDoubleNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return outputDoubleName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputDoubleNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputDoubleNameCount
			  Get
				Return outputDoubleName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public Function getOutputDoubleName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputDoubleName
			Return outputDoubleName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public Function getOutputDoubleNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputDoubleNameBytes
			Return outputDoubleName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public Function setOutputDoubleName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputDoubleNameIsMutable()
			outputDoubleName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public Function addOutputDoubleName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputDoubleNameIsMutable()
			outputDoubleName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public Function addAllOutputDoubleName(ByVal values As IEnumerable(Of String)) As Builder
			ensureOutputDoubleNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, outputDoubleName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public Function clearOutputDoubleName() As Builder
			outputDoubleName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H80)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDoubleName = 10;</code>
		  ''' </summary>
		  Public Function addOutputDoubleNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureOutputDoubleNameIsMutable()
			outputDoubleName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend inputBooleanName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureInputBooleanNameIsMutable()
			If Not ((bitField0_ And &H100) <> 0) Then
			  inputBooleanName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(inputBooleanName_)
			  bitField0_ = bitField0_ Or &H100
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public ReadOnly Property InputBooleanNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return inputBooleanName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public ReadOnly Property InputBooleanNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputBooleanNameCount
			  Get
				Return inputBooleanName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public Function getInputBooleanName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputBooleanName
			Return inputBooleanName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public Function getInputBooleanNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputBooleanNameBytes
			Return inputBooleanName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public Function setInputBooleanName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputBooleanNameIsMutable()
			inputBooleanName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public Function addInputBooleanName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputBooleanNameIsMutable()
			inputBooleanName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public Function addAllInputBooleanName(ByVal values As IEnumerable(Of String)) As Builder
			ensureInputBooleanNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, inputBooleanName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public Function clearInputBooleanName() As Builder
			inputBooleanName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H100)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputBooleanName = 11;</code>
		  ''' </summary>
		  Public Function addInputBooleanNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureInputBooleanNameIsMutable()
			inputBooleanName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend outputBooleanName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureOutputBooleanNameIsMutable()
			If Not ((bitField0_ And &H200) <> 0) Then
			  outputBooleanName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(outputBooleanName_)
			  bitField0_ = bitField0_ Or &H200
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputBooleanNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return outputBooleanName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputBooleanNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputBooleanNameCount
			  Get
				Return outputBooleanName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public Function getOutputBooleanName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputBooleanName
			Return outputBooleanName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public Function getOutputBooleanNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputBooleanNameBytes
			Return outputBooleanName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public Function setOutputBooleanName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputBooleanNameIsMutable()
			outputBooleanName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public Function addOutputBooleanName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputBooleanNameIsMutable()
			outputBooleanName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public Function addAllOutputBooleanName(ByVal values As IEnumerable(Of String)) As Builder
			ensureOutputBooleanNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, outputBooleanName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public Function clearOutputBooleanName() As Builder
			outputBooleanName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H200)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputBooleanName = 12;</code>
		  ''' </summary>
		  Public Function addOutputBooleanNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureOutputBooleanNameIsMutable()
			outputBooleanName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend inputTensorName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureInputTensorNameIsMutable()
			If Not ((bitField0_ And &H400) <> 0) Then
			  inputTensorName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(inputTensorName_)
			  bitField0_ = bitField0_ Or &H400
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public ReadOnly Property InputTensorNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return inputTensorName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public ReadOnly Property InputTensorNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputTensorNameCount
			  Get
				Return inputTensorName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public Function getInputTensorName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputTensorName
			Return inputTensorName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public Function getInputTensorNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputTensorNameBytes
			Return inputTensorName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public Function setInputTensorName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputTensorNameIsMutable()
			inputTensorName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public Function addInputTensorName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputTensorNameIsMutable()
			inputTensorName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public Function addAllInputTensorName(ByVal values As IEnumerable(Of String)) As Builder
			ensureInputTensorNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, inputTensorName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public Function clearInputTensorName() As Builder
			inputTensorName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H400)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputTensorName = 13;</code>
		  ''' </summary>
		  Public Function addInputTensorNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureInputTensorNameIsMutable()
			inputTensorName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend outputTensorName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureOutputTensorNameIsMutable()
			If Not ((bitField0_ And &H800) <> 0) Then
			  outputTensorName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(outputTensorName_)
			  bitField0_ = bitField0_ Or &H800
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputTensorNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return outputTensorName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputTensorNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputTensorNameCount
			  Get
				Return outputTensorName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public Function getOutputTensorName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputTensorName
			Return outputTensorName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public Function getOutputTensorNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputTensorNameBytes
			Return outputTensorName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public Function setOutputTensorName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputTensorNameIsMutable()
			outputTensorName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public Function addOutputTensorName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputTensorNameIsMutable()
			outputTensorName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public Function addAllOutputTensorName(ByVal values As IEnumerable(Of String)) As Builder
			ensureOutputTensorNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, outputTensorName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public Function clearOutputTensorName() As Builder
			outputTensorName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H800)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputTensorName = 14;</code>
		  ''' </summary>
		  Public Function addOutputTensorNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureOutputTensorNameIsMutable()
			outputTensorName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend inputDataTypeName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureInputDataTypeNameIsMutable()
			If Not ((bitField0_ And &H1000) <> 0) Then
			  inputDataTypeName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(inputDataTypeName_)
			  bitField0_ = bitField0_ Or &H1000
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public ReadOnly Property InputDataTypeNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return inputDataTypeName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public ReadOnly Property InputDataTypeNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputDataTypeNameCount
			  Get
				Return inputDataTypeName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public Function getInputDataTypeName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputDataTypeName
			Return inputDataTypeName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public Function getInputDataTypeNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputDataTypeNameBytes
			Return inputDataTypeName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public Function setInputDataTypeName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputDataTypeNameIsMutable()
			inputDataTypeName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public Function addInputDataTypeName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureInputDataTypeNameIsMutable()
			inputDataTypeName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public Function addAllInputDataTypeName(ByVal values As IEnumerable(Of String)) As Builder
			ensureInputDataTypeNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, inputDataTypeName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public Function clearInputDataTypeName() As Builder
			inputDataTypeName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H1000)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string inputDataTypeName = 15;</code>
		  ''' </summary>
		  Public Function addInputDataTypeNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureInputDataTypeNameIsMutable()
			inputDataTypeName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend outputDataTypeName_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureOutputDataTypeNameIsMutable()
			If Not ((bitField0_ And &H2000) <> 0) Then
			  outputDataTypeName_ = New org.nd4j.shade.protobuf.LazyStringArrayList(outputDataTypeName_)
			  bitField0_ = bitField0_ Or &H2000
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputDataTypeNameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return outputDataTypeName_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputDataTypeNameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputDataTypeNameCount
			  Get
				Return outputDataTypeName_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public Function getOutputDataTypeName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputDataTypeName
			Return outputDataTypeName_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public Function getOutputDataTypeNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getOutputDataTypeNameBytes
			Return outputDataTypeName_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public Function setOutputDataTypeName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputDataTypeNameIsMutable()
			outputDataTypeName_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public Function addOutputDataTypeName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureOutputDataTypeNameIsMutable()
			outputDataTypeName_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public Function addAllOutputDataTypeName(ByVal values As IEnumerable(Of String)) As Builder
			ensureOutputDataTypeNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, outputDataTypeName_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public Function clearOutputDataTypeName() As Builder
			outputDataTypeName_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H2000)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string outputDataTypeName = 16;</code>
		  ''' </summary>
		  Public Function addOutputDataTypeNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureOutputDataTypeNameIsMutable()
			outputDataTypeName_.add(value)
			onChanged()
			Return Me
		  End Function

		  Friend inputToOutput_ As org.nd4j.shade.protobuf.MapField(Of String, String)
		  Friend Function internalGetInputToOutput() As org.nd4j.shade.protobuf.MapField(Of String, String)
			If inputToOutput_ Is Nothing Then
			  Return org.nd4j.shade.protobuf.MapField.emptyMapField(InputToOutputDefaultEntryHolder.defaultEntry)
			End If
			Return inputToOutput_
		  End Function
		  Friend Function internalGetMutableInputToOutput() As org.nd4j.shade.protobuf.MapField(Of String, String)
			onChanged()
			If inputToOutput_ Is Nothing Then
			  inputToOutput_ = org.nd4j.shade.protobuf.MapField.newMapField(InputToOutputDefaultEntryHolder.defaultEntry)
			End If
			If Not inputToOutput_.isMutable() Then
			  inputToOutput_ = inputToOutput_.copy()
			End If
			Return inputToOutput_
		  End Function

		  Public ReadOnly Property InputToOutputCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputToOutputCount
			  Get
				Return internalGetInputToOutput().getMap().size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		  ''' </summary>

		  Public Function containsInputToOutput(ByVal key As String) As Boolean Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.containsInputToOutput
			If key Is Nothing Then
				Throw New System.NullReferenceException()
			End If
			Return internalGetInputToOutput().getMap().containsKey(key)
		  End Function
		  ''' <summary>
		  ''' Use <seealso cref="getInputToOutputMap()"/> instead.
		  ''' </summary>
		  <Obsolete>
		  Public ReadOnly Property InputToOutput As IDictionary(Of String, String) Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputToOutput
			  Get
				Return getInputToOutputMap()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		  ''' </summary>

		  Public ReadOnly Property InputToOutputMap As IDictionary(Of String, String) Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputToOutputMap
			  Get
				Return internalGetInputToOutput().getMap()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		  ''' </summary>

		  Public Function getInputToOutputOrDefault(ByVal key As String, ByVal defaultValue As String) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputToOutputOrDefault
			If key Is Nothing Then
				Throw New System.NullReferenceException()
			End If
			Dim map As IDictionary(Of String, String) = internalGetInputToOutput().getMap()
			Return If(map.ContainsKey(key), map(key), defaultValue)
		  End Function
		  ''' <summary>
		  ''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		  ''' </summary>

		  Public Function getInputToOutputOrThrow(ByVal key As String) As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputToOutputOrThrow
			If key Is Nothing Then
				Throw New System.NullReferenceException()
			End If
			Dim map As IDictionary(Of String, String) = internalGetInputToOutput().getMap()
			If Not map.ContainsKey(key) Then
			  Throw New System.ArgumentException()
			End If
			Return map(key)
		  End Function

		  Public Function clearInputToOutput() As Builder
			internalGetMutableInputToOutput().getMutableMap().clear()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		  ''' </summary>

		  Public Function removeInputToOutput(ByVal key As String) As Builder
			If key Is Nothing Then
				Throw New System.NullReferenceException()
			End If
			internalGetMutableInputToOutput().getMutableMap().remove(key)
			Return Me
		  End Function
		  ''' <summary>
		  ''' Use alternate mutation accessors instead.
		  ''' </summary>
		  <Obsolete>
		  Public ReadOnly Property MutableInputToOutput As IDictionary(Of String, String)
			  Get
				Return internalGetMutableInputToOutput().getMutableMap()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		  ''' </summary>
		  Public Function putInputToOutput(ByVal key As String, ByVal value As String) As Builder
			If key Is Nothing Then
				Throw New System.NullReferenceException()
			End If
			If value Is Nothing Then
				Throw New System.NullReferenceException()
			End If
			internalGetMutableInputToOutput().getMutableMap().put(key, value)
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>map&lt;string, string&gt; inputToOutput = 17;</code>
		  ''' </summary>

		  Public Function putAllInputToOutput(ByVal values As IDictionary(Of String, String)) As Builder
			internalGetMutableInputToOutput().getMutableMap().putAll(values)
			Return Me
		  End Function

		  Friend ruleType_ As Object = ""
		  ''' <summary>
		  ''' <code>string ruleType = 18;</code>
		  ''' </summary>
		  Public ReadOnly Property RuleType As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getRuleType
			  Get
				Dim ref As Object = ruleType_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  ruleType_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string ruleType = 18;</code>
		  ''' </summary>
		  Public ReadOnly Property RuleTypeBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getRuleTypeBytes
			  Get
				Dim ref As Object = ruleType_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  ruleType_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string ruleType = 18;</code>
		  ''' </summary>
		  Public Function setRuleType(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			ruleType_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string ruleType = 18;</code>
		  ''' </summary>
		  Public Function clearRuleType() As Builder

			ruleType_ = DefaultInstance.RuleType
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string ruleType = 18;</code>
		  ''' </summary>
		  Public Function setRuleTypeBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			ruleType_ = value
			onChanged()
			Return Me
		  End Function

		  Friend transformerArgs_ As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgs) = java.util.Collections.emptyList()
		  Friend Sub ensureTransformerArgsIsMutable()
			If Not ((bitField0_ And &H8000) <> 0) Then
			  transformerArgs_ = New List(Of org.nd4j.ir.MapperNamespace.TransformerArgs)(transformerArgs_)
			  bitField0_ = bitField0_ Or &H8000
			End If
		  End Sub

		  Friend transformerArgsBuilder_ As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.TransformerArgs, org.nd4j.ir.MapperNamespace.TransformerArgs.Builder, org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder)

		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public ReadOnly Property TransformerArgsList As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgs) Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getTransformerArgsList
			  Get
				If transformerArgsBuilder_ Is Nothing Then
				  Return java.util.Collections.unmodifiableList(transformerArgs_)
				Else
				  Return transformerArgsBuilder_.getMessageList()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public ReadOnly Property TransformerArgsCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getTransformerArgsCount
			  Get
				If transformerArgsBuilder_ Is Nothing Then
				  Return transformerArgs_.Count
				Else
				  Return transformerArgsBuilder_.getCount()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function getTransformerArgs(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.TransformerArgs Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getTransformerArgs
			If transformerArgsBuilder_ Is Nothing Then
			  Return transformerArgs_(index)
			Else
			  Return transformerArgsBuilder_.getMessage(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function setTransformerArgs(ByVal index As Integer, ByVal value As org.nd4j.ir.MapperNamespace.TransformerArgs) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureTransformerArgsIsMutable()
			  transformerArgs_(index) = value
			  onChanged()
			Else
			  transformerArgsBuilder_.setMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function setTransformerArgs(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.MapperNamespace.TransformerArgs.Builder) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  transformerArgs_(index) = builderForValue.build()
			  onChanged()
			Else
			  transformerArgsBuilder_.setMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function addTransformerArgs(ByVal value As org.nd4j.ir.MapperNamespace.TransformerArgs) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.Add(value)
			  onChanged()
			Else
			  transformerArgsBuilder_.addMessage(value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function addTransformerArgs(ByVal index As Integer, ByVal value As org.nd4j.ir.MapperNamespace.TransformerArgs) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.Insert(index, value)
			  onChanged()
			Else
			  transformerArgsBuilder_.addMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function addTransformerArgs(ByVal builderForValue As org.nd4j.ir.MapperNamespace.TransformerArgs.Builder) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.Add(builderForValue.build())
			  onChanged()
			Else
			  transformerArgsBuilder_.addMessage(builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function addTransformerArgs(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.MapperNamespace.TransformerArgs.Builder) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.Insert(index, builderForValue.build())
			  onChanged()
			Else
			  transformerArgsBuilder_.addMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function addAllTransformerArgs(Of T1 As org.nd4j.ir.MapperNamespace.TransformerArgs)(ByVal values As IEnumerable(Of T1)) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, transformerArgs_)
			  onChanged()
			Else
			  transformerArgsBuilder_.addAllMessages(values)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function clearTransformerArgs() As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  transformerArgs_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H8000)
			  onChanged()
			Else
			  transformerArgsBuilder_.clear()
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function removeTransformerArgs(ByVal index As Integer) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.RemoveAt(index)
			  onChanged()
			Else
			  transformerArgsBuilder_.remove(index)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function getTransformerArgsBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.TransformerArgs.Builder
			Return getTransformerArgsFieldBuilder().getBuilder(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function getTransformerArgsOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getTransformerArgsOrBuilder
			If transformerArgsBuilder_ Is Nothing Then
			  Return transformerArgs_(index)
			Else
			  Return transformerArgsBuilder_.getMessageOrBuilder(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder> getTransformerArgsOrBuilderList()
		  Public ReadOnly Property TransformerArgsOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder) Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getTransformerArgsOrBuilderList
			  Get
				If transformerArgsBuilder_ IsNot Nothing Then
				  Return transformerArgsBuilder_.getMessageOrBuilderList()
				Else
				  Return java.util.Collections.unmodifiableList(transformerArgs_)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function addTransformerArgsBuilder() As org.nd4j.ir.MapperNamespace.TransformerArgs.Builder
			Return getTransformerArgsFieldBuilder().addBuilder(org.nd4j.ir.MapperNamespace.TransformerArgs.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public Function addTransformerArgsBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.TransformerArgs.Builder
			Return getTransformerArgsFieldBuilder().addBuilder(index, org.nd4j.ir.MapperNamespace.TransformerArgs.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.TransformerArgs transformerArgs = 19;</code>
		  ''' </summary>
		  Public ReadOnly Property TransformerArgsBuilderList As IList(Of org.nd4j.ir.MapperNamespace.TransformerArgs.Builder)
			  Get
				Return getTransformerArgsFieldBuilder().getBuilderList()
			  End Get
		  End Property
		  Friend ReadOnly Property TransformerArgsFieldBuilder As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.TransformerArgs, org.nd4j.ir.MapperNamespace.TransformerArgs.Builder, org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder)
			  Get
				If transformerArgsBuilder_ Is Nothing Then
				  transformerArgsBuilder_ = New org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.TransformerArgs, org.nd4j.ir.MapperNamespace.TransformerArgs.Builder, org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder)(transformerArgs_, ((bitField0_ And &H8000) <> 0), getParentForChildren(), isClean())
				  transformerArgs_ = Nothing
				End If
				Return transformerArgsBuilder_
			  End Get
		  End Property

		  Friend inputFrameworkOpName_ As Object = ""
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 20;</code>
		  ''' </summary>
		  Public ReadOnly Property InputFrameworkOpName As String Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputFrameworkOpName
			  Get
				Dim ref As Object = inputFrameworkOpName_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  inputFrameworkOpName_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 20;</code>
		  ''' </summary>
		  Public ReadOnly Property InputFrameworkOpNameBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder.getInputFrameworkOpNameBytes
			  Get
				Dim ref As Object = inputFrameworkOpName_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  inputFrameworkOpName_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 20;</code>
		  ''' </summary>
		  Public Function setInputFrameworkOpName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			inputFrameworkOpName_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 20;</code>
		  ''' </summary>
		  Public Function clearInputFrameworkOpName() As Builder

			inputFrameworkOpName_ = DefaultInstance.InputFrameworkOpName
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 20;</code>
		  ''' </summary>
		  Public Function setInputFrameworkOpNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			inputFrameworkOpName_ = value
			onChanged()
			Return Me
		  End Function
'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder setUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function setUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.setUnknownFields(unknownFields)
		  End Function

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder mergeUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function mergeUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.mergeUnknownFields(unknownFields)
		  End Function


		  ' @@protoc_insertion_point(builder_scope:org.nd4j.ir.MappingRule)
		End Class

		' @@protoc_insertion_point(class_scope:org.nd4j.ir.MappingRule)
		Friend Shared ReadOnly DEFAULT_INSTANCE As org.nd4j.ir.MapperNamespace.MappingRule
		Shared Sub New()
		  DEFAULT_INSTANCE = New org.nd4j.ir.MapperNamespace.MappingRule()
		End Sub

		Public Shared ReadOnly Property DefaultInstance As org.nd4j.ir.MapperNamespace.MappingRule
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

'JAVA TO VB CONVERTER NOTE: The field PARSER was renamed since Visual Basic does not allow fields to have the same name as other class members:
		Friend Shared ReadOnly PARSER_Conflict As org.nd4j.shade.protobuf.Parser(Of MappingRule) = New AbstractParserAnonymousInnerClass()

		Private Class AbstractParserAnonymousInnerClass
			Inherits org.nd4j.shade.protobuf.AbstractParser(Of MappingRule)

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public MappingRule parsePartialFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Public Overrides Function parsePartialFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As MappingRule
			  Return New MappingRule(input, extensionRegistry)
			End Function
		End Class

		Public Shared Function parser() As org.nd4j.shade.protobuf.Parser(Of MappingRule)
		  Return PARSER_Conflict
		End Function

		Public Overrides ReadOnly Property ParserForType As org.nd4j.shade.protobuf.Parser(Of MappingRule)
			Get
			  Return PARSER_Conflict
			End Get
		End Property

		Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.MapperNamespace.MappingRule
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

	  End Class

	  Public Interface TransformerArgsOrBuilder
		  Inherits org.nd4j.shade.protobuf.MessageOrBuilder

		''' <summary>
		''' <code>string key = 1;</code>
		''' </summary>
		ReadOnly Property Key As String
		''' <summary>
		''' <code>string key = 1;</code>
		''' </summary>
		ReadOnly Property KeyBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
		ReadOnly Property TransformerArgsList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
		Function getTransformerArgs(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
		ReadOnly Property TransformerArgsCount As Integer
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: java.util.List<? extends org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder> getTransformerArgsOrBuilderList();
		ReadOnly Property TransformerArgsOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
		Function getTransformerArgsOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder
	  End Interface
	  ''' <summary>
	  ''' Protobuf type {@code org.nd4j.ir.TransformerArgs}
	  ''' </summary>
	  Public NotInheritable Class TransformerArgs
		  Inherits org.nd4j.shade.protobuf.GeneratedMessageV3
		  Implements TransformerArgsOrBuilder

	  Friend Const serialVersionUID As Long = 0L
		' Use TransformerArgs.newBuilder() to construct.
'JAVA TO VB CONVERTER TODO TASK: Wildcard generics in constructor parameters are not converted. Move the generic type parameter and constraint to the class header:
'ORIGINAL LINE: private TransformerArgs(org.nd4j.shade.protobuf.GeneratedMessageV3.Builder<?> builder)
'JAVA TO VB CONVERTER NOTE: The parameter builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		Friend Sub New(ByVal builder_Conflict As org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of T1))
		  MyBase.New(builder_Conflict)
		End Sub
		Friend Sub New()
		  key_ = ""
		  transformerArgs_ = java.util.Collections.emptyList()
		End Sub

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @java.lang.Override @SuppressWarnings({"unused"}) protected java.lang.Object newInstance(UnusedPrivateParameter unused)
		Protected Friend Overrides Function newInstance(ByVal unused As UnusedPrivateParameter) As Object
		  Return New TransformerArgs()
		End Function

		Public Overrides ReadOnly Property UnknownFields As org.nd4j.shade.protobuf.UnknownFieldSet
			Get
			  Return Me.unknownFields
			End Get
		End Property
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: private TransformerArgs(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Friend Sub New(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
		  Me.New()
		  If extensionRegistry Is Nothing Then
			Throw New System.NullReferenceException()
		  End If
		  Dim mutable_bitField0_ As Integer = 0
		  Dim unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet.Builder = org.nd4j.shade.protobuf.UnknownFieldSet.newBuilder()
		  Try
			Dim done As Boolean = False
			Do While Not done
			  Dim tag As Integer = input.readTag()
			  Select Case tag
				Case 0
				  done = True
				Case 10
				  Dim s As String = input.readStringRequireUtf8()

				  key_ = s
				Case 18
				  If Not ((mutable_bitField0_ And &H1) <> 0) Then
					transformerArgs_ = New List(Of org.nd4j.ir.OpNamespace.ArgDescriptor)()
					mutable_bitField0_ = mutable_bitField0_ Or &H1
				  End If
				  transformerArgs_.Add(input.readMessage(org.nd4j.ir.OpNamespace.ArgDescriptor.parser(), extensionRegistry))
				Case Else
				  If Not parseUnknownField(input, unknownFields, extensionRegistry, tag) Then
					done = True
				  End If
			  End Select
			Loop
		  Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Throw e.setUnfinishedMessage(Me)
		  Catch e As java.io.IOException
			Throw (New org.nd4j.shade.protobuf.InvalidProtocolBufferException(e)).setUnfinishedMessage(Me)
		  Finally
			If ((mutable_bitField0_ And &H1) <> 0) Then
			  transformerArgs_ = java.util.Collections.unmodifiableList(transformerArgs_)
			End If
			Me.unknownFields = unknownFields.build()
			makeExtensionsImmutable()
		  End Try
		End Sub
		Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			Get
			  Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_TransformerArgs_descriptor
			End Get
		End Property

		Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
		  Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_TransformerArgs_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.MapperNamespace.TransformerArgs), GetType(org.nd4j.ir.MapperNamespace.TransformerArgs.Builder))
		End Function

		Public Const KEY_FIELD_NUMBER As Integer = 1
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object key_;
		Friend key_ As Object
		''' <summary>
		''' <code>string key = 1;</code>
		''' </summary>
		Public ReadOnly Property Key As String Implements TransformerArgsOrBuilder.getKey
			Get
			  Dim ref As Object = key_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				key_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string key = 1;</code>
		''' </summary>
		Public ReadOnly Property KeyBytes As org.nd4j.shade.protobuf.ByteString Implements TransformerArgsOrBuilder.getKeyBytes
			Get
			  Dim ref As Object = key_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				key_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const TRANSFORMERARGS_FIELD_NUMBER As Integer = 2
		Friend transformerArgs_ As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
		Public ReadOnly Property TransformerArgsList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor) Implements TransformerArgsOrBuilder.getTransformerArgsList
			Get
			  Return transformerArgs_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder> getTransformerArgsOrBuilderList()
		Public ReadOnly Property TransformerArgsOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder) Implements TransformerArgsOrBuilder.getTransformerArgsOrBuilderList
			Get
			  Return transformerArgs_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
		Public ReadOnly Property TransformerArgsCount As Integer Implements TransformerArgsOrBuilder.getTransformerArgsCount
			Get
			  Return transformerArgs_.Count
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
		Public Function getTransformerArgs(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor Implements TransformerArgsOrBuilder.getTransformerArgs
		  Return transformerArgs_(index)
		End Function
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		''' </summary>
		Public Function getTransformerArgsOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder Implements TransformerArgsOrBuilder.getTransformerArgsOrBuilder
		  Return transformerArgs_(index)
		End Function

		Friend memoizedIsInitialized As SByte = -1
		Public Overrides ReadOnly Property Initialized As Boolean
			Get
	'JAVA TO VB CONVERTER NOTE: The local variable isInitialized was renamed since Visual Basic will not allow local variables with the same name as their enclosing function or property:
			  Dim isInitialized_Conflict As SByte = memoizedIsInitialized
			  If isInitialized_Conflict = 1 Then
				  Return True
			  End If
			  If isInitialized_Conflict = 0 Then
				  Return False
			  End If
    
			  memoizedIsInitialized = 1
			  Return True
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public void writeTo(org.nd4j.shade.protobuf.CodedOutputStream output) throws java.io.IOException
		Public Overrides Sub writeTo(ByVal output As org.nd4j.shade.protobuf.CodedOutputStream)
		  If Not KeyBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 1, key_)
		  End If
		  For i As Integer = 0 To transformerArgs_.Count - 1
			output.writeMessage(2, transformerArgs_(i))
		  Next i
		  unknownFields.writeTo(output)
		End Sub

		Public Overrides ReadOnly Property SerializedSize As Integer
			Get
			  Dim size As Integer = memoizedSize
			  If size <> -1 Then
				  Return size
			  End If
    
			  size = 0
			  If Not KeyBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(1, key_)
			  End If
			  For i As Integer = 0 To transformerArgs_.Count - 1
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(2, transformerArgs_(i))
			  Next i
			  size += unknownFields.getSerializedSize()
			  memoizedSize = size
			  Return size
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public boolean equals(final java.lang.Object obj)
		Public Overrides Function Equals(ByVal obj As Object) As Boolean
		  If obj Is Me Then
		   Return True
		  End If
		  If Not (TypeOf obj Is org.nd4j.ir.MapperNamespace.TransformerArgs) Then
			Return MyBase.Equals(obj)
		  End If
		  Dim other As org.nd4j.ir.MapperNamespace.TransformerArgs = DirectCast(obj, org.nd4j.ir.MapperNamespace.TransformerArgs)

		  If Not Key.Equals(other.Key) Then
			  Return False
		  End If
'JAVA TO VB CONVERTER WARNING: LINQ 'SequenceEqual' is not always identical to Java AbstractList 'equals':
'ORIGINAL LINE: if (!getTransformerArgsList().equals(other.getTransformerArgsList()))
		  If Not getTransformerArgsList().SequenceEqual(other.getTransformerArgsList()) Then
			  Return False
		  End If
		  If Not unknownFields.Equals(other.unknownFields) Then
			  Return False
		  End If
		  Return True
		End Function

		Public Overrides Function GetHashCode() As Integer
		  If memoizedHashCode <> 0 Then
			Return memoizedHashCode
		  End If
		  Dim hash As Integer = 41
		  hash = (19 * hash) + Descriptor.GetHashCode()
		  hash = (37 * hash) + KEY_FIELD_NUMBER
		  hash = (53 * hash) + Key.GetHashCode()
		  If TransformerArgsCount > 0 Then
			hash = (37 * hash) + TRANSFORMERARGS_FIELD_NUMBER
			hash = (53 * hash) + getTransformerArgsList().GetHashCode()
		  End If
		  hash = (29 * hash) + unknownFields.GetHashCode()
		  memoizedHashCode = hash
		  Return hash
		End Function

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(java.nio.ByteBuffer data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(java.nio.ByteBuffer data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(org.nd4j.shade.protobuf.ByteString data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(org.nd4j.shade.protobuf.ByteString data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(byte[] data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(byte[] data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseDelimitedFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(org.nd4j.shade.protobuf.CodedInputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.TransformerArgs parseFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.TransformerArgs
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function

		Public Overrides Function newBuilderForType() As Builder
			Return newBuilder()
		End Function
		Public Shared Function newBuilder() As Builder
		  Return DEFAULT_INSTANCE.toBuilder()
		End Function
		Public Shared Function newBuilder(ByVal prototype As org.nd4j.ir.MapperNamespace.TransformerArgs) As Builder
		  Return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype)
		End Function
		Public Overrides Function toBuilder() As Builder
		  Return If(Me Is DEFAULT_INSTANCE, New Builder(), (New Builder()).mergeFrom(Me))
		End Function

		Protected Friend Overrides Function newBuilderForType(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent) As Builder
'JAVA TO VB CONVERTER NOTE: The variable builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		  Dim builder_Conflict As New Builder(parent)
		  Return builder_Conflict
		End Function
		''' <summary>
		''' Protobuf type {@code org.nd4j.ir.TransformerArgs}
		''' </summary>
		Public NotInheritable Class Builder
			Inherits org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of Builder)
			Implements org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder

		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_TransformerArgs_descriptor
			  End Get
		  End Property

		  Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
			Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_TransformerArgs_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.MapperNamespace.TransformerArgs), GetType(org.nd4j.ir.MapperNamespace.TransformerArgs.Builder))
		  End Function

		  ' Construct using org.nd4j.ir.MapperNamespace.TransformerArgs.newBuilder()
		  Friend Sub New()
			maybeForceBuilderInitialization()
		  End Sub

		  Friend Sub New(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent)
			MyBase.New(parent)
			maybeForceBuilderInitialization()
		  End Sub
		  Friend Sub maybeForceBuilderInitialization()
			If org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders Then
			  getTransformerArgsFieldBuilder()
			End If
		  End Sub
		  Public Overrides Function clear() As Builder
			MyBase.clear()
			key_ = ""

			If transformerArgsBuilder_ Is Nothing Then
			  transformerArgs_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			Else
			  transformerArgsBuilder_.clear()
			End If
			Return Me
		  End Function

		  Public Overrides ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_TransformerArgs_descriptor
			  End Get
		  End Property

		  Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.MapperNamespace.TransformerArgs
			  Get
				Return org.nd4j.ir.MapperNamespace.TransformerArgs.DefaultInstance
			  End Get
		  End Property

		  Public Overrides Function build() As org.nd4j.ir.MapperNamespace.TransformerArgs
			Dim result As org.nd4j.ir.MapperNamespace.TransformerArgs = buildPartial()
			If Not result.Initialized Then
			  Throw newUninitializedMessageException(result)
			End If
			Return result
		  End Function

		  Public Overrides Function buildPartial() As org.nd4j.ir.MapperNamespace.TransformerArgs
			Dim result As New org.nd4j.ir.MapperNamespace.TransformerArgs(Me)
			Dim from_bitField0_ As Integer = bitField0_
			result.key_ = key_
			If transformerArgsBuilder_ Is Nothing Then
			  If ((bitField0_ And &H1) <> 0) Then
				transformerArgs_ = java.util.Collections.unmodifiableList(transformerArgs_)
				bitField0_ = (bitField0_ And Not &H1)
			  End If
			  result.transformerArgs_ = transformerArgs_
			Else
			  result.transformerArgs_ = transformerArgsBuilder_.build()
			End If
			onBuilt()
			Return result
		  End Function

		  Public Overrides Function clone() As Builder
			Return MyBase.clone()
		  End Function
		  Public Overrides Function setField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.setField(field, value)
		  End Function
		  Public Overrides Function clearField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor) As Builder
			Return MyBase.clearField(field)
		  End Function
		  Public Overrides Function clearOneof(ByVal oneof As org.nd4j.shade.protobuf.Descriptors.OneofDescriptor) As Builder
			Return MyBase.clearOneof(oneof)
		  End Function
		  Public Overrides Function setRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal index As Integer, ByVal value As Object) As Builder
			Return MyBase.setRepeatedField(field, index, value)
		  End Function
		  Public Overrides Function addRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.addRepeatedField(field, value)
		  End Function
		  Public Overrides Function mergeFrom(ByVal other As org.nd4j.shade.protobuf.Message) As Builder
			If TypeOf other Is org.nd4j.ir.MapperNamespace.TransformerArgs Then
			  Return mergeFrom(CType(other, org.nd4j.ir.MapperNamespace.TransformerArgs))
			Else
			  MyBase.mergeFrom(other)
			  Return Me
			End If
		  End Function

		  Public Function mergeFrom(ByVal other As org.nd4j.ir.MapperNamespace.TransformerArgs) As Builder
			If other Is org.nd4j.ir.MapperNamespace.TransformerArgs.DefaultInstance Then
				Return Me
			End If
			If other.Key.Length > 0 Then
			  key_ = other.key_
			  onChanged()
			End If
			If transformerArgsBuilder_ Is Nothing Then
			  If other.transformerArgs_.Count > 0 Then
				If transformerArgs_.Count = 0 Then
				  transformerArgs_ = other.transformerArgs_
				  bitField0_ = (bitField0_ And Not &H1)
				Else
				  ensureTransformerArgsIsMutable()
				  CType(transformerArgs_, List(Of org.nd4j.ir.OpNamespace.ArgDescriptor)).AddRange(other.transformerArgs_)
				End If
				onChanged()
			  End If
			Else
			  If other.transformerArgs_.Count > 0 Then
				If transformerArgsBuilder_.isEmpty() Then
				  transformerArgsBuilder_.dispose()
				  transformerArgsBuilder_ = Nothing
				  transformerArgs_ = other.transformerArgs_
				  bitField0_ = (bitField0_ And Not &H1)
				  transformerArgsBuilder_ = If(org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders, getTransformerArgsFieldBuilder(), Nothing)
				Else
				  transformerArgsBuilder_.addAllMessages(other.transformerArgs_)
				End If
			  End If
			End If
			Me.mergeUnknownFields(other.unknownFields)
			onChanged()
			Return Me
		  End Function

		  Public Overrides ReadOnly Property Initialized As Boolean
			  Get
				Return True
			  End Get
		  End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public Builder mergeFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		  Public Overrides Function mergeFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As Builder
			Dim parsedMessage As org.nd4j.ir.MapperNamespace.TransformerArgs = Nothing
			Try
			  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
			Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			  parsedMessage = CType(e.getUnfinishedMessage(), org.nd4j.ir.MapperNamespace.TransformerArgs)
			  Throw e.unwrapIOException()
			Finally
			  If parsedMessage IsNot Nothing Then
				mergeFrom(parsedMessage)
			  End If
			End Try
			Return Me
		  End Function
		  Friend bitField0_ As Integer

		  Friend key_ As Object = ""
		  ''' <summary>
		  ''' <code>string key = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property Key As String Implements org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder.getKey
			  Get
				Dim ref As Object = key_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  key_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string key = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property KeyBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder.getKeyBytes
			  Get
				Dim ref As Object = key_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  key_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string key = 1;</code>
		  ''' </summary>
		  Public Function setKey(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			key_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string key = 1;</code>
		  ''' </summary>
		  Public Function clearKey() As Builder

			key_ = DefaultInstance.Key
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string key = 1;</code>
		  ''' </summary>
		  Public Function setKeyBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			key_ = value
			onChanged()
			Return Me
		  End Function

		  Friend transformerArgs_ As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor) = java.util.Collections.emptyList()
		  Friend Sub ensureTransformerArgsIsMutable()
			If Not ((bitField0_ And &H1) <> 0) Then
			  transformerArgs_ = New List(Of org.nd4j.ir.OpNamespace.ArgDescriptor)(transformerArgs_)
			  bitField0_ = bitField0_ Or &H1
			End If
		  End Sub

		  Friend transformerArgsBuilder_ As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.ArgDescriptor, org.nd4j.ir.OpNamespace.ArgDescriptor.Builder, org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder)

		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property TransformerArgsList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor) Implements org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder.getTransformerArgsList
			  Get
				If transformerArgsBuilder_ Is Nothing Then
				  Return java.util.Collections.unmodifiableList(transformerArgs_)
				Else
				  Return transformerArgsBuilder_.getMessageList()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property TransformerArgsCount As Integer Implements org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder.getTransformerArgsCount
			  Get
				If transformerArgsBuilder_ Is Nothing Then
				  Return transformerArgs_.Count
				Else
				  Return transformerArgsBuilder_.getCount()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function getTransformerArgs(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor Implements org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder.getTransformerArgs
			If transformerArgsBuilder_ Is Nothing Then
			  Return transformerArgs_(index)
			Else
			  Return transformerArgsBuilder_.getMessage(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function setTransformerArgs(ByVal index As Integer, ByVal value As org.nd4j.ir.OpNamespace.ArgDescriptor) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureTransformerArgsIsMutable()
			  transformerArgs_(index) = value
			  onChanged()
			Else
			  transformerArgsBuilder_.setMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function setTransformerArgs(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  transformerArgs_(index) = builderForValue.build()
			  onChanged()
			Else
			  transformerArgsBuilder_.setMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function addTransformerArgs(ByVal value As org.nd4j.ir.OpNamespace.ArgDescriptor) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.Add(value)
			  onChanged()
			Else
			  transformerArgsBuilder_.addMessage(value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function addTransformerArgs(ByVal index As Integer, ByVal value As org.nd4j.ir.OpNamespace.ArgDescriptor) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.Insert(index, value)
			  onChanged()
			Else
			  transformerArgsBuilder_.addMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function addTransformerArgs(ByVal builderForValue As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.Add(builderForValue.build())
			  onChanged()
			Else
			  transformerArgsBuilder_.addMessage(builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function addTransformerArgs(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.Insert(index, builderForValue.build())
			  onChanged()
			Else
			  transformerArgsBuilder_.addMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function addAllTransformerArgs(Of T1 As org.nd4j.ir.OpNamespace.ArgDescriptor)(ByVal values As IEnumerable(Of T1)) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, transformerArgs_)
			  onChanged()
			Else
			  transformerArgsBuilder_.addAllMessages(values)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function clearTransformerArgs() As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  transformerArgs_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			  onChanged()
			Else
			  transformerArgsBuilder_.clear()
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function removeTransformerArgs(ByVal index As Integer) As Builder
			If transformerArgsBuilder_ Is Nothing Then
			  ensureTransformerArgsIsMutable()
			  transformerArgs_.RemoveAt(index)
			  onChanged()
			Else
			  transformerArgsBuilder_.remove(index)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function getTransformerArgsBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder
			Return getTransformerArgsFieldBuilder().getBuilder(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function getTransformerArgsOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder Implements org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder.getTransformerArgsOrBuilder
			If transformerArgsBuilder_ Is Nothing Then
			  Return transformerArgs_(index)
			Else
			  Return transformerArgsBuilder_.getMessageOrBuilder(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder> getTransformerArgsOrBuilderList()
		  Public ReadOnly Property TransformerArgsOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder) Implements org.nd4j.ir.MapperNamespace.TransformerArgsOrBuilder.getTransformerArgsOrBuilderList
			  Get
				If transformerArgsBuilder_ IsNot Nothing Then
				  Return transformerArgsBuilder_.getMessageOrBuilderList()
				Else
				  Return java.util.Collections.unmodifiableList(transformerArgs_)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function addTransformerArgsBuilder() As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder
			Return getTransformerArgsFieldBuilder().addBuilder(org.nd4j.ir.OpNamespace.ArgDescriptor.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public Function addTransformerArgsBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder
			Return getTransformerArgsFieldBuilder().addBuilder(index, org.nd4j.ir.OpNamespace.ArgDescriptor.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor transformerArgs = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property TransformerArgsBuilderList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor.Builder)
			  Get
				Return getTransformerArgsFieldBuilder().getBuilderList()
			  End Get
		  End Property
		  Friend ReadOnly Property TransformerArgsFieldBuilder As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.ArgDescriptor, org.nd4j.ir.OpNamespace.ArgDescriptor.Builder, org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder)
			  Get
				If transformerArgsBuilder_ Is Nothing Then
				  transformerArgsBuilder_ = New org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.ArgDescriptor, org.nd4j.ir.OpNamespace.ArgDescriptor.Builder, org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder)(transformerArgs_, ((bitField0_ And &H1) <> 0), getParentForChildren(), isClean())
				  transformerArgs_ = Nothing
				End If
				Return transformerArgsBuilder_
			  End Get
		  End Property
'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder setUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function setUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.setUnknownFields(unknownFields)
		  End Function

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder mergeUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function mergeUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.mergeUnknownFields(unknownFields)
		  End Function


		  ' @@protoc_insertion_point(builder_scope:org.nd4j.ir.TransformerArgs)
		End Class

		' @@protoc_insertion_point(class_scope:org.nd4j.ir.TransformerArgs)
		Friend Shared ReadOnly DEFAULT_INSTANCE As org.nd4j.ir.MapperNamespace.TransformerArgs
		Shared Sub New()
		  DEFAULT_INSTANCE = New org.nd4j.ir.MapperNamespace.TransformerArgs()
		End Sub

		Public Shared ReadOnly Property DefaultInstance As org.nd4j.ir.MapperNamespace.TransformerArgs
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

'JAVA TO VB CONVERTER NOTE: The field PARSER was renamed since Visual Basic does not allow fields to have the same name as other class members:
		Friend Shared ReadOnly PARSER_Conflict As org.nd4j.shade.protobuf.Parser(Of TransformerArgs) = New AbstractParserAnonymousInnerClass()

		Private Class AbstractParserAnonymousInnerClass
			Inherits org.nd4j.shade.protobuf.AbstractParser(Of TransformerArgs)

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public TransformerArgs parsePartialFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Public Overrides Function parsePartialFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As TransformerArgs
			  Return New TransformerArgs(input, extensionRegistry)
			End Function
		End Class

		Public Shared Function parser() As org.nd4j.shade.protobuf.Parser(Of TransformerArgs)
		  Return PARSER_Conflict
		End Function

		Public Overrides ReadOnly Property ParserForType As org.nd4j.shade.protobuf.Parser(Of TransformerArgs)
			Get
			  Return PARSER_Conflict
			End Get
		End Property

		Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.MapperNamespace.TransformerArgs
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

	  End Class

	  Public Interface MappingDefinitionSetOrBuilder
		  Inherits org.nd4j.shade.protobuf.MessageOrBuilder

		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
		ReadOnly Property MappingsList As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclaration)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
		Function getMappings(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
		ReadOnly Property MappingsCount As Integer
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: java.util.List<? extends org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder> getMappingsOrBuilderList();
		ReadOnly Property MappingsOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
		Function getMappingsOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder

		''' <summary>
		''' <code>repeated string name = 2;</code>
		''' </summary>
		ReadOnly Property NameList As IList(Of String)
		''' <summary>
		''' <code>repeated string name = 2;</code>
		''' </summary>
		ReadOnly Property NameCount As Integer
		''' <summary>
		''' <code>repeated string name = 2;</code>
		''' </summary>
		Function getName(ByVal index As Integer) As String
		''' <summary>
		''' <code>repeated string name = 2;</code>
		''' </summary>
		Function getNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString
	  End Interface
	  ''' <summary>
	  ''' Protobuf type {@code org.nd4j.ir.MappingDefinitionSet}
	  ''' </summary>
	  Public NotInheritable Class MappingDefinitionSet
		  Inherits org.nd4j.shade.protobuf.GeneratedMessageV3
		  Implements MappingDefinitionSetOrBuilder

	  Friend Const serialVersionUID As Long = 0L
		' Use MappingDefinitionSet.newBuilder() to construct.
'JAVA TO VB CONVERTER TODO TASK: Wildcard generics in constructor parameters are not converted. Move the generic type parameter and constraint to the class header:
'ORIGINAL LINE: private MappingDefinitionSet(org.nd4j.shade.protobuf.GeneratedMessageV3.Builder<?> builder)
'JAVA TO VB CONVERTER NOTE: The parameter builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		Friend Sub New(ByVal builder_Conflict As org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of T1))
		  MyBase.New(builder_Conflict)
		End Sub
		Friend Sub New()
		  mappings_ = java.util.Collections.emptyList()
		  name_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		End Sub

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @java.lang.Override @SuppressWarnings({"unused"}) protected java.lang.Object newInstance(UnusedPrivateParameter unused)
		Protected Friend Overrides Function newInstance(ByVal unused As UnusedPrivateParameter) As Object
		  Return New MappingDefinitionSet()
		End Function

		Public Overrides ReadOnly Property UnknownFields As org.nd4j.shade.protobuf.UnknownFieldSet
			Get
			  Return Me.unknownFields
			End Get
		End Property
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: private MappingDefinitionSet(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Friend Sub New(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
		  Me.New()
		  If extensionRegistry Is Nothing Then
			Throw New System.NullReferenceException()
		  End If
		  Dim mutable_bitField0_ As Integer = 0
		  Dim unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet.Builder = org.nd4j.shade.protobuf.UnknownFieldSet.newBuilder()
		  Try
			Dim done As Boolean = False
			Do While Not done
			  Dim tag As Integer = input.readTag()
			  Select Case tag
				Case 0
				  done = True
				Case 10
				  If Not ((mutable_bitField0_ And &H1) <> 0) Then
					mappings_ = New List(Of org.nd4j.ir.MapperNamespace.MapperDeclaration)()
					mutable_bitField0_ = mutable_bitField0_ Or &H1
				  End If
				  mappings_.Add(input.readMessage(org.nd4j.ir.MapperNamespace.MapperDeclaration.parser(), extensionRegistry))
				Case 18
				  Dim s As String = input.readStringRequireUtf8()
				  If Not ((mutable_bitField0_ And &H2) <> 0) Then
					name_ = New org.nd4j.shade.protobuf.LazyStringArrayList()
					mutable_bitField0_ = mutable_bitField0_ Or &H2
				  End If
				  name_.add(s)
				Case Else
				  If Not parseUnknownField(input, unknownFields, extensionRegistry, tag) Then
					done = True
				  End If
			  End Select
			Loop
		  Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Throw e.setUnfinishedMessage(Me)
		  Catch e As java.io.IOException
			Throw (New org.nd4j.shade.protobuf.InvalidProtocolBufferException(e)).setUnfinishedMessage(Me)
		  Finally
			If ((mutable_bitField0_ And &H1) <> 0) Then
			  mappings_ = java.util.Collections.unmodifiableList(mappings_)
			End If
			If ((mutable_bitField0_ And &H2) <> 0) Then
			  name_ = name_.getUnmodifiableView()
			End If
			Me.unknownFields = unknownFields.build()
			makeExtensionsImmutable()
		  End Try
		End Sub
		Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			Get
			  Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingDefinitionSet_descriptor
			End Get
		End Property

		Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
		  Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingDefinitionSet_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.MapperNamespace.MappingDefinitionSet), GetType(org.nd4j.ir.MapperNamespace.MappingDefinitionSet.Builder))
		End Function

		Public Const MAPPINGS_FIELD_NUMBER As Integer = 1
		Friend mappings_ As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclaration)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
		Public ReadOnly Property MappingsList As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclaration) Implements MappingDefinitionSetOrBuilder.getMappingsList
			Get
			  Return mappings_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder> getMappingsOrBuilderList()
		Public ReadOnly Property MappingsOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder) Implements MappingDefinitionSetOrBuilder.getMappingsOrBuilderList
			Get
			  Return mappings_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
		Public ReadOnly Property MappingsCount As Integer Implements MappingDefinitionSetOrBuilder.getMappingsCount
			Get
			  Return mappings_.Count
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
		Public Function getMappings(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MapperDeclaration Implements MappingDefinitionSetOrBuilder.getMappings
		  Return mappings_(index)
		End Function
		''' <summary>
		''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		''' </summary>
		Public Function getMappingsOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder Implements MappingDefinitionSetOrBuilder.getMappingsOrBuilder
		  Return mappings_(index)
		End Function

		Public Const NAME_FIELD_NUMBER As Integer = 2
		Friend name_ As org.nd4j.shade.protobuf.LazyStringList
		''' <summary>
		''' <code>repeated string name = 2;</code>
		''' </summary>
		Public ReadOnly Property NameList As org.nd4j.shade.protobuf.ProtocolStringList
			Get
			  Return name_
			End Get
		End Property
		''' <summary>
		''' <code>repeated string name = 2;</code>
		''' </summary>
		Public ReadOnly Property NameCount As Integer Implements MappingDefinitionSetOrBuilder.getNameCount
			Get
			  Return name_.size()
			End Get
		End Property
		''' <summary>
		''' <code>repeated string name = 2;</code>
		''' </summary>
		Public Function getName(ByVal index As Integer) As String Implements MappingDefinitionSetOrBuilder.getName
		  Return name_.get(index)
		End Function
		''' <summary>
		''' <code>repeated string name = 2;</code>
		''' </summary>
		Public Function getNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements MappingDefinitionSetOrBuilder.getNameBytes
		  Return name_.getByteString(index)
		End Function

		Friend memoizedIsInitialized As SByte = -1
		Public Overrides ReadOnly Property Initialized As Boolean
			Get
	'JAVA TO VB CONVERTER NOTE: The local variable isInitialized was renamed since Visual Basic will not allow local variables with the same name as their enclosing function or property:
			  Dim isInitialized_Conflict As SByte = memoizedIsInitialized
			  If isInitialized_Conflict = 1 Then
				  Return True
			  End If
			  If isInitialized_Conflict = 0 Then
				  Return False
			  End If
    
			  memoizedIsInitialized = 1
			  Return True
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public void writeTo(org.nd4j.shade.protobuf.CodedOutputStream output) throws java.io.IOException
		Public Overrides Sub writeTo(ByVal output As org.nd4j.shade.protobuf.CodedOutputStream)
		  For i As Integer = 0 To mappings_.Count - 1
			output.writeMessage(1, mappings_(i))
		  Next i
		  For i As Integer = 0 To name_.size() - 1
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 2, name_.getRaw(i))
		  Next i
		  unknownFields.writeTo(output)
		End Sub

		Public Overrides ReadOnly Property SerializedSize As Integer
			Get
			  Dim size As Integer = memoizedSize
			  If size <> -1 Then
				  Return size
			  End If
    
			  size = 0
			  For i As Integer = 0 To mappings_.Count - 1
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(1, mappings_(i))
			  Next i
			  If True Then
				Dim dataSize As Integer = 0
				For i As Integer = 0 To name_.size() - 1
				  dataSize += computeStringSizeNoTag(name_.getRaw(i))
				Next i
				size += dataSize
				size += 1 * NameList.size()
			  End If
			  size += unknownFields.getSerializedSize()
			  memoizedSize = size
			  Return size
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public boolean equals(final java.lang.Object obj)
		Public Overrides Function Equals(ByVal obj As Object) As Boolean
		  If obj Is Me Then
		   Return True
		  End If
		  If Not (TypeOf obj Is org.nd4j.ir.MapperNamespace.MappingDefinitionSet) Then
			Return MyBase.Equals(obj)
		  End If
		  Dim other As org.nd4j.ir.MapperNamespace.MappingDefinitionSet = DirectCast(obj, org.nd4j.ir.MapperNamespace.MappingDefinitionSet)

'JAVA TO VB CONVERTER WARNING: LINQ 'SequenceEqual' is not always identical to Java AbstractList 'equals':
'ORIGINAL LINE: if (!getMappingsList().equals(other.getMappingsList()))
		  If Not getMappingsList().SequenceEqual(other.getMappingsList()) Then
			  Return False
		  End If
		  If Not NameList.Equals(other.NameList) Then
			  Return False
		  End If
		  If Not unknownFields.Equals(other.unknownFields) Then
			  Return False
		  End If
		  Return True
		End Function

		Public Overrides Function GetHashCode() As Integer
		  If memoizedHashCode <> 0 Then
			Return memoizedHashCode
		  End If
		  Dim hash As Integer = 41
		  hash = (19 * hash) + Descriptor.GetHashCode()
		  If MappingsCount > 0 Then
			hash = (37 * hash) + MAPPINGS_FIELD_NUMBER
			hash = (53 * hash) + getMappingsList().GetHashCode()
		  End If
		  If NameCount > 0 Then
			hash = (37 * hash) + NAME_FIELD_NUMBER
			hash = (53 * hash) + NameList.GetHashCode()
		  End If
		  hash = (29 * hash) + unknownFields.GetHashCode()
		  memoizedHashCode = hash
		  Return hash
		End Function

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(java.nio.ByteBuffer data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(java.nio.ByteBuffer data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(org.nd4j.shade.protobuf.ByteString data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(org.nd4j.shade.protobuf.ByteString data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(byte[] data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(byte[] data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseDelimitedFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(org.nd4j.shade.protobuf.CodedInputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MappingDefinitionSet parseFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function

		Public Overrides Function newBuilderForType() As Builder
			Return newBuilder()
		End Function
		Public Shared Function newBuilder() As Builder
		  Return DEFAULT_INSTANCE.toBuilder()
		End Function
		Public Shared Function newBuilder(ByVal prototype As org.nd4j.ir.MapperNamespace.MappingDefinitionSet) As Builder
		  Return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype)
		End Function
		Public Overrides Function toBuilder() As Builder
		  Return If(Me Is DEFAULT_INSTANCE, New Builder(), (New Builder()).mergeFrom(Me))
		End Function

		Protected Friend Overrides Function newBuilderForType(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent) As Builder
'JAVA TO VB CONVERTER NOTE: The variable builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		  Dim builder_Conflict As New Builder(parent)
		  Return builder_Conflict
		End Function
		''' <summary>
		''' Protobuf type {@code org.nd4j.ir.MappingDefinitionSet}
		''' </summary>
		Public NotInheritable Class Builder
			Inherits org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of Builder)
			Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder

		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingDefinitionSet_descriptor
			  End Get
		  End Property

		  Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
			Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingDefinitionSet_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.MapperNamespace.MappingDefinitionSet), GetType(org.nd4j.ir.MapperNamespace.MappingDefinitionSet.Builder))
		  End Function

		  ' Construct using org.nd4j.ir.MapperNamespace.MappingDefinitionSet.newBuilder()
		  Friend Sub New()
			maybeForceBuilderInitialization()
		  End Sub

		  Friend Sub New(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent)
			MyBase.New(parent)
			maybeForceBuilderInitialization()
		  End Sub
		  Friend Sub maybeForceBuilderInitialization()
			If org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders Then
			  getMappingsFieldBuilder()
			End If
		  End Sub
		  Public Overrides Function clear() As Builder
			MyBase.clear()
			If mappingsBuilder_ Is Nothing Then
			  mappings_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			Else
			  mappingsBuilder_.clear()
			End If
			name_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H2)
			Return Me
		  End Function

		  Public Overrides ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MappingDefinitionSet_descriptor
			  End Get
		  End Property

		  Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
			  Get
				Return org.nd4j.ir.MapperNamespace.MappingDefinitionSet.DefaultInstance
			  End Get
		  End Property

		  Public Overrides Function build() As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
			Dim result As org.nd4j.ir.MapperNamespace.MappingDefinitionSet = buildPartial()
			If Not result.Initialized Then
			  Throw newUninitializedMessageException(result)
			End If
			Return result
		  End Function

		  Public Overrides Function buildPartial() As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
			Dim result As New org.nd4j.ir.MapperNamespace.MappingDefinitionSet(Me)
			Dim from_bitField0_ As Integer = bitField0_
			If mappingsBuilder_ Is Nothing Then
			  If ((bitField0_ And &H1) <> 0) Then
				mappings_ = java.util.Collections.unmodifiableList(mappings_)
				bitField0_ = (bitField0_ And Not &H1)
			  End If
			  result.mappings_ = mappings_
			Else
			  result.mappings_ = mappingsBuilder_.build()
			End If
			If ((bitField0_ And &H2) <> 0) Then
			  name_ = name_.getUnmodifiableView()
			  bitField0_ = (bitField0_ And Not &H2)
			End If
			result.name_ = name_
			onBuilt()
			Return result
		  End Function

		  Public Overrides Function clone() As Builder
			Return MyBase.clone()
		  End Function
		  Public Overrides Function setField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.setField(field, value)
		  End Function
		  Public Overrides Function clearField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor) As Builder
			Return MyBase.clearField(field)
		  End Function
		  Public Overrides Function clearOneof(ByVal oneof As org.nd4j.shade.protobuf.Descriptors.OneofDescriptor) As Builder
			Return MyBase.clearOneof(oneof)
		  End Function
		  Public Overrides Function setRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal index As Integer, ByVal value As Object) As Builder
			Return MyBase.setRepeatedField(field, index, value)
		  End Function
		  Public Overrides Function addRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.addRepeatedField(field, value)
		  End Function
		  Public Overrides Function mergeFrom(ByVal other As org.nd4j.shade.protobuf.Message) As Builder
			If TypeOf other Is org.nd4j.ir.MapperNamespace.MappingDefinitionSet Then
			  Return mergeFrom(CType(other, org.nd4j.ir.MapperNamespace.MappingDefinitionSet))
			Else
			  MyBase.mergeFrom(other)
			  Return Me
			End If
		  End Function

		  Public Function mergeFrom(ByVal other As org.nd4j.ir.MapperNamespace.MappingDefinitionSet) As Builder
			If other Is org.nd4j.ir.MapperNamespace.MappingDefinitionSet.DefaultInstance Then
				Return Me
			End If
			If mappingsBuilder_ Is Nothing Then
			  If other.mappings_.Count > 0 Then
				If mappings_.Count = 0 Then
				  mappings_ = other.mappings_
				  bitField0_ = (bitField0_ And Not &H1)
				Else
				  ensureMappingsIsMutable()
				  CType(mappings_, List(Of org.nd4j.ir.MapperNamespace.MapperDeclaration)).AddRange(other.mappings_)
				End If
				onChanged()
			  End If
			Else
			  If other.mappings_.Count > 0 Then
				If mappingsBuilder_.isEmpty() Then
				  mappingsBuilder_.dispose()
				  mappingsBuilder_ = Nothing
				  mappings_ = other.mappings_
				  bitField0_ = (bitField0_ And Not &H1)
				  mappingsBuilder_ = If(org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders, getMappingsFieldBuilder(), Nothing)
				Else
				  mappingsBuilder_.addAllMessages(other.mappings_)
				End If
			  End If
			End If
			If Not other.name_.isEmpty() Then
			  If name_.isEmpty() Then
				name_ = other.name_
				bitField0_ = (bitField0_ And Not &H2)
			  Else
				ensureNameIsMutable()
				name_.addAll(other.name_)
			  End If
			  onChanged()
			End If
			Me.mergeUnknownFields(other.unknownFields)
			onChanged()
			Return Me
		  End Function

		  Public Overrides ReadOnly Property Initialized As Boolean
			  Get
				Return True
			  End Get
		  End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public Builder mergeFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		  Public Overrides Function mergeFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As Builder
			Dim parsedMessage As org.nd4j.ir.MapperNamespace.MappingDefinitionSet = Nothing
			Try
			  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
			Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			  parsedMessage = CType(e.getUnfinishedMessage(), org.nd4j.ir.MapperNamespace.MappingDefinitionSet)
			  Throw e.unwrapIOException()
			Finally
			  If parsedMessage IsNot Nothing Then
				mergeFrom(parsedMessage)
			  End If
			End Try
			Return Me
		  End Function
		  Friend bitField0_ As Integer

		  Friend mappings_ As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclaration) = java.util.Collections.emptyList()
		  Friend Sub ensureMappingsIsMutable()
			If Not ((bitField0_ And &H1) <> 0) Then
			  mappings_ = New List(Of org.nd4j.ir.MapperNamespace.MapperDeclaration)(mappings_)
			  bitField0_ = bitField0_ Or &H1
			End If
		  End Sub

		  Friend mappingsBuilder_ As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.MapperDeclaration, org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder, org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder)

		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property MappingsList As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclaration) Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder.getMappingsList
			  Get
				If mappingsBuilder_ Is Nothing Then
				  Return java.util.Collections.unmodifiableList(mappings_)
				Else
				  Return mappingsBuilder_.getMessageList()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property MappingsCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder.getMappingsCount
			  Get
				If mappingsBuilder_ Is Nothing Then
				  Return mappings_.Count
				Else
				  Return mappingsBuilder_.getCount()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function getMappings(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MapperDeclaration Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder.getMappings
			If mappingsBuilder_ Is Nothing Then
			  Return mappings_(index)
			Else
			  Return mappingsBuilder_.getMessage(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function setMappings(ByVal index As Integer, ByVal value As org.nd4j.ir.MapperNamespace.MapperDeclaration) As Builder
			If mappingsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureMappingsIsMutable()
			  mappings_(index) = value
			  onChanged()
			Else
			  mappingsBuilder_.setMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function setMappings(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder) As Builder
			If mappingsBuilder_ Is Nothing Then
			  ensureMappingsIsMutable()
			  mappings_(index) = builderForValue.build()
			  onChanged()
			Else
			  mappingsBuilder_.setMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function addMappings(ByVal value As org.nd4j.ir.MapperNamespace.MapperDeclaration) As Builder
			If mappingsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureMappingsIsMutable()
			  mappings_.Add(value)
			  onChanged()
			Else
			  mappingsBuilder_.addMessage(value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function addMappings(ByVal index As Integer, ByVal value As org.nd4j.ir.MapperNamespace.MapperDeclaration) As Builder
			If mappingsBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureMappingsIsMutable()
			  mappings_.Insert(index, value)
			  onChanged()
			Else
			  mappingsBuilder_.addMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function addMappings(ByVal builderForValue As org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder) As Builder
			If mappingsBuilder_ Is Nothing Then
			  ensureMappingsIsMutable()
			  mappings_.Add(builderForValue.build())
			  onChanged()
			Else
			  mappingsBuilder_.addMessage(builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function addMappings(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder) As Builder
			If mappingsBuilder_ Is Nothing Then
			  ensureMappingsIsMutable()
			  mappings_.Insert(index, builderForValue.build())
			  onChanged()
			Else
			  mappingsBuilder_.addMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function addAllMappings(Of T1 As org.nd4j.ir.MapperNamespace.MapperDeclaration)(ByVal values As IEnumerable(Of T1)) As Builder
			If mappingsBuilder_ Is Nothing Then
			  ensureMappingsIsMutable()
			  org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, mappings_)
			  onChanged()
			Else
			  mappingsBuilder_.addAllMessages(values)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function clearMappings() As Builder
			If mappingsBuilder_ Is Nothing Then
			  mappings_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			  onChanged()
			Else
			  mappingsBuilder_.clear()
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function removeMappings(ByVal index As Integer) As Builder
			If mappingsBuilder_ Is Nothing Then
			  ensureMappingsIsMutable()
			  mappings_.RemoveAt(index)
			  onChanged()
			Else
			  mappingsBuilder_.remove(index)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function getMappingsBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder
			Return getMappingsFieldBuilder().getBuilder(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function getMappingsOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder.getMappingsOrBuilder
			If mappingsBuilder_ Is Nothing Then
			  Return mappings_(index)
			Else
			  Return mappingsBuilder_.getMessageOrBuilder(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder> getMappingsOrBuilderList()
		  Public ReadOnly Property MappingsOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder) Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder.getMappingsOrBuilderList
			  Get
				If mappingsBuilder_ IsNot Nothing Then
				  Return mappingsBuilder_.getMessageOrBuilderList()
				Else
				  Return java.util.Collections.unmodifiableList(mappings_)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function addMappingsBuilder() As org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder
			Return getMappingsFieldBuilder().addBuilder(org.nd4j.ir.MapperNamespace.MapperDeclaration.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public Function addMappingsBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder
			Return getMappingsFieldBuilder().addBuilder(index, org.nd4j.ir.MapperNamespace.MapperDeclaration.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.MapperDeclaration mappings = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property MappingsBuilderList As IList(Of org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder)
			  Get
				Return getMappingsFieldBuilder().getBuilderList()
			  End Get
		  End Property
		  Friend ReadOnly Property MappingsFieldBuilder As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.MapperDeclaration, org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder, org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder)
			  Get
				If mappingsBuilder_ Is Nothing Then
				  mappingsBuilder_ = New org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.MapperDeclaration, org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder, org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder)(mappings_, ((bitField0_ And &H1) <> 0), getParentForChildren(), isClean())
				  mappings_ = Nothing
				End If
				Return mappingsBuilder_
			  End Get
		  End Property

		  Friend name_ As org.nd4j.shade.protobuf.LazyStringList = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
		  Friend Sub ensureNameIsMutable()
			If Not ((bitField0_ And &H2) <> 0) Then
			  name_ = New org.nd4j.shade.protobuf.LazyStringArrayList(name_)
			  bitField0_ = bitField0_ Or &H2
			End If
		  End Sub
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property NameList As org.nd4j.shade.protobuf.ProtocolStringList
			  Get
				Return name_.getUnmodifiableView()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property NameCount As Integer Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder.getNameCount
			  Get
				Return name_.size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public Function getName(ByVal index As Integer) As String Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder.getName
			Return name_.get(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public Function getNameBytes(ByVal index As Integer) As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MappingDefinitionSetOrBuilder.getNameBytes
			Return name_.getByteString(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public Function setName(ByVal index As Integer, ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureNameIsMutable()
			name_.set(index, value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public Function addName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  ensureNameIsMutable()
			name_.add(value)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public Function addAllName(ByVal values As IEnumerable(Of String)) As Builder
			ensureNameIsMutable()
			org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, name_)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public Function clearName() As Builder
			name_ = org.nd4j.shade.protobuf.LazyStringArrayList.EMPTY
			bitField0_ = (bitField0_ And Not &H2)
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated string name = 2;</code>
		  ''' </summary>
		  Public Function addNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)
			ensureNameIsMutable()
			name_.add(value)
			onChanged()
			Return Me
		  End Function
'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder setUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function setUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.setUnknownFields(unknownFields)
		  End Function

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder mergeUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function mergeUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.mergeUnknownFields(unknownFields)
		  End Function


		  ' @@protoc_insertion_point(builder_scope:org.nd4j.ir.MappingDefinitionSet)
		End Class

		' @@protoc_insertion_point(class_scope:org.nd4j.ir.MappingDefinitionSet)
		Friend Shared ReadOnly DEFAULT_INSTANCE As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
		Shared Sub New()
		  DEFAULT_INSTANCE = New org.nd4j.ir.MapperNamespace.MappingDefinitionSet()
		End Sub

		Public Shared ReadOnly Property DefaultInstance As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

'JAVA TO VB CONVERTER NOTE: The field PARSER was renamed since Visual Basic does not allow fields to have the same name as other class members:
		Friend Shared ReadOnly PARSER_Conflict As org.nd4j.shade.protobuf.Parser(Of MappingDefinitionSet) = New AbstractParserAnonymousInnerClass()

		Private Class AbstractParserAnonymousInnerClass
			Inherits org.nd4j.shade.protobuf.AbstractParser(Of MappingDefinitionSet)

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public MappingDefinitionSet parsePartialFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Public Overrides Function parsePartialFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As MappingDefinitionSet
			  Return New MappingDefinitionSet(input, extensionRegistry)
			End Function
		End Class

		Public Shared Function parser() As org.nd4j.shade.protobuf.Parser(Of MappingDefinitionSet)
		  Return PARSER_Conflict
		End Function

		Public Overrides ReadOnly Property ParserForType As org.nd4j.shade.protobuf.Parser(Of MappingDefinitionSet)
			Get
			  Return PARSER_Conflict
			End Get
		End Property

		Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.MapperNamespace.MappingDefinitionSet
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

	  End Class

	  Public Interface MapperDeclarationOrBuilder
		  Inherits org.nd4j.shade.protobuf.MessageOrBuilder

		''' <summary>
		''' <code>string frameworkName = 1;</code>
		''' </summary>
		ReadOnly Property FrameworkName As String
		''' <summary>
		''' <code>string frameworkName = 1;</code>
		''' </summary>
		ReadOnly Property FrameworkNameBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>string opName = 2;</code>
		''' </summary>
		ReadOnly Property OpName As String
		''' <summary>
		''' <code>string opName = 2;</code>
		''' </summary>
		ReadOnly Property OpNameBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>string inputFrameworkOpName = 3;</code>
		''' </summary>
		ReadOnly Property InputFrameworkOpName As String
		''' <summary>
		''' <code>string inputFrameworkOpName = 3;</code>
		''' </summary>
		ReadOnly Property InputFrameworkOpNameBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
		ReadOnly Property RuleList As IList(Of org.nd4j.ir.MapperNamespace.MappingRule)
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
		Function getRule(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MappingRule
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
		ReadOnly Property RuleCount As Integer
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: java.util.List<? extends org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder> getRuleOrBuilderList();
		ReadOnly Property RuleOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder)
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
		Function getRuleOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder

		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>
		ReadOnly Property IndexOverridesCount As Integer
		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>
		Function containsIndexOverrides(ByVal key As Long) As Boolean
		''' <summary>
		''' Use <seealso cref="getIndexOverridesMap()"/> instead.
		''' </summary>
		<Obsolete>
		ReadOnly Property IndexOverrides As IDictionary(Of Long, Long)
		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>
		ReadOnly Property IndexOverridesMap As IDictionary(Of Long, Long)
		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>

		Function getIndexOverridesOrDefault(ByVal key As Long, ByVal defaultValue As Long) As Long
		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>

		Function getIndexOverridesOrThrow(ByVal key As Long) As Long
	  End Interface
	  ''' <summary>
	  ''' Protobuf type {@code org.nd4j.ir.MapperDeclaration}
	  ''' </summary>
	  Public NotInheritable Class MapperDeclaration
		  Inherits org.nd4j.shade.protobuf.GeneratedMessageV3
		  Implements MapperDeclarationOrBuilder

	  Friend Const serialVersionUID As Long = 0L
		' Use MapperDeclaration.newBuilder() to construct.
'JAVA TO VB CONVERTER TODO TASK: Wildcard generics in constructor parameters are not converted. Move the generic type parameter and constraint to the class header:
'ORIGINAL LINE: private MapperDeclaration(org.nd4j.shade.protobuf.GeneratedMessageV3.Builder<?> builder)
'JAVA TO VB CONVERTER NOTE: The parameter builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		Friend Sub New(ByVal builder_Conflict As org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of T1))
		  MyBase.New(builder_Conflict)
		End Sub
		Friend Sub New()
		  frameworkName_ = ""
		  opName_ = ""
		  inputFrameworkOpName_ = ""
		  rule_ = java.util.Collections.emptyList()
		End Sub

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @java.lang.Override @SuppressWarnings({"unused"}) protected java.lang.Object newInstance(UnusedPrivateParameter unused)
		Protected Friend Overrides Function newInstance(ByVal unused As UnusedPrivateParameter) As Object
		  Return New MapperDeclaration()
		End Function

		Public Overrides ReadOnly Property UnknownFields As org.nd4j.shade.protobuf.UnknownFieldSet
			Get
			  Return Me.unknownFields
			End Get
		End Property
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: private MapperDeclaration(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Friend Sub New(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
		  Me.New()
		  If extensionRegistry Is Nothing Then
			Throw New System.NullReferenceException()
		  End If
		  Dim mutable_bitField0_ As Integer = 0
		  Dim unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet.Builder = org.nd4j.shade.protobuf.UnknownFieldSet.newBuilder()
		  Try
			Dim done As Boolean = False
			Do While Not done
			  Dim tag As Integer = input.readTag()
			  Select Case tag
				Case 0
				  done = True
				Case 10
				  Dim s As String = input.readStringRequireUtf8()

				  frameworkName_ = s
				Case 18
				  Dim s As String = input.readStringRequireUtf8()

				  opName_ = s
				Case 26
				  Dim s As String = input.readStringRequireUtf8()

				  inputFrameworkOpName_ = s
				Case 34
				  If Not ((mutable_bitField0_ And &H1) <> 0) Then
					rule_ = New List(Of org.nd4j.ir.MapperNamespace.MappingRule)()
					mutable_bitField0_ = mutable_bitField0_ Or &H1
				  End If
				  rule_.Add(input.readMessage(org.nd4j.ir.MapperNamespace.MappingRule.parser(), extensionRegistry))
				Case 42
				  If Not ((mutable_bitField0_ And &H2) <> 0) Then
					indexOverrides_ = org.nd4j.shade.protobuf.MapField.newMapField(IndexOverridesDefaultEntryHolder.defaultEntry)
					mutable_bitField0_ = mutable_bitField0_ Or &H2
				  End If
				  Dim indexOverrides__ As org.nd4j.shade.protobuf.MapEntry(Of Long, Long) = input.readMessage(IndexOverridesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry)
				  indexOverrides_.getMutableMap().put(indexOverrides__.getKey(), indexOverrides__.getValue())
				Case Else
				  If Not parseUnknownField(input, unknownFields, extensionRegistry, tag) Then
					done = True
				  End If
			  End Select
			Loop
		  Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Throw e.setUnfinishedMessage(Me)
		  Catch e As java.io.IOException
			Throw (New org.nd4j.shade.protobuf.InvalidProtocolBufferException(e)).setUnfinishedMessage(Me)
		  Finally
			If ((mutable_bitField0_ And &H1) <> 0) Then
			  rule_ = java.util.Collections.unmodifiableList(rule_)
			End If
			Me.unknownFields = unknownFields.build()
			makeExtensionsImmutable()
		  End Try
		End Sub
		Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			Get
			  Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MapperDeclaration_descriptor
			End Get
		End Property

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @SuppressWarnings({"rawtypes"}) @java.lang.Override protected org.nd4j.shade.protobuf.MapField internalGetMapField(int number)
		Protected Friend Overrides Function internalGetMapField(ByVal number As Integer) As org.nd4j.shade.protobuf.MapField
		  Select Case number
			Case 5
			  Return internalGetIndexOverrides()
			Case Else
			  Throw New Exception("Invalid map field number: " & number)
		  End Select
		End Function
		Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
		  Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MapperDeclaration_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.MapperNamespace.MapperDeclaration), GetType(org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder))
		End Function

		Public Const FRAMEWORKNAME_FIELD_NUMBER As Integer = 1
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object frameworkName_;
		Friend frameworkName_ As Object
		''' <summary>
		''' <code>string frameworkName = 1;</code>
		''' </summary>
		Public ReadOnly Property FrameworkName As String Implements MapperDeclarationOrBuilder.getFrameworkName
			Get
			  Dim ref As Object = frameworkName_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				frameworkName_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string frameworkName = 1;</code>
		''' </summary>
		Public ReadOnly Property FrameworkNameBytes As org.nd4j.shade.protobuf.ByteString Implements MapperDeclarationOrBuilder.getFrameworkNameBytes
			Get
			  Dim ref As Object = frameworkName_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				frameworkName_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const OPNAME_FIELD_NUMBER As Integer = 2
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object opName_;
		Friend opName_ As Object
		''' <summary>
		''' <code>string opName = 2;</code>
		''' </summary>
		Public ReadOnly Property OpName As String Implements MapperDeclarationOrBuilder.getOpName
			Get
			  Dim ref As Object = opName_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				opName_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string opName = 2;</code>
		''' </summary>
		Public ReadOnly Property OpNameBytes As org.nd4j.shade.protobuf.ByteString Implements MapperDeclarationOrBuilder.getOpNameBytes
			Get
			  Dim ref As Object = opName_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				opName_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const INPUTFRAMEWORKOPNAME_FIELD_NUMBER As Integer = 3
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object inputFrameworkOpName_;
		Friend inputFrameworkOpName_ As Object
		''' <summary>
		''' <code>string inputFrameworkOpName = 3;</code>
		''' </summary>
		Public ReadOnly Property InputFrameworkOpName As String Implements MapperDeclarationOrBuilder.getInputFrameworkOpName
			Get
			  Dim ref As Object = inputFrameworkOpName_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				inputFrameworkOpName_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string inputFrameworkOpName = 3;</code>
		''' </summary>
		Public ReadOnly Property InputFrameworkOpNameBytes As org.nd4j.shade.protobuf.ByteString Implements MapperDeclarationOrBuilder.getInputFrameworkOpNameBytes
			Get
			  Dim ref As Object = inputFrameworkOpName_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				inputFrameworkOpName_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const RULE_FIELD_NUMBER As Integer = 4
		Friend rule_ As IList(Of org.nd4j.ir.MapperNamespace.MappingRule)
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
		Public ReadOnly Property RuleList As IList(Of org.nd4j.ir.MapperNamespace.MappingRule) Implements MapperDeclarationOrBuilder.getRuleList
			Get
			  Return rule_
			End Get
		End Property
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder> getRuleOrBuilderList()
		Public ReadOnly Property RuleOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder) Implements MapperDeclarationOrBuilder.getRuleOrBuilderList
			Get
			  Return rule_
			End Get
		End Property
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
		Public ReadOnly Property RuleCount As Integer Implements MapperDeclarationOrBuilder.getRuleCount
			Get
			  Return rule_.Count
			End Get
		End Property
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
		Public Function getRule(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MappingRule Implements MapperDeclarationOrBuilder.getRule
		  Return rule_(index)
		End Function
		''' <summary>
		''' <pre>
		''' the rules to apply for attributes
		''' </pre>
		''' 
		''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		''' </summary>
		Public Function getRuleOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder Implements MapperDeclarationOrBuilder.getRuleOrBuilder
		  Return rule_(index)
		End Function

		Public Const INDEXOVERRIDES_FIELD_NUMBER As Integer = 5
		Private NotInheritable Class IndexOverridesDefaultEntryHolder
		  Friend Shared ReadOnly defaultEntry As org.nd4j.shade.protobuf.MapEntry(Of Long, Long) = org.nd4j.shade.protobuf.MapEntry.newDefaultInstance(Of Long, Long)(org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MapperDeclaration_IndexOverridesEntry_descriptor, org.nd4j.shade.protobuf.WireFormat.FieldType.INT64, 0L, org.nd4j.shade.protobuf.WireFormat.FieldType.INT64, 0L)
		End Class
		Friend indexOverrides_ As org.nd4j.shade.protobuf.MapField(Of Long, Long)
		Friend Function internalGetIndexOverrides() As org.nd4j.shade.protobuf.MapField(Of Long, Long)
		  If indexOverrides_ Is Nothing Then
			Return org.nd4j.shade.protobuf.MapField.emptyMapField(IndexOverridesDefaultEntryHolder.defaultEntry)
		  End If
		  Return indexOverrides_
		End Function

		Public ReadOnly Property IndexOverridesCount As Integer Implements MapperDeclarationOrBuilder.getIndexOverridesCount
			Get
			  Return internalGetIndexOverrides().getMap().size()
			End Get
		End Property
		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>

		Public Function containsIndexOverrides(ByVal key As Long) As Boolean Implements MapperDeclarationOrBuilder.containsIndexOverrides

		  Return internalGetIndexOverrides().getMap().containsKey(key)
		End Function
		''' <summary>
		''' Use <seealso cref="getIndexOverridesMap()"/> instead.
		''' </summary>
		<Obsolete>
		Public ReadOnly Property IndexOverrides As IDictionary(Of Long, Long) Implements MapperDeclarationOrBuilder.getIndexOverrides
			Get
			  Return getIndexOverridesMap()
			End Get
		End Property
		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>

		Public ReadOnly Property IndexOverridesMap As IDictionary(Of Long, Long) Implements MapperDeclarationOrBuilder.getIndexOverridesMap
			Get
			  Return internalGetIndexOverrides().getMap()
			End Get
		End Property
		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>

		Public Function getIndexOverridesOrDefault(ByVal key As Long, ByVal defaultValue As Long) As Long Implements MapperDeclarationOrBuilder.getIndexOverridesOrDefault

		  Dim map As IDictionary(Of Long, Long) = internalGetIndexOverrides().getMap()
		  Return If(map.ContainsKey(key), map(key), defaultValue)
		End Function
		''' <summary>
		''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		''' </summary>

		Public Function getIndexOverridesOrThrow(ByVal key As Long) As Long Implements MapperDeclarationOrBuilder.getIndexOverridesOrThrow

		  Dim map As IDictionary(Of Long, Long) = internalGetIndexOverrides().getMap()
		  If Not map.ContainsKey(key) Then
			Throw New System.ArgumentException()
		  End If
		  Return map(key)
		End Function

		Friend memoizedIsInitialized As SByte = -1
		Public Overrides ReadOnly Property Initialized As Boolean
			Get
	'JAVA TO VB CONVERTER NOTE: The local variable isInitialized was renamed since Visual Basic will not allow local variables with the same name as their enclosing function or property:
			  Dim isInitialized_Conflict As SByte = memoizedIsInitialized
			  If isInitialized_Conflict = 1 Then
				  Return True
			  End If
			  If isInitialized_Conflict = 0 Then
				  Return False
			  End If
    
			  memoizedIsInitialized = 1
			  Return True
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public void writeTo(org.nd4j.shade.protobuf.CodedOutputStream output) throws java.io.IOException
		Public Overrides Sub writeTo(ByVal output As org.nd4j.shade.protobuf.CodedOutputStream)
		  If Not FrameworkNameBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 1, frameworkName_)
		  End If
		  If Not OpNameBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 2, opName_)
		  End If
		  If Not InputFrameworkOpNameBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 3, inputFrameworkOpName_)
		  End If
		  For i As Integer = 0 To rule_.Count - 1
			output.writeMessage(4, rule_(i))
		  Next i
		  org.nd4j.shade.protobuf.GeneratedMessageV3.serializeLongMapTo(output, internalGetIndexOverrides(), IndexOverridesDefaultEntryHolder.defaultEntry, 5)
		  unknownFields.writeTo(output)
		End Sub

		Public Overrides ReadOnly Property SerializedSize As Integer
			Get
			  Dim size As Integer = memoizedSize
			  If size <> -1 Then
				  Return size
			  End If
    
			  size = 0
			  If Not FrameworkNameBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(1, frameworkName_)
			  End If
			  If Not OpNameBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(2, opName_)
			  End If
			  If Not InputFrameworkOpNameBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(3, inputFrameworkOpName_)
			  End If
			  For i As Integer = 0 To rule_.Count - 1
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(4, rule_(i))
			  Next i
			  For Each entry As KeyValuePair(Of Long, Long) In internalGetIndexOverrides().getMap().entrySet()
				Dim indexOverrides__ As org.nd4j.shade.protobuf.MapEntry(Of Long, Long) = IndexOverridesDefaultEntryHolder.defaultEntry.newBuilderForType().setKey(entry.Key).setValue(entry.Value).build()
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(5, indexOverrides__)
			  Next entry
			  size += unknownFields.getSerializedSize()
			  memoizedSize = size
			  Return size
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public boolean equals(final java.lang.Object obj)
		Public Overrides Function Equals(ByVal obj As Object) As Boolean
		  If obj Is Me Then
		   Return True
		  End If
		  If Not (TypeOf obj Is org.nd4j.ir.MapperNamespace.MapperDeclaration) Then
			Return MyBase.Equals(obj)
		  End If
		  Dim other As org.nd4j.ir.MapperNamespace.MapperDeclaration = DirectCast(obj, org.nd4j.ir.MapperNamespace.MapperDeclaration)

		  If Not FrameworkName.Equals(other.FrameworkName) Then
			  Return False
		  End If
		  If Not OpName.Equals(other.OpName) Then
			  Return False
		  End If
		  If Not InputFrameworkOpName.Equals(other.InputFrameworkOpName) Then
			  Return False
		  End If
'JAVA TO VB CONVERTER WARNING: LINQ 'SequenceEqual' is not always identical to Java AbstractList 'equals':
'ORIGINAL LINE: if (!getRuleList().equals(other.getRuleList()))
		  If Not getRuleList().SequenceEqual(other.getRuleList()) Then
			  Return False
		  End If
		  If Not internalGetIndexOverrides().Equals(other.internalGetIndexOverrides()) Then
			  Return False
		  End If
		  If Not unknownFields.Equals(other.unknownFields) Then
			  Return False
		  End If
		  Return True
		End Function

		Public Overrides Function GetHashCode() As Integer
		  If memoizedHashCode <> 0 Then
			Return memoizedHashCode
		  End If
		  Dim hash As Integer = 41
		  hash = (19 * hash) + Descriptor.GetHashCode()
		  hash = (37 * hash) + FRAMEWORKNAME_FIELD_NUMBER
		  hash = (53 * hash) + FrameworkName.GetHashCode()
		  hash = (37 * hash) + OPNAME_FIELD_NUMBER
		  hash = (53 * hash) + OpName.GetHashCode()
		  hash = (37 * hash) + INPUTFRAMEWORKOPNAME_FIELD_NUMBER
		  hash = (53 * hash) + InputFrameworkOpName.GetHashCode()
		  If RuleCount > 0 Then
			hash = (37 * hash) + RULE_FIELD_NUMBER
			hash = (53 * hash) + getRuleList().GetHashCode()
		  End If
		  If Not internalGetIndexOverrides().getMap().isEmpty() Then
			hash = (37 * hash) + INDEXOVERRIDES_FIELD_NUMBER
			hash = (53 * hash) + internalGetIndexOverrides().GetHashCode()
		  End If
		  hash = (29 * hash) + unknownFields.GetHashCode()
		  memoizedHashCode = hash
		  Return hash
		End Function

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(java.nio.ByteBuffer data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(java.nio.ByteBuffer data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(org.nd4j.shade.protobuf.ByteString data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(org.nd4j.shade.protobuf.ByteString data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(byte[] data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(byte[] data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseDelimitedFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(org.nd4j.shade.protobuf.CodedInputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.MapperNamespace.MapperDeclaration parseFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.MapperNamespace.MapperDeclaration
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function

		Public Overrides Function newBuilderForType() As Builder
			Return newBuilder()
		End Function
		Public Shared Function newBuilder() As Builder
		  Return DEFAULT_INSTANCE.toBuilder()
		End Function
		Public Shared Function newBuilder(ByVal prototype As org.nd4j.ir.MapperNamespace.MapperDeclaration) As Builder
		  Return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype)
		End Function
		Public Overrides Function toBuilder() As Builder
		  Return If(Me Is DEFAULT_INSTANCE, New Builder(), (New Builder()).mergeFrom(Me))
		End Function

		Protected Friend Overrides Function newBuilderForType(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent) As Builder
'JAVA TO VB CONVERTER NOTE: The variable builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		  Dim builder_Conflict As New Builder(parent)
		  Return builder_Conflict
		End Function
		''' <summary>
		''' Protobuf type {@code org.nd4j.ir.MapperDeclaration}
		''' </summary>
		Public NotInheritable Class Builder
			Inherits org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of Builder)
			Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder

		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MapperDeclaration_descriptor
			  End Get
		  End Property

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @SuppressWarnings({"rawtypes"}) protected org.nd4j.shade.protobuf.MapField internalGetMapField(int number)
		  Protected Friend Function internalGetMapField(ByVal number As Integer) As org.nd4j.shade.protobuf.MapField
			Select Case number
			  Case 5
				Return internalGetIndexOverrides()
			  Case Else
				Throw New Exception("Invalid map field number: " & number)
			End Select
		  End Function
'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @SuppressWarnings({"rawtypes"}) protected org.nd4j.shade.protobuf.MapField internalGetMutableMapField(int number)
		  Protected Friend Function internalGetMutableMapField(ByVal number As Integer) As org.nd4j.shade.protobuf.MapField
			Select Case number
			  Case 5
				Return internalGetMutableIndexOverrides()
			  Case Else
				Throw New Exception("Invalid map field number: " & number)
			End Select
		  End Function
		  Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
			Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MapperDeclaration_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.MapperNamespace.MapperDeclaration), GetType(org.nd4j.ir.MapperNamespace.MapperDeclaration.Builder))
		  End Function

		  ' Construct using org.nd4j.ir.MapperNamespace.MapperDeclaration.newBuilder()
		  Friend Sub New()
			maybeForceBuilderInitialization()
		  End Sub

		  Friend Sub New(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent)
			MyBase.New(parent)
			maybeForceBuilderInitialization()
		  End Sub
		  Friend Sub maybeForceBuilderInitialization()
			If org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders Then
			  getRuleFieldBuilder()
			End If
		  End Sub
		  Public Overrides Function clear() As Builder
			MyBase.clear()
			frameworkName_ = ""

			opName_ = ""

			inputFrameworkOpName_ = ""

			If ruleBuilder_ Is Nothing Then
			  rule_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			Else
			  ruleBuilder_.clear()
			End If
			internalGetMutableIndexOverrides().clear()
			Return Me
		  End Function

		  Public Overrides ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.MapperNamespace.internal_static_org_nd4j_ir_MapperDeclaration_descriptor
			  End Get
		  End Property

		  Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.MapperNamespace.MapperDeclaration
			  Get
				Return org.nd4j.ir.MapperNamespace.MapperDeclaration.DefaultInstance
			  End Get
		  End Property

		  Public Overrides Function build() As org.nd4j.ir.MapperNamespace.MapperDeclaration
			Dim result As org.nd4j.ir.MapperNamespace.MapperDeclaration = buildPartial()
			If Not result.Initialized Then
			  Throw newUninitializedMessageException(result)
			End If
			Return result
		  End Function

		  Public Overrides Function buildPartial() As org.nd4j.ir.MapperNamespace.MapperDeclaration
			Dim result As New org.nd4j.ir.MapperNamespace.MapperDeclaration(Me)
			Dim from_bitField0_ As Integer = bitField0_
			result.frameworkName_ = frameworkName_
			result.opName_ = opName_
			result.inputFrameworkOpName_ = inputFrameworkOpName_
			If ruleBuilder_ Is Nothing Then
			  If ((bitField0_ And &H1) <> 0) Then
				rule_ = java.util.Collections.unmodifiableList(rule_)
				bitField0_ = (bitField0_ And Not &H1)
			  End If
			  result.rule_ = rule_
			Else
			  result.rule_ = ruleBuilder_.build()
			End If
			result.indexOverrides_ = internalGetIndexOverrides()
			result.indexOverrides_.makeImmutable()
			onBuilt()
			Return result
		  End Function

		  Public Overrides Function clone() As Builder
			Return MyBase.clone()
		  End Function
		  Public Overrides Function setField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.setField(field, value)
		  End Function
		  Public Overrides Function clearField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor) As Builder
			Return MyBase.clearField(field)
		  End Function
		  Public Overrides Function clearOneof(ByVal oneof As org.nd4j.shade.protobuf.Descriptors.OneofDescriptor) As Builder
			Return MyBase.clearOneof(oneof)
		  End Function
		  Public Overrides Function setRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal index As Integer, ByVal value As Object) As Builder
			Return MyBase.setRepeatedField(field, index, value)
		  End Function
		  Public Overrides Function addRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.addRepeatedField(field, value)
		  End Function
		  Public Overrides Function mergeFrom(ByVal other As org.nd4j.shade.protobuf.Message) As Builder
			If TypeOf other Is org.nd4j.ir.MapperNamespace.MapperDeclaration Then
			  Return mergeFrom(CType(other, org.nd4j.ir.MapperNamespace.MapperDeclaration))
			Else
			  MyBase.mergeFrom(other)
			  Return Me
			End If
		  End Function

		  Public Function mergeFrom(ByVal other As org.nd4j.ir.MapperNamespace.MapperDeclaration) As Builder
			If other Is org.nd4j.ir.MapperNamespace.MapperDeclaration.DefaultInstance Then
				Return Me
			End If
			If other.FrameworkName.Length > 0 Then
			  frameworkName_ = other.frameworkName_
			  onChanged()
			End If
			If other.OpName.Length > 0 Then
			  opName_ = other.opName_
			  onChanged()
			End If
			If other.InputFrameworkOpName.Length > 0 Then
			  inputFrameworkOpName_ = other.inputFrameworkOpName_
			  onChanged()
			End If
			If ruleBuilder_ Is Nothing Then
			  If other.rule_.Count > 0 Then
				If rule_.Count = 0 Then
				  rule_ = other.rule_
				  bitField0_ = (bitField0_ And Not &H1)
				Else
				  ensureRuleIsMutable()
				  CType(rule_, List(Of org.nd4j.ir.MapperNamespace.MappingRule)).AddRange(other.rule_)
				End If
				onChanged()
			  End If
			Else
			  If other.rule_.Count > 0 Then
				If ruleBuilder_.isEmpty() Then
				  ruleBuilder_.dispose()
				  ruleBuilder_ = Nothing
				  rule_ = other.rule_
				  bitField0_ = (bitField0_ And Not &H1)
				  ruleBuilder_ = If(org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders, getRuleFieldBuilder(), Nothing)
				Else
				  ruleBuilder_.addAllMessages(other.rule_)
				End If
			  End If
			End If
			internalGetMutableIndexOverrides().mergeFrom(other.internalGetIndexOverrides())
			Me.mergeUnknownFields(other.unknownFields)
			onChanged()
			Return Me
		  End Function

		  Public Overrides ReadOnly Property Initialized As Boolean
			  Get
				Return True
			  End Get
		  End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public Builder mergeFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		  Public Overrides Function mergeFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As Builder
			Dim parsedMessage As org.nd4j.ir.MapperNamespace.MapperDeclaration = Nothing
			Try
			  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
			Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			  parsedMessage = CType(e.getUnfinishedMessage(), org.nd4j.ir.MapperNamespace.MapperDeclaration)
			  Throw e.unwrapIOException()
			Finally
			  If parsedMessage IsNot Nothing Then
				mergeFrom(parsedMessage)
			  End If
			End Try
			Return Me
		  End Function
		  Friend bitField0_ As Integer

		  Friend frameworkName_ As Object = ""
		  ''' <summary>
		  ''' <code>string frameworkName = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property FrameworkName As String Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getFrameworkName
			  Get
				Dim ref As Object = frameworkName_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  frameworkName_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string frameworkName = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property FrameworkNameBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getFrameworkNameBytes
			  Get
				Dim ref As Object = frameworkName_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  frameworkName_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string frameworkName = 1;</code>
		  ''' </summary>
		  Public Function setFrameworkName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			frameworkName_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string frameworkName = 1;</code>
		  ''' </summary>
		  Public Function clearFrameworkName() As Builder

			frameworkName_ = DefaultInstance.FrameworkName
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string frameworkName = 1;</code>
		  ''' </summary>
		  Public Function setFrameworkNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			frameworkName_ = value
			onChanged()
			Return Me
		  End Function

		  Friend opName_ As Object = ""
		  ''' <summary>
		  ''' <code>string opName = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property OpName As String Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getOpName
			  Get
				Dim ref As Object = opName_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  opName_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string opName = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property OpNameBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getOpNameBytes
			  Get
				Dim ref As Object = opName_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  opName_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string opName = 2;</code>
		  ''' </summary>
		  Public Function setOpName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			opName_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string opName = 2;</code>
		  ''' </summary>
		  Public Function clearOpName() As Builder

			opName_ = DefaultInstance.OpName
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string opName = 2;</code>
		  ''' </summary>
		  Public Function setOpNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			opName_ = value
			onChanged()
			Return Me
		  End Function

		  Friend inputFrameworkOpName_ As Object = ""
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 3;</code>
		  ''' </summary>
		  Public ReadOnly Property InputFrameworkOpName As String Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getInputFrameworkOpName
			  Get
				Dim ref As Object = inputFrameworkOpName_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  inputFrameworkOpName_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 3;</code>
		  ''' </summary>
		  Public ReadOnly Property InputFrameworkOpNameBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getInputFrameworkOpNameBytes
			  Get
				Dim ref As Object = inputFrameworkOpName_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  inputFrameworkOpName_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 3;</code>
		  ''' </summary>
		  Public Function setInputFrameworkOpName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			inputFrameworkOpName_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 3;</code>
		  ''' </summary>
		  Public Function clearInputFrameworkOpName() As Builder

			inputFrameworkOpName_ = DefaultInstance.InputFrameworkOpName
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string inputFrameworkOpName = 3;</code>
		  ''' </summary>
		  Public Function setInputFrameworkOpNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			inputFrameworkOpName_ = value
			onChanged()
			Return Me
		  End Function

		  Friend rule_ As IList(Of org.nd4j.ir.MapperNamespace.MappingRule) = java.util.Collections.emptyList()
		  Friend Sub ensureRuleIsMutable()
			If Not ((bitField0_ And &H1) <> 0) Then
			  rule_ = New List(Of org.nd4j.ir.MapperNamespace.MappingRule)(rule_)
			  bitField0_ = bitField0_ Or &H1
			End If
		  End Sub

		  Friend ruleBuilder_ As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.MappingRule, org.nd4j.ir.MapperNamespace.MappingRule.Builder, org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder)

		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public ReadOnly Property RuleList As IList(Of org.nd4j.ir.MapperNamespace.MappingRule) Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getRuleList
			  Get
				If ruleBuilder_ Is Nothing Then
				  Return java.util.Collections.unmodifiableList(rule_)
				Else
				  Return ruleBuilder_.getMessageList()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public ReadOnly Property RuleCount As Integer Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getRuleCount
			  Get
				If ruleBuilder_ Is Nothing Then
				  Return rule_.Count
				Else
				  Return ruleBuilder_.getCount()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function getRule(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MappingRule Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getRule
			If ruleBuilder_ Is Nothing Then
			  Return rule_(index)
			Else
			  Return ruleBuilder_.getMessage(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function setRule(ByVal index As Integer, ByVal value As org.nd4j.ir.MapperNamespace.MappingRule) As Builder
			If ruleBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureRuleIsMutable()
			  rule_(index) = value
			  onChanged()
			Else
			  ruleBuilder_.setMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function setRule(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.MapperNamespace.MappingRule.Builder) As Builder
			If ruleBuilder_ Is Nothing Then
			  ensureRuleIsMutable()
			  rule_(index) = builderForValue.build()
			  onChanged()
			Else
			  ruleBuilder_.setMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function addRule(ByVal value As org.nd4j.ir.MapperNamespace.MappingRule) As Builder
			If ruleBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureRuleIsMutable()
			  rule_.Add(value)
			  onChanged()
			Else
			  ruleBuilder_.addMessage(value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function addRule(ByVal index As Integer, ByVal value As org.nd4j.ir.MapperNamespace.MappingRule) As Builder
			If ruleBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureRuleIsMutable()
			  rule_.Insert(index, value)
			  onChanged()
			Else
			  ruleBuilder_.addMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function addRule(ByVal builderForValue As org.nd4j.ir.MapperNamespace.MappingRule.Builder) As Builder
			If ruleBuilder_ Is Nothing Then
			  ensureRuleIsMutable()
			  rule_.Add(builderForValue.build())
			  onChanged()
			Else
			  ruleBuilder_.addMessage(builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function addRule(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.MapperNamespace.MappingRule.Builder) As Builder
			If ruleBuilder_ Is Nothing Then
			  ensureRuleIsMutable()
			  rule_.Insert(index, builderForValue.build())
			  onChanged()
			Else
			  ruleBuilder_.addMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function addAllRule(Of T1 As org.nd4j.ir.MapperNamespace.MappingRule)(ByVal values As IEnumerable(Of T1)) As Builder
			If ruleBuilder_ Is Nothing Then
			  ensureRuleIsMutable()
			  org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, rule_)
			  onChanged()
			Else
			  ruleBuilder_.addAllMessages(values)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function clearRule() As Builder
			If ruleBuilder_ Is Nothing Then
			  rule_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			  onChanged()
			Else
			  ruleBuilder_.clear()
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function removeRule(ByVal index As Integer) As Builder
			If ruleBuilder_ Is Nothing Then
			  ensureRuleIsMutable()
			  rule_.RemoveAt(index)
			  onChanged()
			Else
			  ruleBuilder_.remove(index)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function getRuleBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MappingRule.Builder
			Return getRuleFieldBuilder().getBuilder(index)
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function getRuleOrBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getRuleOrBuilder
			If ruleBuilder_ Is Nothing Then
			  Return rule_(index)
			Else
			  Return ruleBuilder_.getMessageOrBuilder(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder> getRuleOrBuilderList()
		  Public ReadOnly Property RuleOrBuilderList As IList(Of org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder) Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getRuleOrBuilderList
			  Get
				If ruleBuilder_ IsNot Nothing Then
				  Return ruleBuilder_.getMessageOrBuilderList()
				Else
				  Return java.util.Collections.unmodifiableList(rule_)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function addRuleBuilder() As org.nd4j.ir.MapperNamespace.MappingRule.Builder
			Return getRuleFieldBuilder().addBuilder(org.nd4j.ir.MapperNamespace.MappingRule.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public Function addRuleBuilder(ByVal index As Integer) As org.nd4j.ir.MapperNamespace.MappingRule.Builder
			Return getRuleFieldBuilder().addBuilder(index, org.nd4j.ir.MapperNamespace.MappingRule.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <pre>
		  ''' the rules to apply for attributes
		  ''' </pre>
		  ''' 
		  ''' <code>repeated .org.nd4j.ir.MappingRule rule = 4;</code>
		  ''' </summary>
		  Public ReadOnly Property RuleBuilderList As IList(Of org.nd4j.ir.MapperNamespace.MappingRule.Builder)
			  Get
				Return getRuleFieldBuilder().getBuilderList()
			  End Get
		  End Property
		  Friend ReadOnly Property RuleFieldBuilder As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.MappingRule, org.nd4j.ir.MapperNamespace.MappingRule.Builder, org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder)
			  Get
				If ruleBuilder_ Is Nothing Then
				  ruleBuilder_ = New org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.MapperNamespace.MappingRule, org.nd4j.ir.MapperNamespace.MappingRule.Builder, org.nd4j.ir.MapperNamespace.MappingRuleOrBuilder)(rule_, ((bitField0_ And &H1) <> 0), getParentForChildren(), isClean())
				  rule_ = Nothing
				End If
				Return ruleBuilder_
			  End Get
		  End Property

		  Friend indexOverrides_ As org.nd4j.shade.protobuf.MapField(Of Long, Long)
		  Friend Function internalGetIndexOverrides() As org.nd4j.shade.protobuf.MapField(Of Long, Long)
			If indexOverrides_ Is Nothing Then
			  Return org.nd4j.shade.protobuf.MapField.emptyMapField(IndexOverridesDefaultEntryHolder.defaultEntry)
			End If
			Return indexOverrides_
		  End Function
		  Friend Function internalGetMutableIndexOverrides() As org.nd4j.shade.protobuf.MapField(Of Long, Long)
			onChanged()
			If indexOverrides_ Is Nothing Then
			  indexOverrides_ = org.nd4j.shade.protobuf.MapField.newMapField(IndexOverridesDefaultEntryHolder.defaultEntry)
			End If
			If Not indexOverrides_.isMutable() Then
			  indexOverrides_ = indexOverrides_.copy()
			End If
			Return indexOverrides_
		  End Function

		  Public ReadOnly Property IndexOverridesCount As Integer Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getIndexOverridesCount
			  Get
				Return internalGetIndexOverrides().getMap().size()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		  ''' </summary>

		  Public Function containsIndexOverrides(ByVal key As Long) As Boolean Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.containsIndexOverrides

			Return internalGetIndexOverrides().getMap().containsKey(key)
		  End Function
		  ''' <summary>
		  ''' Use <seealso cref="getIndexOverridesMap()"/> instead.
		  ''' </summary>
		  <Obsolete>
		  Public ReadOnly Property IndexOverrides As IDictionary(Of Long, Long) Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getIndexOverrides
			  Get
				Return getIndexOverridesMap()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		  ''' </summary>

		  Public ReadOnly Property IndexOverridesMap As IDictionary(Of Long, Long) Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getIndexOverridesMap
			  Get
				Return internalGetIndexOverrides().getMap()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		  ''' </summary>

		  Public Function getIndexOverridesOrDefault(ByVal key As Long, ByVal defaultValue As Long) As Long Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getIndexOverridesOrDefault

			Dim map As IDictionary(Of Long, Long) = internalGetIndexOverrides().getMap()
			Return If(map.ContainsKey(key), map(key), defaultValue)
		  End Function
		  ''' <summary>
		  ''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		  ''' </summary>

		  Public Function getIndexOverridesOrThrow(ByVal key As Long) As Long Implements org.nd4j.ir.MapperNamespace.MapperDeclarationOrBuilder.getIndexOverridesOrThrow

			Dim map As IDictionary(Of Long, Long) = internalGetIndexOverrides().getMap()
			If Not map.ContainsKey(key) Then
			  Throw New System.ArgumentException()
			End If
			Return map(key)
		  End Function

		  Public Function clearIndexOverrides() As Builder
			internalGetMutableIndexOverrides().getMutableMap().clear()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		  ''' </summary>

		  Public Function removeIndexOverrides(ByVal key As Long) As Builder

			internalGetMutableIndexOverrides().getMutableMap().remove(key)
			Return Me
		  End Function
		  ''' <summary>
		  ''' Use alternate mutation accessors instead.
		  ''' </summary>
		  <Obsolete>
		  Public ReadOnly Property MutableIndexOverrides As IDictionary(Of Long, Long)
			  Get
				Return internalGetMutableIndexOverrides().getMutableMap()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		  ''' </summary>
		  Public Function putIndexOverrides(ByVal key As Long, ByVal value As Long) As Builder


			internalGetMutableIndexOverrides().getMutableMap().put(key, value)
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>map&lt;int64, int64&gt; indexOverrides = 5;</code>
		  ''' </summary>

		  Public Function putAllIndexOverrides(ByVal values As IDictionary(Of Long, Long)) As Builder
			internalGetMutableIndexOverrides().getMutableMap().putAll(values)
			Return Me
		  End Function
'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder setUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function setUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.setUnknownFields(unknownFields)
		  End Function

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder mergeUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function mergeUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.mergeUnknownFields(unknownFields)
		  End Function


		  ' @@protoc_insertion_point(builder_scope:org.nd4j.ir.MapperDeclaration)
		End Class

		' @@protoc_insertion_point(class_scope:org.nd4j.ir.MapperDeclaration)
		Friend Shared ReadOnly DEFAULT_INSTANCE As org.nd4j.ir.MapperNamespace.MapperDeclaration
		Shared Sub New()
		  DEFAULT_INSTANCE = New org.nd4j.ir.MapperNamespace.MapperDeclaration()
		End Sub

		Public Shared ReadOnly Property DefaultInstance As org.nd4j.ir.MapperNamespace.MapperDeclaration
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

'JAVA TO VB CONVERTER NOTE: The field PARSER was renamed since Visual Basic does not allow fields to have the same name as other class members:
		Friend Shared ReadOnly PARSER_Conflict As org.nd4j.shade.protobuf.Parser(Of MapperDeclaration) = New AbstractParserAnonymousInnerClass()

		Private Class AbstractParserAnonymousInnerClass
			Inherits org.nd4j.shade.protobuf.AbstractParser(Of MapperDeclaration)

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public MapperDeclaration parsePartialFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Public Overrides Function parsePartialFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As MapperDeclaration
			  Return New MapperDeclaration(input, extensionRegistry)
			End Function
		End Class

		Public Shared Function parser() As org.nd4j.shade.protobuf.Parser(Of MapperDeclaration)
		  Return PARSER_Conflict
		End Function

		Public Overrides ReadOnly Property ParserForType As org.nd4j.shade.protobuf.Parser(Of MapperDeclaration)
			Get
			  Return PARSER_Conflict
			End Get
		End Property

		Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.MapperNamespace.MapperDeclaration
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

	  End Class

	  Private Shared ReadOnly internal_static_org_nd4j_ir_MappingRule_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MappingRule_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MappingRule_InputToOutputEntry_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MappingRule_InputToOutputEntry_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
	  Private Shared ReadOnly internal_static_org_nd4j_ir_TransformerArgs_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_TransformerArgs_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MappingDefinitionSet_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MappingDefinitionSet_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MapperDeclaration_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MapperDeclaration_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MapperDeclaration_IndexOverridesEntry_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_MapperDeclaration_IndexOverridesEntry_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable

	  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.FileDescriptor
		  Get
			Return descriptor
		  End Get
	  End Property
	  Private Shared descriptor As org.nd4j.shade.protobuf.Descriptors.FileDescriptor
	  Shared Sub New()
		Dim descriptorData() As String = { vbLf & ChrW(&O014).ToString() & "mapper.proto" & ChrW(&O022).ToString() & ChrW(&O013).ToString() & "org.nd4j.ir" & ChrW(&O032).ToString() & ChrW(&O010).ToString() & "op.proto""" & ChrW(&O201).ToString() & ChrW(&O005).ToString() & vbLf & ChrW(&O013).ToString() & "MappingRule" & ChrW(&O022).ToString() & ChrW(&O020).ToString() & vbLf & ChrW(&O010).ToString() & "ruleName" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O024).ToString() & vbLf & ChrW(&O014).ToString() & "funct" & "ionName" & ChrW(&O030).ToString() & ChrW(&O002).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O033).ToString() & vbLf & ChrW(&O023).ToString() & "inputStringAttrName" & ChrW(&O030).ToString() & ChrW(&O003).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O034).ToString() & vbLf & ChrW(&O024).ToString() & "outputStringAttrName" & ChrW(&O030).ToString() & ChrW(&O004).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O024).ToString() & vbLf & ChrW(&O014).ToString() & "inpu" & "tIntName" & ChrW(&O030).ToString() & ChrW(&O005).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O025).ToString() & vbLf & vbCr & "outputIntName" & ChrW(&O030).ToString() & ChrW(&O006).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O026).ToString() & vbLf & ChrW(&O016).ToString() & "inputFloatName" & ChrW(&O030).ToString() & ChrW(&O007).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O027).ToString() & vbLf & ChrW(&O017).ToString() & "outputFloatName" & ChrW(&O030).ToString() & ChrW(&O010).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O027).ToString() & vbLf & ChrW(&O017).ToString() & "inputDoubleName" & ChrW(&O030).ToString() & vbTab & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O030).ToString() & vbLf & ChrW(&O020).ToString() & "outpu" & "tDoubleName" & ChrW(&O030).ToString() & vbLf & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O030).ToString() & vbLf & ChrW(&O020).ToString() & "inputBooleanName" & ChrW(&O030).ToString() & ChrW(&O013).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O031).ToString() & vbLf & ChrW(&O021).ToString() & "outputBooleanName" & ChrW(&O030).ToString() & ChrW(&O014).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O027).ToString() & vbLf & ChrW(&O017).ToString() & "inputT" & "ensorName" & ChrW(&O030).ToString() & vbCr & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O030).ToString() & vbLf & ChrW(&O020).ToString() & "outputTensorName" & ChrW(&O030).ToString() & ChrW(&O016).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O031).ToString() & vbLf & ChrW(&O021).ToString() & "inputDataTypeName" & ChrW(&O030).ToString() & ChrW(&O017).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O032).ToString() & vbLf & ChrW(&O022).ToString() & "outputDa" & "taTypeName" & ChrW(&O030).ToString() & ChrW(&O020).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & ChrW(&O022).ToString() & "B" & vbLf & vbCr & "inputToOutput" & ChrW(&O030).ToString() & ChrW(&O021).ToString() & " " & ChrW(&O003).ToString() & "(" & ChrW(&O013).ToString() & "2" & "+.org.nd4j.ir.MappingRule.InputToOutputE" & "ntry" & ChrW(&O022).ToString() & ChrW(&O020).ToString() & vbLf & ChrW(&O010).ToString() & "ruleType" & ChrW(&O030).ToString() & ChrW(&O022).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & "5" & vbLf & ChrW(&O017).ToString() & "transformerArg" & "s" & ChrW(&O030).ToString() & ChrW(&O023).ToString() & " " & ChrW(&O003).ToString() & "(" & ChrW(&O013).ToString() & "2" & ChrW(&O034).ToString() & ".org.nd4j.ir.TransformerArgs" & ChrW(&O022).ToString() & ChrW(&O034).ToString() & vbLf & ChrW(&O024).ToString() & "inputFrameworkOpName" & ChrW(&O030).ToString() & ChrW(&O024).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O032).ToString() & "4" & vbLf & ChrW(&O022).ToString() & "InputToOu" & "tputEntry" & ChrW(&O022).ToString() & ChrW(&O013).ToString() & vbLf & ChrW(&O003).ToString() & "key" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & vbCrLf & ChrW(&O005).ToString() & "value" & ChrW(&O030).ToString() & ChrW(&O002).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ":" & ChrW(&O002).ToString() & "8" & ChrW(&O001).ToString() & """S" & vbLf & ChrW(&O017).ToString() & "TransformerArgs" & ChrW(&O022).ToString() & ChrW(&O013).ToString() & vbLf & ChrW(&O003).ToString() & "key" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & "3" & vbLf & ChrW(&O017).ToString() & "tra" & "nsformerArgs" & ChrW(&O030).ToString() & ChrW(&O002).ToString() & " " & ChrW(&O003).ToString() & "(" & ChrW(&O013).ToString() & "2" & ChrW(&O032).ToString() & ".org.nd4j.ir.ArgDesc" & "riptor""V" & vbLf & ChrW(&O024).ToString() & "MappingDefinitionSet" & ChrW(&O022).ToString() & "0" & vbLf & ChrW(&O010).ToString() & "mappin" & "gs" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O003).ToString() & "(" & ChrW(&O013).ToString() & "2" & ChrW(&O036).ToString() & ".org.nd4j.ir.MapperDeclaration" & ChrW(&O022).ToString() & ChrW(&O014).ToString() & vbLf & ChrW(&O004).ToString() & "name" & ChrW(&O030).ToString() & ChrW(&O002).ToString() & " " & ChrW(&O003).ToString() & "(" & vbTab & """" & ChrW(&O203).ToString() & ChrW(&O002).ToString() & vbLf & ChrW(&O021).ToString() & "MapperDeclaration" & ChrW(&O022).ToString() & ChrW(&O025).ToString() & vbLf & vbCr & "frameworkName" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O016).ToString() & vbLf & ChrW(&O006).ToString() & "opName" & ChrW(&O030).ToString() & ChrW(&O002).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O034).ToString() & vbLf & ChrW(&O024).ToString() & "i" & "nputFrameworkOpName" & ChrW(&O030).ToString() & ChrW(&O003).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & "&" & vbLf & ChrW(&O004).ToString() & "rule" & ChrW(&O030).ToString() & ChrW(&O004).ToString() & " " & ChrW(&O003).ToString() & "(" & ChrW(&O013).ToString() & "2" & ChrW(&O030).ToString() & ".org.nd4j.ir.MappingRule" & ChrW(&O022).ToString() & "J" & vbLf & ChrW(&O016).ToString() & "indexOverri" & "des" & ChrW(&O030).ToString() & ChrW(&O005).ToString() & " " & ChrW(&O003).ToString() & "(" & ChrW(&O013).ToString() & "22.org.nd4j.ir.MapperDeclaratio" & "n.IndexOverridesEntry" & ChrW(&O032).ToString() & "5" & vbLf & ChrW(&O023).ToString() & "IndexOverridesE" & "ntry" & ChrW(&O022).ToString() & ChrW(&O013).ToString() & vbLf & ChrW(&O003).ToString() & "key" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O003).ToString() & ChrW(&O022).ToString() & vbCrLf & ChrW(&O005).ToString() & "value" & ChrW(&O030).ToString() & ChrW(&O002).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O003).ToString() & ":" & ChrW(&O002).ToString() & "8" & ChrW(&O001).ToString() & "*b" & vbLf & vbLf & "OpListType" & ChrW(&O022).ToString() & ChrW(&O010).ToString() & vbLf & ChrW(&O004).ToString() & "TARG" & ChrW(&O020).ToString() & ChrW(&O000).ToString() & ChrW(&O022).ToString() & ChrW(&O010).ToString() & vbLf & ChrW(&O004).ToString() & "IARG" & ChrW(&O020).ToString() & ChrW(&O001).ToString() & ChrW(&O022).ToString() & ChrW(&O010).ToString() & vbLf & ChrW(&O004).ToString() & "BARG" & ChrW(&O020).ToString() & ChrW(&O002).ToString() & ChrW(&O022).ToString() & ChrW(&O014).ToString() & vbLf & ChrW(&O010).ToString() & "DTYPEARG" & ChrW(&O020).ToString() & ChrW(&O003).ToString() & ChrW(&O022).ToString() & ChrW(&O014).ToString() & vbLf & ChrW(&O010).ToString() & "INPUTARG" & ChrW(&O020).ToString() & ChrW(&O004).ToString() & ChrW(&O022).ToString() & vbCrLf & vbTab & "OUTPUTAR" & "G" & ChrW(&O020).ToString() & ChrW(&O005).ToString() & ChrW(&O022).ToString() & ChrW(&O013).ToString() & vbLf & ChrW(&O007).ToString() & "AXISARG" & ChrW(&O020).ToString() & ChrW(&O006).ToString() & "B" & ChrW(&O021).ToString() & "B" & ChrW(&O017).ToString() & "MapperNamespaceb" & ChrW(&O006).ToString() & "pro" & "to3" }
		descriptor = org.nd4j.shade.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, New org.nd4j.shade.protobuf.Descriptors.FileDescriptor() { org.nd4j.ir.OpNamespace.Descriptor})
		internal_static_org_nd4j_ir_MappingRule_descriptor = Descriptor.getMessageTypes().get(0)
		internal_static_org_nd4j_ir_MappingRule_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_MappingRule_descriptor, New String() { "RuleName", "FunctionName", "InputStringAttrName", "OutputStringAttrName", "InputIntName", "OutputIntName", "InputFloatName", "OutputFloatName", "InputDoubleName", "OutputDoubleName", "InputBooleanName", "OutputBooleanName", "InputTensorName", "OutputTensorName", "InputDataTypeName", "OutputDataTypeName", "InputToOutput", "RuleType", "TransformerArgs", "InputFrameworkOpName"})
		internal_static_org_nd4j_ir_MappingRule_InputToOutputEntry_descriptor = internal_static_org_nd4j_ir_MappingRule_descriptor.getNestedTypes().get(0)
		internal_static_org_nd4j_ir_MappingRule_InputToOutputEntry_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_MappingRule_InputToOutputEntry_descriptor, New String() { "Key", "Value"})
		internal_static_org_nd4j_ir_TransformerArgs_descriptor = Descriptor.getMessageTypes().get(1)
		internal_static_org_nd4j_ir_TransformerArgs_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_TransformerArgs_descriptor, New String() { "Key", "TransformerArgs"})
		internal_static_org_nd4j_ir_MappingDefinitionSet_descriptor = Descriptor.getMessageTypes().get(2)
		internal_static_org_nd4j_ir_MappingDefinitionSet_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_MappingDefinitionSet_descriptor, New String() { "Mappings", "Name"})
		internal_static_org_nd4j_ir_MapperDeclaration_descriptor = Descriptor.getMessageTypes().get(3)
		internal_static_org_nd4j_ir_MapperDeclaration_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_MapperDeclaration_descriptor, New String() { "FrameworkName", "OpName", "InputFrameworkOpName", "Rule", "IndexOverrides"})
		internal_static_org_nd4j_ir_MapperDeclaration_IndexOverridesEntry_descriptor = internal_static_org_nd4j_ir_MapperDeclaration_descriptor.getNestedTypes().get(0)
		internal_static_org_nd4j_ir_MapperDeclaration_IndexOverridesEntry_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_MapperDeclaration_IndexOverridesEntry_descriptor, New String() { "Key", "Value"})
		org.nd4j.ir.OpNamespace.Descriptor
	  End Sub

	  ' @@protoc_insertion_point(outer_class_scope)
	End Class

End Namespace