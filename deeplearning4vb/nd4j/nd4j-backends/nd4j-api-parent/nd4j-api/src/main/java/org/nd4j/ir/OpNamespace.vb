Imports System
Imports System.Collections.Generic
Imports System.IO
Imports Microsoft.VisualBasic
Imports System.Linq

' Generated by the protocol buffer compiler.  DO NOT EDIT!
' source: op.proto

Namespace org.nd4j.ir

	Public NotInheritable Class OpNamespace
	  Private Sub New()
	  End Sub
	  Public Shared Sub registerAllExtensions(ByVal registry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
	  End Sub

	  Public Shared Sub registerAllExtensions(ByVal registry As org.nd4j.shade.protobuf.ExtensionRegistry)
		registerAllExtensions(CType(registry, org.nd4j.shade.protobuf.ExtensionRegistryLite))
	  End Sub
	  Public Interface ArgDescriptorOrBuilder
		  Inherits org.nd4j.shade.protobuf.MessageOrBuilder

		''' <summary>
		''' <code>string name = 1;</code>
		''' </summary>
		ReadOnly Property Name As String
		''' <summary>
		''' <code>string name = 1;</code>
		''' </summary>
		ReadOnly Property NameBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>float floatValue = 2;</code>
		''' </summary>
		ReadOnly Property FloatValue As Single

		''' <summary>
		''' <code>double doubleValue = 3;</code>
		''' </summary>
		ReadOnly Property DoubleValue As Double

		''' <summary>
		''' <code>int32 int32Value = 4;</code>
		''' </summary>
		ReadOnly Property Int32Value As Integer

		''' <summary>
		''' <code>int64 int64Value = 5;</code>
		''' </summary>
		ReadOnly Property Int64Value As Long

		''' <summary>
		''' <code>bool boolValue = 6;</code>
		''' </summary>
		ReadOnly Property BoolValue As Boolean

		''' <summary>
		''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		''' </summary>
		ReadOnly Property DataTypeValueValue As Integer
		''' <summary>
		''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		''' </summary>
		ReadOnly Property DataTypeValue As org.nd4j.ir.TensorNamespace.DataType

		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		''' </summary>
		Function hasInputValue() As Boolean
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		''' </summary>
		ReadOnly Property InputValue As org.nd4j.ir.TensorNamespace.TensorProto
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		''' </summary>
		ReadOnly Property InputValueOrBuilder As org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder

		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		''' </summary>
		Function hasOutputValue() As Boolean
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		''' </summary>
		ReadOnly Property OutputValue As org.nd4j.ir.TensorNamespace.TensorProto
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		''' </summary>
		ReadOnly Property OutputValueOrBuilder As org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder

		''' <summary>
		''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		''' </summary>
		ReadOnly Property ArgTypeValue As Integer
		''' <summary>
		''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		''' </summary>
		ReadOnly Property ArgType As org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType

		''' <summary>
		''' <code>int32 argIndex = 11;</code>
		''' </summary>
		ReadOnly Property ArgIndex As Integer

		''' <summary>
		''' <code>string stringValue = 12;</code>
		''' </summary>
		ReadOnly Property StringValue As String
		''' <summary>
		''' <code>string stringValue = 12;</code>
		''' </summary>
		ReadOnly Property StringValueBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>bool argOptional = 13;</code>
		''' </summary>
		ReadOnly Property ArgOptional As Boolean

		''' <summary>
		''' <code>bool convertBoolToInt = 14;</code>
		''' </summary>
		ReadOnly Property ConvertBoolToInt As Boolean

		''' <summary>
		''' <code>bool isArray = 15;</code>
		''' </summary>
		ReadOnly Property IsArray As Boolean
	  End Interface
	  ''' <summary>
	  ''' Protobuf type {@code org.nd4j.ir.ArgDescriptor}
	  ''' </summary>
	  Public NotInheritable Class ArgDescriptor
		  Inherits org.nd4j.shade.protobuf.GeneratedMessageV3
		  Implements ArgDescriptorOrBuilder

	  Friend Const serialVersionUID As Long = 0L
		' Use ArgDescriptor.newBuilder() to construct.
'JAVA TO VB CONVERTER TODO TASK: Wildcard generics in constructor parameters are not converted. Move the generic type parameter and constraint to the class header:
'ORIGINAL LINE: private ArgDescriptor(org.nd4j.shade.protobuf.GeneratedMessageV3.Builder<?> builder)
'JAVA TO VB CONVERTER NOTE: The parameter builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		Friend Sub New(ByVal builder_Conflict As org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of T1))
		  MyBase.New(builder_Conflict)
		End Sub
		Friend Sub New()
		  name_ = ""
		  dataTypeValue_ = 0
		  argType_ = 0
		  stringValue_ = ""
		End Sub

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @java.lang.Override @SuppressWarnings({"unused"}) protected java.lang.Object newInstance(UnusedPrivateParameter unused)
		Protected Friend Overrides Function newInstance(ByVal unused As UnusedPrivateParameter) As Object
		  Return New ArgDescriptor()
		End Function

		Public Overrides ReadOnly Property UnknownFields As org.nd4j.shade.protobuf.UnknownFieldSet
			Get
			  Return Me.unknownFields
			End Get
		End Property
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: private ArgDescriptor(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Friend Sub New(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
		  Me.New()
		  If extensionRegistry Is Nothing Then
			Throw New System.NullReferenceException()
		  End If
		  Dim unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet.Builder = org.nd4j.shade.protobuf.UnknownFieldSet.newBuilder()
		  Try
			Dim done As Boolean = False
			Do While Not done
			  Dim tag As Integer = input.readTag()
			  Select Case tag
				Case 0
				  done = True
				Case 10
				  Dim s As String = input.readStringRequireUtf8()

				  name_ = s
				Case 21

				  floatValue_ = input.readFloat()
				Case 25

				  doubleValue_ = input.readDouble()
				Case 32

				  int32Value_ = input.readInt32()
				Case 40

				  int64Value_ = input.readInt64()
				Case 48

				  boolValue_ = input.readBool()
				Case 56
				  Dim rawValue As Integer = input.readEnum()

				  dataTypeValue_ = rawValue
				Case 66
				  Dim subBuilder As org.nd4j.ir.TensorNamespace.TensorProto.Builder = Nothing
				  If inputValue_ IsNot Nothing Then
					subBuilder = inputValue_.toBuilder()
				  End If
				  inputValue_ = input.readMessage(org.nd4j.ir.TensorNamespace.TensorProto.parser(), extensionRegistry)
				  If subBuilder IsNot Nothing Then
					subBuilder.mergeFrom(inputValue_)
					inputValue_ = subBuilder.buildPartial()
				  End If

				Case 74
				  Dim subBuilder As org.nd4j.ir.TensorNamespace.TensorProto.Builder = Nothing
				  If outputValue_ IsNot Nothing Then
					subBuilder = outputValue_.toBuilder()
				  End If
				  outputValue_ = input.readMessage(org.nd4j.ir.TensorNamespace.TensorProto.parser(), extensionRegistry)
				  If subBuilder IsNot Nothing Then
					subBuilder.mergeFrom(outputValue_)
					outputValue_ = subBuilder.buildPartial()
				  End If

				Case 80
				  Dim rawValue As Integer = input.readEnum()

				  argType_ = rawValue
				Case 88

				  argIndex_ = input.readInt32()
				Case 98
				  Dim s As String = input.readStringRequireUtf8()

				  stringValue_ = s
				Case 104

				  argOptional_ = input.readBool()
				Case 112

				  convertBoolToInt_ = input.readBool()
				Case 120

				  isArray_ = input.readBool()
				Case Else
				  If Not parseUnknownField(input, unknownFields, extensionRegistry, tag) Then
					done = True
				  End If
			  End Select
			Loop
		  Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Throw e.setUnfinishedMessage(Me)
		  Catch e As java.io.IOException
			Throw (New org.nd4j.shade.protobuf.InvalidProtocolBufferException(e)).setUnfinishedMessage(Me)
		  Finally
			Me.unknownFields = unknownFields.build()
			makeExtensionsImmutable()
		  End Try
		End Sub
		Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			Get
			  Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_ArgDescriptor_descriptor
			End Get
		End Property

		Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
		  Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_ArgDescriptor_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.OpNamespace.ArgDescriptor), GetType(org.nd4j.ir.OpNamespace.ArgDescriptor.Builder))
		End Function

		''' <summary>
		''' Protobuf enum {@code org.nd4j.ir.ArgDescriptor.ArgType}
		''' </summary>
		Public NotInheritable Class ArgType Implements org.nd4j.shade.protobuf.ProtocolMessageEnum
		  ''' <summary>
		  ''' <code>FLOAT = 0;</code>
		  ''' </summary>
		  Public Shared ReadOnly FLOAT As New ArgType("FLOAT", InnerEnum.FLOAT, 0)
		  ''' <summary>
		  ''' <code>DOUBLE = 1;</code>
		  ''' </summary>
		  Public Shared ReadOnly [DOUBLE] As New ArgType("@DOUBLE", InnerEnum.DOUBLE, 1)
		  ''' <summary>
		  ''' <code>INT32 = 2;</code>
		  ''' </summary>
		  Public Shared ReadOnly INT32 As New ArgType("INT32", InnerEnum.INT32, 2)
		  ''' <summary>
		  ''' <code>INT64 = 3;</code>
		  ''' </summary>
		  Public Shared ReadOnly INT64 As New ArgType("INT64", InnerEnum.INT64, 3)
		  ''' <summary>
		  ''' <code>BOOL = 4;</code>
		  ''' </summary>
		  Public Shared ReadOnly BOOL As New ArgType("BOOL", InnerEnum.BOOL, 4)
		  ''' <summary>
		  ''' <code>DATA_TYPE = 5;</code>
		  ''' </summary>
		  Public Shared ReadOnly DATA_TYPE As New ArgType("DATA_TYPE", InnerEnum.DATA_TYPE, 5)
		  ''' <summary>
		  ''' <code>INPUT_TENSOR = 6;</code>
		  ''' </summary>
		  Public Shared ReadOnly INPUT_TENSOR As New ArgType("INPUT_TENSOR", InnerEnum.INPUT_TENSOR, 6)
		  ''' <summary>
		  ''' <code>OUTPUT_TENSOR = 7;</code>
		  ''' </summary>
		  Public Shared ReadOnly OUTPUT_TENSOR As New ArgType("OUTPUT_TENSOR", InnerEnum.OUTPUT_TENSOR, 7)
		  ''' <summary>
		  ''' <code>STRING = 8;</code>
		  ''' </summary>
		  Public Shared ReadOnly [STRING] As New ArgType("@STRING", InnerEnum.STRING, 8)
		  Public Shared ReadOnly UNRECOGNIZED As New ArgType("UNRECOGNIZED", InnerEnum.UNRECOGNIZED, -1)

		  Private Shared ReadOnly valueList As New List(Of ArgType)()

		  Shared Sub New()
			  valueList.Add(FLOAT)
			  valueList.Add([DOUBLE])
			  valueList.Add(INT32)
			  valueList.Add(INT64)
			  valueList.Add(BOOL)
			  valueList.Add(DATA_TYPE)
			  valueList.Add(INPUT_TENSOR)
			  valueList.Add(OUTPUT_TENSOR)
			  valueList.Add([STRING])
			  valueList.Add(UNRECOGNIZED)
		  End Sub

		  Public Enum InnerEnum
			  FLOAT
			  [DOUBLE]
			  INT32
			  INT64
			  BOOL
			  DATA_TYPE
			  INPUT_TENSOR
			  OUTPUT_TENSOR
			  [STRING]
			  UNRECOGNIZED
		  End Enum

		  Public ReadOnly innerEnumValue As InnerEnum
		  Private ReadOnly nameValue As String
		  Private ReadOnly ordinalValue As Integer
		  Private Shared nextOrdinal As Integer = 0

		  ''' <summary>
		  ''' <code>FLOAT = 0;</code>
		  ''' </summary>
		  Public Const FLOAT_VALUE As Integer = 0
		  ''' <summary>
		  ''' <code>DOUBLE = 1;</code>
		  ''' </summary>
		  Public Const DOUBLE_VALUE As Integer = 1
		  ''' <summary>
		  ''' <code>INT32 = 2;</code>
		  ''' </summary>
		  Public Const INT32_VALUE As Integer = 2
		  ''' <summary>
		  ''' <code>INT64 = 3;</code>
		  ''' </summary>
		  Public Const INT64_VALUE As Integer = 3
		  ''' <summary>
		  ''' <code>BOOL = 4;</code>
		  ''' </summary>
		  Public Const BOOL_VALUE As Integer = 4
		  ''' <summary>
		  ''' <code>DATA_TYPE = 5;</code>
		  ''' </summary>
		  Public Const DATA_TYPE_VALUE As Integer = 5
		  ''' <summary>
		  ''' <code>INPUT_TENSOR = 6;</code>
		  ''' </summary>
		  Public Const INPUT_TENSOR_VALUE As Integer = 6
		  ''' <summary>
		  ''' <code>OUTPUT_TENSOR = 7;</code>
		  ''' </summary>
		  Public Const OUTPUT_TENSOR_VALUE As Integer = 7
		  ''' <summary>
		  ''' <code>STRING = 8;</code>
		  ''' </summary>
		  Public Const STRING_VALUE As Integer = 8


		  Public ReadOnly Property Number As Integer
			  Get
				If Me = UNRECOGNIZED Then
				  Throw New System.ArgumentException("Can't get the number of an unknown enum value.")
				End If
				Return outerInstance.value
			  End Get
		  End Property

		  ''' @deprecated Use <seealso cref="forNumber(Integer)"/> instead. 
		  <Obsolete("Use <seealso cref=""forNumber(Integer)""/> instead.")>
		  Public Shared Function valueOf(ByVal value As Integer) As ArgType
			Return forNumber(value)
		  End Function

		  Public Shared Function forNumber(ByVal value As Integer) As ArgType
			Select Case value
			  Case 0
				  Return FLOAT
			  Case 1
				  Return [DOUBLE]
			  Case 2
				  Return INT32
			  Case 3
				  Return INT64
			  Case 4
				  Return BOOL
			  Case 5
				  Return DATA_TYPE
			  Case 6
				  Return INPUT_TENSOR
			  Case 7
				  Return OUTPUT_TENSOR
			  Case 8
				  Return [STRING]
			  Case Else
				  Return Nothing
			End Select
		  End Function

		  Public Shared Function internalGetValueMap() As org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of ArgType)
			Return internalValueMap
		  End Function
		  Friend Shared ReadOnly internalValueMap As org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of ArgType) = New EnumLiteMapAnonymousInnerClass()

		  Public ReadOnly Property ValueDescriptor As org.nd4j.shade.protobuf.Descriptors.EnumValueDescriptor
			  Get
				Return getDescriptor().getValues().get(ordinal())
			  End Get
		  End Property

'JAVA TO VB CONVERTER TODO TASK: Java to VB Converter does not convert types within enums:
'		  private static class EnumLiteMapAnonymousInnerClass extends org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of ArgType)
	'	  {
	'		  public ArgType findValueByNumber(int number)
	'		  {
	'			Return ArgType.forNumber(number);
	'		  }
	'	  }
		  Public ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.EnumDescriptor
			  Get
				Return getDescriptor()
			  End Get
		  End Property
		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.EnumDescriptor
			  Get
				Return org.nd4j.ir.OpNamespace.ArgDescriptor.Descriptor.getEnumTypes().get(0)
			  End Get
		  End Property

		  Friend Shared ReadOnly VALUES() As ArgType = values()

		  Public Shared Function valueOf(ByVal desc As org.nd4j.shade.protobuf.Descriptors.EnumValueDescriptor) As ArgType
			If desc.getType() <> getDescriptor() Then
			  Throw New System.ArgumentException("EnumValueDescriptor is not for this type.")
			End If
			If desc.getIndex() = -1 Then
			  Return UNRECOGNIZED
			End If
			Return VALUES(desc.getIndex())
		  End Function

		  Friend ReadOnly value As Integer

		  Friend Sub New(ByVal name As String, ByVal thisInnerEnumValue As InnerEnum, ByVal outerInstance As OpNamespace.ArgDescriptor, ByVal value As Integer)
			  Me.outerInstance = outerInstance
			Me.value = value

			  nameValue = name
			  ordinalValue = nextOrdinal
			  nextOrdinal += 1
			  innerEnumValue = thisInnerEnumValue
		  End Sub

		  ' @@protoc_insertion_point(enum_scope:org.nd4j.ir.ArgDescriptor.ArgType)

			Public Shared Function values() As ArgType()
				Return valueList.ToArray()
			End Function

			Public Function ordinal() As Integer
				Return ordinalValue
			End Function

			Public Overrides Function ToString() As String
				Return nameValue
			End Function

			Public Shared Operator =(ByVal one As ArgType, ByVal two As ArgType) As Boolean
				Return one.innerEnumValue = two.innerEnumValue
			End Operator

			Public Shared Operator <>(ByVal one As ArgType, ByVal two As ArgType) As Boolean
				Return one.innerEnumValue <> two.innerEnumValue
			End Operator

			Public Shared Function valueOf(ByVal name As String) As ArgType
				For Each enumInstance As ArgType In ArgType.valueList
					If enumInstance.nameValue = name Then
						Return enumInstance
					End If
				Next
				Throw New System.ArgumentException(name)
			End Function
		End Class

		Public Const NAME_FIELD_NUMBER As Integer = 1
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object name_;
		Friend name_ As Object
		''' <summary>
		''' <code>string name = 1;</code>
		''' </summary>
		Public ReadOnly Property Name As String Implements ArgDescriptorOrBuilder.getName
			Get
			  Dim ref As Object = name_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				name_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string name = 1;</code>
		''' </summary>
		Public ReadOnly Property NameBytes As org.nd4j.shade.protobuf.ByteString Implements ArgDescriptorOrBuilder.getNameBytes
			Get
			  Dim ref As Object = name_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				name_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const FLOATVALUE_FIELD_NUMBER As Integer = 2
		Friend floatValue_ As Single
		''' <summary>
		''' <code>float floatValue = 2;</code>
		''' </summary>
		Public ReadOnly Property FloatValue As Single Implements ArgDescriptorOrBuilder.getFloatValue
			Get
			  Return floatValue_
			End Get
		End Property

		Public Const DOUBLEVALUE_FIELD_NUMBER As Integer = 3
		Friend doubleValue_ As Double
		''' <summary>
		''' <code>double doubleValue = 3;</code>
		''' </summary>
		Public ReadOnly Property DoubleValue As Double Implements ArgDescriptorOrBuilder.getDoubleValue
			Get
			  Return doubleValue_
			End Get
		End Property

		Public Const INT32VALUE_FIELD_NUMBER As Integer = 4
		Friend int32Value_ As Integer
		''' <summary>
		''' <code>int32 int32Value = 4;</code>
		''' </summary>
		Public ReadOnly Property Int32Value As Integer Implements ArgDescriptorOrBuilder.getInt32Value
			Get
			  Return int32Value_
			End Get
		End Property

		Public Const INT64VALUE_FIELD_NUMBER As Integer = 5
		Friend int64Value_ As Long
		''' <summary>
		''' <code>int64 int64Value = 5;</code>
		''' </summary>
		Public ReadOnly Property Int64Value As Long Implements ArgDescriptorOrBuilder.getInt64Value
			Get
			  Return int64Value_
			End Get
		End Property

		Public Const BOOLVALUE_FIELD_NUMBER As Integer = 6
		Friend boolValue_ As Boolean
		''' <summary>
		''' <code>bool boolValue = 6;</code>
		''' </summary>
		Public ReadOnly Property BoolValue As Boolean Implements ArgDescriptorOrBuilder.getBoolValue
			Get
			  Return boolValue_
			End Get
		End Property

		Public Const DATATYPEVALUE_FIELD_NUMBER As Integer = 7
		Friend dataTypeValue_ As Integer
		''' <summary>
		''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		''' </summary>
		Public ReadOnly Property DataTypeValueValue As Integer Implements ArgDescriptorOrBuilder.getDataTypeValueValue
			Get
			  Return dataTypeValue_
			End Get
		End Property
		''' <summary>
		''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		''' </summary>
		Public ReadOnly Property DataTypeValue As org.nd4j.ir.TensorNamespace.DataType Implements ArgDescriptorOrBuilder.getDataTypeValue
			Get
	'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
	'ORIGINAL LINE: @SuppressWarnings("deprecation") org.nd4j.ir.TensorNamespace.DataType result = org.nd4j.ir.TensorNamespace.DataType.valueOf(dataTypeValue_);
			  Dim result As org.nd4j.ir.TensorNamespace.DataType = org.nd4j.ir.TensorNamespace.DataType.valueOf(dataTypeValue_)
			  Return If(result = Nothing, org.nd4j.ir.TensorNamespace.DataType.UNRECOGNIZED, result)
			End Get
		End Property

		Public Const INPUTVALUE_FIELD_NUMBER As Integer = 8
		Friend inputValue_ As org.nd4j.ir.TensorNamespace.TensorProto
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		''' </summary>
		Public Function hasInputValue() As Boolean Implements ArgDescriptorOrBuilder.hasInputValue
		  Return inputValue_ IsNot Nothing
		End Function
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		''' </summary>
		Public ReadOnly Property InputValue As org.nd4j.ir.TensorNamespace.TensorProto Implements ArgDescriptorOrBuilder.getInputValue
			Get
			  Return If(inputValue_ Is Nothing, org.nd4j.ir.TensorNamespace.TensorProto.DefaultInstance, inputValue_)
			End Get
		End Property
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		''' </summary>
		Public ReadOnly Property InputValueOrBuilder As org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder Implements ArgDescriptorOrBuilder.getInputValueOrBuilder
			Get
			  Return InputValue
			End Get
		End Property

		Public Const OUTPUTVALUE_FIELD_NUMBER As Integer = 9
		Friend outputValue_ As org.nd4j.ir.TensorNamespace.TensorProto
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		''' </summary>
		Public Function hasOutputValue() As Boolean Implements ArgDescriptorOrBuilder.hasOutputValue
		  Return outputValue_ IsNot Nothing
		End Function
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		''' </summary>
		Public ReadOnly Property OutputValue As org.nd4j.ir.TensorNamespace.TensorProto Implements ArgDescriptorOrBuilder.getOutputValue
			Get
			  Return If(outputValue_ Is Nothing, org.nd4j.ir.TensorNamespace.TensorProto.DefaultInstance, outputValue_)
			End Get
		End Property
		''' <summary>
		''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		''' </summary>
		Public ReadOnly Property OutputValueOrBuilder As org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder Implements ArgDescriptorOrBuilder.getOutputValueOrBuilder
			Get
			  Return OutputValue
			End Get
		End Property

		Public Const ARGTYPE_FIELD_NUMBER As Integer = 10
		Friend argType_ As Integer
		''' <summary>
		''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		''' </summary>
		Public ReadOnly Property ArgTypeValue As Integer Implements ArgDescriptorOrBuilder.getArgTypeValue
			Get
			  Return argType_
			End Get
		End Property
		''' <summary>
		''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		''' </summary>
		Public ReadOnly Property ArgType As org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType Implements ArgDescriptorOrBuilder.getArgType
			Get
	'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
	'ORIGINAL LINE: @SuppressWarnings("deprecation") org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType result = org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType.valueOf(argType_);
			  Dim result As org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType = org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType.valueOf(argType_)
			  Return If(result = Nothing, org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType.UNRECOGNIZED, result)
			End Get
		End Property

		Public Const ARGINDEX_FIELD_NUMBER As Integer = 11
		Friend argIndex_ As Integer
		''' <summary>
		''' <code>int32 argIndex = 11;</code>
		''' </summary>
		Public ReadOnly Property ArgIndex As Integer Implements ArgDescriptorOrBuilder.getArgIndex
			Get
			  Return argIndex_
			End Get
		End Property

		Public Const STRINGVALUE_FIELD_NUMBER As Integer = 12
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object stringValue_;
		Friend stringValue_ As Object
		''' <summary>
		''' <code>string stringValue = 12;</code>
		''' </summary>
		Public ReadOnly Property StringValue As String Implements ArgDescriptorOrBuilder.getStringValue
			Get
			  Dim ref As Object = stringValue_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				stringValue_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string stringValue = 12;</code>
		''' </summary>
		Public ReadOnly Property StringValueBytes As org.nd4j.shade.protobuf.ByteString Implements ArgDescriptorOrBuilder.getStringValueBytes
			Get
			  Dim ref As Object = stringValue_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				stringValue_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const ARGOPTIONAL_FIELD_NUMBER As Integer = 13
		Friend argOptional_ As Boolean
		''' <summary>
		''' <code>bool argOptional = 13;</code>
		''' </summary>
		Public ReadOnly Property ArgOptional As Boolean Implements ArgDescriptorOrBuilder.getArgOptional
			Get
			  Return argOptional_
			End Get
		End Property

		Public Const CONVERTBOOLTOINT_FIELD_NUMBER As Integer = 14
		Friend convertBoolToInt_ As Boolean
		''' <summary>
		''' <code>bool convertBoolToInt = 14;</code>
		''' </summary>
		Public ReadOnly Property ConvertBoolToInt As Boolean Implements ArgDescriptorOrBuilder.getConvertBoolToInt
			Get
			  Return convertBoolToInt_
			End Get
		End Property

		Public Const ISARRAY_FIELD_NUMBER As Integer = 15
		Friend isArray_ As Boolean
		''' <summary>
		''' <code>bool isArray = 15;</code>
		''' </summary>
		Public ReadOnly Property IsArray As Boolean Implements ArgDescriptorOrBuilder.getIsArray
			Get
			  Return isArray_
			End Get
		End Property

		Friend memoizedIsInitialized As SByte = -1
		Public Overrides ReadOnly Property Initialized As Boolean
			Get
	'JAVA TO VB CONVERTER NOTE: The local variable isInitialized was renamed since Visual Basic will not allow local variables with the same name as their enclosing function or property:
			  Dim isInitialized_Conflict As SByte = memoizedIsInitialized
			  If isInitialized_Conflict = 1 Then
				  Return True
			  End If
			  If isInitialized_Conflict = 0 Then
				  Return False
			  End If
    
			  memoizedIsInitialized = 1
			  Return True
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public void writeTo(org.nd4j.shade.protobuf.CodedOutputStream output) throws java.io.IOException
		Public Overrides Sub writeTo(ByVal output As org.nd4j.shade.protobuf.CodedOutputStream)
		  If Not NameBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 1, name_)
		  End If
		  If floatValue_ <> 0F Then
			output.writeFloat(2, floatValue_)
		  End If
		  If doubleValue_ <> 0R Then
			output.writeDouble(3, doubleValue_)
		  End If
		  If int32Value_ <> 0 Then
			output.writeInt32(4, int32Value_)
		  End If
		  If int64Value_ <> 0L Then
			output.writeInt64(5, int64Value_)
		  End If
		  If boolValue_ <> False Then
			output.writeBool(6, boolValue_)
		  End If
		  If dataTypeValue_ <> org.nd4j.ir.TensorNamespace.DataType.UNDEFINED.getNumber() Then
			output.writeEnum(7, dataTypeValue_)
		  End If
		  If inputValue_ IsNot Nothing Then
			output.writeMessage(8, InputValue)
		  End If
		  If outputValue_ IsNot Nothing Then
			output.writeMessage(9, OutputValue)
		  End If
		  If argType_ <> org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType.FLOAT.getNumber() Then
			output.writeEnum(10, argType_)
		  End If
		  If argIndex_ <> 0 Then
			output.writeInt32(11, argIndex_)
		  End If
		  If Not StringValueBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 12, stringValue_)
		  End If
		  If argOptional_ <> False Then
			output.writeBool(13, argOptional_)
		  End If
		  If convertBoolToInt_ <> False Then
			output.writeBool(14, convertBoolToInt_)
		  End If
		  If isArray_ <> False Then
			output.writeBool(15, isArray_)
		  End If
		  unknownFields.writeTo(output)
		End Sub

		Public Overrides ReadOnly Property SerializedSize As Integer
			Get
			  Dim size As Integer = memoizedSize
			  If size <> -1 Then
				  Return size
			  End If
    
			  size = 0
			  If Not NameBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(1, name_)
			  End If
			  If floatValue_ <> 0F Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeFloatSize(2, floatValue_)
			  End If
			  If doubleValue_ <> 0R Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeDoubleSize(3, doubleValue_)
			  End If
			  If int32Value_ <> 0 Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeInt32Size(4, int32Value_)
			  End If
			  If int64Value_ <> 0L Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeInt64Size(5, int64Value_)
			  End If
			  If boolValue_ <> False Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeBoolSize(6, boolValue_)
			  End If
			  If dataTypeValue_ <> org.nd4j.ir.TensorNamespace.DataType.UNDEFINED.getNumber() Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeEnumSize(7, dataTypeValue_)
			  End If
			  If inputValue_ IsNot Nothing Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(8, InputValue)
			  End If
			  If outputValue_ IsNot Nothing Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(9, OutputValue)
			  End If
			  If argType_ <> org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType.FLOAT.getNumber() Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeEnumSize(10, argType_)
			  End If
			  If argIndex_ <> 0 Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeInt32Size(11, argIndex_)
			  End If
			  If Not StringValueBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(12, stringValue_)
			  End If
			  If argOptional_ <> False Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeBoolSize(13, argOptional_)
			  End If
			  If convertBoolToInt_ <> False Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeBoolSize(14, convertBoolToInt_)
			  End If
			  If isArray_ <> False Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeBoolSize(15, isArray_)
			  End If
			  size += unknownFields.getSerializedSize()
			  memoizedSize = size
			  Return size
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public boolean equals(final java.lang.Object obj)
		Public Overrides Function Equals(ByVal obj As Object) As Boolean
		  If obj Is Me Then
		   Return True
		  End If
		  If Not (TypeOf obj Is org.nd4j.ir.OpNamespace.ArgDescriptor) Then
			Return MyBase.Equals(obj)
		  End If
		  Dim other As org.nd4j.ir.OpNamespace.ArgDescriptor = DirectCast(obj, org.nd4j.ir.OpNamespace.ArgDescriptor)

		  If Not Name.Equals(other.Name) Then
			  Return False
		  End If
		  If Float.floatToIntBits(FloatValue) <> Float.floatToIntBits(other.FloatValue) Then
			  Return False
		  End If
		  If System.BitConverter.DoubleToInt64Bits(DoubleValue) <> System.BitConverter.DoubleToInt64Bits(other.DoubleValue) Then
			  Return False
		  End If
		  If Int32Value <> other.Int32Value Then
			  Return False
		  End If
		  If Int64Value <> other.Int64Value Then
			  Return False
		  End If
		  If BoolValue <> other.BoolValue Then
			  Return False
		  End If
		  If dataTypeValue_ <> other.dataTypeValue_ Then
			  Return False
		  End If
		  If hasInputValue() <> other.hasInputValue() Then
			  Return False
		  End If
		  If hasInputValue() Then
			If Not InputValue.Equals(other.InputValue) Then
				Return False
			End If
		  End If
		  If hasOutputValue() <> other.hasOutputValue() Then
			  Return False
		  End If
		  If hasOutputValue() Then
			If Not OutputValue.Equals(other.OutputValue) Then
				Return False
			End If
		  End If
		  If argType_ <> other.argType_ Then
			  Return False
		  End If
		  If ArgIndex <> other.ArgIndex Then
			  Return False
		  End If
		  If Not StringValue.Equals(other.StringValue) Then
			  Return False
		  End If
		  If ArgOptional <> other.ArgOptional Then
			  Return False
		  End If
		  If ConvertBoolToInt <> other.ConvertBoolToInt Then
			  Return False
		  End If
		  If IsArray <> other.IsArray Then
			  Return False
		  End If
		  If Not unknownFields.Equals(other.unknownFields) Then
			  Return False
		  End If
		  Return True
		End Function

		Public Overrides Function GetHashCode() As Integer
		  If memoizedHashCode <> 0 Then
			Return memoizedHashCode
		  End If
		  Dim hash As Integer = 41
		  hash = (19 * hash) + Descriptor.GetHashCode()
		  hash = (37 * hash) + NAME_FIELD_NUMBER
		  hash = (53 * hash) + Name.GetHashCode()
		  hash = (37 * hash) + FLOATVALUE_FIELD_NUMBER
		  hash = (53 * hash) + Float.floatToIntBits(FloatValue)
		  hash = (37 * hash) + DOUBLEVALUE_FIELD_NUMBER
		  hash = (53 * hash) + org.nd4j.shade.protobuf.Internal.hashLong(System.BitConverter.DoubleToInt64Bits(DoubleValue))
		  hash = (37 * hash) + INT32VALUE_FIELD_NUMBER
		  hash = (53 * hash) + Int32Value
		  hash = (37 * hash) + INT64VALUE_FIELD_NUMBER
		  hash = (53 * hash) + org.nd4j.shade.protobuf.Internal.hashLong(Int64Value)
		  hash = (37 * hash) + BOOLVALUE_FIELD_NUMBER
		  hash = (53 * hash) + org.nd4j.shade.protobuf.Internal.hashBoolean(BoolValue)
		  hash = (37 * hash) + DATATYPEVALUE_FIELD_NUMBER
		  hash = (53 * hash) + dataTypeValue_
		  If hasInputValue() Then
			hash = (37 * hash) + INPUTVALUE_FIELD_NUMBER
			hash = (53 * hash) + InputValue.GetHashCode()
		  End If
		  If hasOutputValue() Then
			hash = (37 * hash) + OUTPUTVALUE_FIELD_NUMBER
			hash = (53 * hash) + OutputValue.GetHashCode()
		  End If
		  hash = (37 * hash) + ARGTYPE_FIELD_NUMBER
		  hash = (53 * hash) + argType_
		  hash = (37 * hash) + ARGINDEX_FIELD_NUMBER
		  hash = (53 * hash) + ArgIndex
		  hash = (37 * hash) + STRINGVALUE_FIELD_NUMBER
		  hash = (53 * hash) + StringValue.GetHashCode()
		  hash = (37 * hash) + ARGOPTIONAL_FIELD_NUMBER
		  hash = (53 * hash) + org.nd4j.shade.protobuf.Internal.hashBoolean(ArgOptional)
		  hash = (37 * hash) + CONVERTBOOLTOINT_FIELD_NUMBER
		  hash = (53 * hash) + org.nd4j.shade.protobuf.Internal.hashBoolean(ConvertBoolToInt)
		  hash = (37 * hash) + ISARRAY_FIELD_NUMBER
		  hash = (53 * hash) + org.nd4j.shade.protobuf.Internal.hashBoolean(IsArray)
		  hash = (29 * hash) + unknownFields.GetHashCode()
		  memoizedHashCode = hash
		  Return hash
		End Function

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(java.nio.ByteBuffer data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(java.nio.ByteBuffer data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(org.nd4j.shade.protobuf.ByteString data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(org.nd4j.shade.protobuf.ByteString data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(byte[] data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(byte[] data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseDelimitedFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(org.nd4j.shade.protobuf.CodedInputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.ArgDescriptor parseFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.ArgDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function

		Public Overrides Function newBuilderForType() As Builder
			Return newBuilder()
		End Function
		Public Shared Function newBuilder() As Builder
		  Return DEFAULT_INSTANCE.toBuilder()
		End Function
		Public Shared Function newBuilder(ByVal prototype As org.nd4j.ir.OpNamespace.ArgDescriptor) As Builder
		  Return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype)
		End Function
		Public Overrides Function toBuilder() As Builder
		  Return If(Me Is DEFAULT_INSTANCE, New Builder(), (New Builder()).mergeFrom(Me))
		End Function

		Protected Friend Overrides Function newBuilderForType(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent) As Builder
'JAVA TO VB CONVERTER NOTE: The variable builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		  Dim builder_Conflict As New Builder(parent)
		  Return builder_Conflict
		End Function
		''' <summary>
		''' Protobuf type {@code org.nd4j.ir.ArgDescriptor}
		''' </summary>
		Public NotInheritable Class Builder
			Inherits org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of Builder)
			Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder

		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_ArgDescriptor_descriptor
			  End Get
		  End Property

		  Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
			Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_ArgDescriptor_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.OpNamespace.ArgDescriptor), GetType(org.nd4j.ir.OpNamespace.ArgDescriptor.Builder))
		  End Function

		  ' Construct using org.nd4j.ir.OpNamespace.ArgDescriptor.newBuilder()
		  Friend Sub New()
			maybeForceBuilderInitialization()
		  End Sub

		  Friend Sub New(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent)
			MyBase.New(parent)
			maybeForceBuilderInitialization()
		  End Sub
		  Friend Sub maybeForceBuilderInitialization()
			If org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders Then
			End If
		  End Sub
		  Public Overrides Function clear() As Builder
			MyBase.clear()
			name_ = ""

			floatValue_ = 0F

			doubleValue_ = 0R

			int32Value_ = 0

			int64Value_ = 0L

			boolValue_ = False

			dataTypeValue_ = 0

			If inputValueBuilder_ Is Nothing Then
			  inputValue_ = Nothing
			Else
			  inputValue_ = Nothing
			  inputValueBuilder_ = Nothing
			End If
			If outputValueBuilder_ Is Nothing Then
			  outputValue_ = Nothing
			Else
			  outputValue_ = Nothing
			  outputValueBuilder_ = Nothing
			End If
			argType_ = 0

			argIndex_ = 0

			stringValue_ = ""

			argOptional_ = False

			convertBoolToInt_ = False

			isArray_ = False

			Return Me
		  End Function

		  Public Overrides ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_ArgDescriptor_descriptor
			  End Get
		  End Property

		  Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.OpNamespace.ArgDescriptor
			  Get
				Return org.nd4j.ir.OpNamespace.ArgDescriptor.DefaultInstance
			  End Get
		  End Property

		  Public Overrides Function build() As org.nd4j.ir.OpNamespace.ArgDescriptor
			Dim result As org.nd4j.ir.OpNamespace.ArgDescriptor = buildPartial()
			If Not result.Initialized Then
			  Throw newUninitializedMessageException(result)
			End If
			Return result
		  End Function

		  Public Overrides Function buildPartial() As org.nd4j.ir.OpNamespace.ArgDescriptor
			Dim result As New org.nd4j.ir.OpNamespace.ArgDescriptor(Me)
			result.name_ = name_
			result.floatValue_ = floatValue_
			result.doubleValue_ = doubleValue_
			result.int32Value_ = int32Value_
			result.int64Value_ = int64Value_
			result.boolValue_ = boolValue_
			result.dataTypeValue_ = dataTypeValue_
			If inputValueBuilder_ Is Nothing Then
			  result.inputValue_ = inputValue_
			Else
			  result.inputValue_ = inputValueBuilder_.build()
			End If
			If outputValueBuilder_ Is Nothing Then
			  result.outputValue_ = outputValue_
			Else
			  result.outputValue_ = outputValueBuilder_.build()
			End If
			result.argType_ = argType_
			result.argIndex_ = argIndex_
			result.stringValue_ = stringValue_
			result.argOptional_ = argOptional_
			result.convertBoolToInt_ = convertBoolToInt_
			result.isArray_ = isArray_
			onBuilt()
			Return result
		  End Function

		  Public Overrides Function clone() As Builder
			Return MyBase.clone()
		  End Function
		  Public Overrides Function setField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.setField(field, value)
		  End Function
		  Public Overrides Function clearField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor) As Builder
			Return MyBase.clearField(field)
		  End Function
		  Public Overrides Function clearOneof(ByVal oneof As org.nd4j.shade.protobuf.Descriptors.OneofDescriptor) As Builder
			Return MyBase.clearOneof(oneof)
		  End Function
		  Public Overrides Function setRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal index As Integer, ByVal value As Object) As Builder
			Return MyBase.setRepeatedField(field, index, value)
		  End Function
		  Public Overrides Function addRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.addRepeatedField(field, value)
		  End Function
		  Public Overrides Function mergeFrom(ByVal other As org.nd4j.shade.protobuf.Message) As Builder
			If TypeOf other Is org.nd4j.ir.OpNamespace.ArgDescriptor Then
			  Return mergeFrom(CType(other, org.nd4j.ir.OpNamespace.ArgDescriptor))
			Else
			  MyBase.mergeFrom(other)
			  Return Me
			End If
		  End Function

		  Public Function mergeFrom(ByVal other As org.nd4j.ir.OpNamespace.ArgDescriptor) As Builder
			If other Is org.nd4j.ir.OpNamespace.ArgDescriptor.DefaultInstance Then
				Return Me
			End If
			If other.Name.Length > 0 Then
			  name_ = other.name_
			  onChanged()
			End If
			If other.FloatValue <> 0F Then
			  FloatValue = other.FloatValue
			End If
			If other.DoubleValue <> 0R Then
			  DoubleValue = other.DoubleValue
			End If
			If other.Int32Value <> 0 Then
			  Int32Value = other.Int32Value
			End If
			If other.Int64Value <> 0L Then
			  Int64Value = other.Int64Value
			End If
			If other.BoolValue <> False Then
			  BoolValue = other.BoolValue
			End If
			If other.dataTypeValue_ <> 0 Then
			  DataTypeValueValue = other.DataTypeValueValue
			End If
			If other.hasInputValue() Then
			  mergeInputValue(other.InputValue)
			End If
			If other.hasOutputValue() Then
			  mergeOutputValue(other.OutputValue)
			End If
			If other.argType_ <> 0 Then
			  ArgTypeValue = other.ArgTypeValue
			End If
			If other.ArgIndex <> 0 Then
			  ArgIndex = other.ArgIndex
			End If
			If other.StringValue.Length > 0 Then
			  stringValue_ = other.stringValue_
			  onChanged()
			End If
			If other.ArgOptional <> False Then
			  ArgOptional = other.ArgOptional
			End If
			If other.ConvertBoolToInt <> False Then
			  ConvertBoolToInt = other.ConvertBoolToInt
			End If
			If other.IsArray <> False Then
			  IsArray = other.IsArray
			End If
			Me.mergeUnknownFields(other.unknownFields)
			onChanged()
			Return Me
		  End Function

		  Public Overrides ReadOnly Property Initialized As Boolean
			  Get
				Return True
			  End Get
		  End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public Builder mergeFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		  Public Overrides Function mergeFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As Builder
			Dim parsedMessage As org.nd4j.ir.OpNamespace.ArgDescriptor = Nothing
			Try
			  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
			Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			  parsedMessage = CType(e.getUnfinishedMessage(), org.nd4j.ir.OpNamespace.ArgDescriptor)
			  Throw e.unwrapIOException()
			Finally
			  If parsedMessage IsNot Nothing Then
				mergeFrom(parsedMessage)
			  End If
			End Try
			Return Me
		  End Function

		  Friend name_ As Object = ""
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property Name As String Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getName
			  Get
				Dim ref As Object = name_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  name_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property NameBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getNameBytes
			  Get
				Dim ref As Object = name_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  name_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public Function setName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			name_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public Function clearName() As Builder

			name_ = DefaultInstance.Name
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public Function setNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			name_ = value
			onChanged()
			Return Me
		  End Function

		  Friend floatValue_ As Single
		  ''' <summary>
		  ''' <code>float floatValue = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property FloatValue As Single Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getFloatValue
			  Get
				Return floatValue_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>float floatValue = 2;</code>
		  ''' </summary>
		  Public Function setFloatValue(ByVal value As Single) As Builder

			floatValue_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>float floatValue = 2;</code>
		  ''' </summary>
		  Public Function clearFloatValue() As Builder

			floatValue_ = 0F
			onChanged()
			Return Me
		  End Function

		  Friend doubleValue_ As Double
		  ''' <summary>
		  ''' <code>double doubleValue = 3;</code>
		  ''' </summary>
		  Public ReadOnly Property DoubleValue As Double Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getDoubleValue
			  Get
				Return doubleValue_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>double doubleValue = 3;</code>
		  ''' </summary>
		  Public Function setDoubleValue(ByVal value As Double) As Builder

			doubleValue_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>double doubleValue = 3;</code>
		  ''' </summary>
		  Public Function clearDoubleValue() As Builder

			doubleValue_ = 0R
			onChanged()
			Return Me
		  End Function

		  Friend int32Value_ As Integer
		  ''' <summary>
		  ''' <code>int32 int32Value = 4;</code>
		  ''' </summary>
		  Public ReadOnly Property Int32Value As Integer Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getInt32Value
			  Get
				Return int32Value_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>int32 int32Value = 4;</code>
		  ''' </summary>
		  Public Function setInt32Value(ByVal value As Integer) As Builder

			int32Value_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>int32 int32Value = 4;</code>
		  ''' </summary>
		  Public Function clearInt32Value() As Builder

			int32Value_ = 0
			onChanged()
			Return Me
		  End Function

		  Friend int64Value_ As Long
		  ''' <summary>
		  ''' <code>int64 int64Value = 5;</code>
		  ''' </summary>
		  Public ReadOnly Property Int64Value As Long Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getInt64Value
			  Get
				Return int64Value_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>int64 int64Value = 5;</code>
		  ''' </summary>
		  Public Function setInt64Value(ByVal value As Long) As Builder

			int64Value_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>int64 int64Value = 5;</code>
		  ''' </summary>
		  Public Function clearInt64Value() As Builder

			int64Value_ = 0L
			onChanged()
			Return Me
		  End Function

		  Friend boolValue_ As Boolean
		  ''' <summary>
		  ''' <code>bool boolValue = 6;</code>
		  ''' </summary>
		  Public ReadOnly Property BoolValue As Boolean Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getBoolValue
			  Get
				Return boolValue_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>bool boolValue = 6;</code>
		  ''' </summary>
		  Public Function setBoolValue(ByVal value As Boolean) As Builder

			boolValue_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>bool boolValue = 6;</code>
		  ''' </summary>
		  Public Function clearBoolValue() As Builder

			boolValue_ = False
			onChanged()
			Return Me
		  End Function

		  Friend dataTypeValue_ As Integer = 0
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		  ''' </summary>
		  Public ReadOnly Property DataTypeValueValue As Integer Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getDataTypeValueValue
			  Get
				Return dataTypeValue_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		  ''' </summary>
		  Public Function setDataTypeValueValue(ByVal value As Integer) As Builder
			dataTypeValue_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		  ''' </summary>
		  Public ReadOnly Property DataTypeValue As org.nd4j.ir.TensorNamespace.DataType Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getDataTypeValue
			  Get
	'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
	'ORIGINAL LINE: @SuppressWarnings("deprecation") org.nd4j.ir.TensorNamespace.DataType result = org.nd4j.ir.TensorNamespace.DataType.valueOf(dataTypeValue_);
				Dim result As org.nd4j.ir.TensorNamespace.DataType = org.nd4j.ir.TensorNamespace.DataType.valueOf(dataTypeValue_)
				Return If(result = Nothing, org.nd4j.ir.TensorNamespace.DataType.UNRECOGNIZED, result)
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		  ''' </summary>
		  Public Function setDataTypeValue(ByVal value As org.nd4j.ir.TensorNamespace.DataType) As Builder
			If value = Nothing Then
			  Throw New System.NullReferenceException()
			End If

			dataTypeValue_ = value.getNumber()
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.DataType dataTypeValue = 7;</code>
		  ''' </summary>
		  Public Function clearDataTypeValue() As Builder

			dataTypeValue_ = 0
			onChanged()
			Return Me
		  End Function

		  Friend inputValue_ As org.nd4j.ir.TensorNamespace.TensorProto
		  Friend inputValueBuilder_ As org.nd4j.shade.protobuf.SingleFieldBuilderV3(Of org.nd4j.ir.TensorNamespace.TensorProto, org.nd4j.ir.TensorNamespace.TensorProto.Builder, org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder)
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Public Function hasInputValue() As Boolean Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.hasInputValue
			Return inputValueBuilder_ IsNot Nothing OrElse inputValue_ IsNot Nothing
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Public ReadOnly Property InputValue As org.nd4j.ir.TensorNamespace.TensorProto Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getInputValue
			  Get
				If inputValueBuilder_ Is Nothing Then
				  Return If(inputValue_ Is Nothing, org.nd4j.ir.TensorNamespace.TensorProto.DefaultInstance, inputValue_)
				Else
				  Return inputValueBuilder_.getMessage()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Public Function setInputValue(ByVal value As org.nd4j.ir.TensorNamespace.TensorProto) As Builder
			If inputValueBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  inputValue_ = value
			  onChanged()
			Else
			  inputValueBuilder_.setMessage(value)
			End If

			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Public Function setInputValue(ByVal builderForValue As org.nd4j.ir.TensorNamespace.TensorProto.Builder) As Builder
			If inputValueBuilder_ Is Nothing Then
			  inputValue_ = builderForValue.build()
			  onChanged()
			Else
			  inputValueBuilder_.setMessage(builderForValue.build())
			End If

			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Public Function mergeInputValue(ByVal value As org.nd4j.ir.TensorNamespace.TensorProto) As Builder
			If inputValueBuilder_ Is Nothing Then
			  If inputValue_ IsNot Nothing Then
				inputValue_ = org.nd4j.ir.TensorNamespace.TensorProto.newBuilder(inputValue_).mergeFrom(value).buildPartial()
			  Else
				inputValue_ = value
			  End If
			  onChanged()
			Else
			  inputValueBuilder_.mergeFrom(value)
			End If

			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Public Function clearInputValue() As Builder
			If inputValueBuilder_ Is Nothing Then
			  inputValue_ = Nothing
			  onChanged()
			Else
			  inputValue_ = Nothing
			  inputValueBuilder_ = Nothing
			End If

			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Public ReadOnly Property InputValueBuilder As org.nd4j.ir.TensorNamespace.TensorProto.Builder
			  Get
    
				onChanged()
				Return getInputValueFieldBuilder().getBuilder()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Public ReadOnly Property InputValueOrBuilder As org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getInputValueOrBuilder
			  Get
				If inputValueBuilder_ IsNot Nothing Then
				  Return inputValueBuilder_.getMessageOrBuilder()
				Else
				  Return If(inputValue_ Is Nothing, org.nd4j.ir.TensorNamespace.TensorProto.DefaultInstance, inputValue_)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto inputValue = 8;</code>
		  ''' </summary>
		  Friend ReadOnly Property InputValueFieldBuilder As org.nd4j.shade.protobuf.SingleFieldBuilderV3(Of org.nd4j.ir.TensorNamespace.TensorProto, org.nd4j.ir.TensorNamespace.TensorProto.Builder, org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder)
			  Get
				If inputValueBuilder_ Is Nothing Then
				  inputValueBuilder_ = New org.nd4j.shade.protobuf.SingleFieldBuilderV3(Of org.nd4j.ir.TensorNamespace.TensorProto, org.nd4j.ir.TensorNamespace.TensorProto.Builder, org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder)(getInputValue(), getParentForChildren(), isClean())
				  inputValue_ = Nothing
				End If
				Return inputValueBuilder_
			  End Get
		  End Property

		  Friend outputValue_ As org.nd4j.ir.TensorNamespace.TensorProto
		  Friend outputValueBuilder_ As org.nd4j.shade.protobuf.SingleFieldBuilderV3(Of org.nd4j.ir.TensorNamespace.TensorProto, org.nd4j.ir.TensorNamespace.TensorProto.Builder, org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder)
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Public Function hasOutputValue() As Boolean Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.hasOutputValue
			Return outputValueBuilder_ IsNot Nothing OrElse outputValue_ IsNot Nothing
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputValue As org.nd4j.ir.TensorNamespace.TensorProto Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getOutputValue
			  Get
				If outputValueBuilder_ Is Nothing Then
				  Return If(outputValue_ Is Nothing, org.nd4j.ir.TensorNamespace.TensorProto.DefaultInstance, outputValue_)
				Else
				  Return outputValueBuilder_.getMessage()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Public Function setOutputValue(ByVal value As org.nd4j.ir.TensorNamespace.TensorProto) As Builder
			If outputValueBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  outputValue_ = value
			  onChanged()
			Else
			  outputValueBuilder_.setMessage(value)
			End If

			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Public Function setOutputValue(ByVal builderForValue As org.nd4j.ir.TensorNamespace.TensorProto.Builder) As Builder
			If outputValueBuilder_ Is Nothing Then
			  outputValue_ = builderForValue.build()
			  onChanged()
			Else
			  outputValueBuilder_.setMessage(builderForValue.build())
			End If

			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Public Function mergeOutputValue(ByVal value As org.nd4j.ir.TensorNamespace.TensorProto) As Builder
			If outputValueBuilder_ Is Nothing Then
			  If outputValue_ IsNot Nothing Then
				outputValue_ = org.nd4j.ir.TensorNamespace.TensorProto.newBuilder(outputValue_).mergeFrom(value).buildPartial()
			  Else
				outputValue_ = value
			  End If
			  onChanged()
			Else
			  outputValueBuilder_.mergeFrom(value)
			End If

			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Public Function clearOutputValue() As Builder
			If outputValueBuilder_ Is Nothing Then
			  outputValue_ = Nothing
			  onChanged()
			Else
			  outputValue_ = Nothing
			  outputValueBuilder_ = Nothing
			End If

			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputValueBuilder As org.nd4j.ir.TensorNamespace.TensorProto.Builder
			  Get
    
				onChanged()
				Return getOutputValueFieldBuilder().getBuilder()
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Public ReadOnly Property OutputValueOrBuilder As org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getOutputValueOrBuilder
			  Get
				If outputValueBuilder_ IsNot Nothing Then
				  Return outputValueBuilder_.getMessageOrBuilder()
				Else
				  Return If(outputValue_ Is Nothing, org.nd4j.ir.TensorNamespace.TensorProto.DefaultInstance, outputValue_)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.TensorProto outputValue = 9;</code>
		  ''' </summary>
		  Friend ReadOnly Property OutputValueFieldBuilder As org.nd4j.shade.protobuf.SingleFieldBuilderV3(Of org.nd4j.ir.TensorNamespace.TensorProto, org.nd4j.ir.TensorNamespace.TensorProto.Builder, org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder)
			  Get
				If outputValueBuilder_ Is Nothing Then
				  outputValueBuilder_ = New org.nd4j.shade.protobuf.SingleFieldBuilderV3(Of org.nd4j.ir.TensorNamespace.TensorProto, org.nd4j.ir.TensorNamespace.TensorProto.Builder, org.nd4j.ir.TensorNamespace.TensorProtoOrBuilder)(getOutputValue(), getParentForChildren(), isClean())
				  outputValue_ = Nothing
				End If
				Return outputValueBuilder_
			  End Get
		  End Property

		  Friend argType_ As Integer = 0
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		  ''' </summary>
		  Public ReadOnly Property ArgTypeValue As Integer Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getArgTypeValue
			  Get
				Return argType_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		  ''' </summary>
		  Public Function setArgTypeValue(ByVal value As Integer) As Builder
			argType_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		  ''' </summary>
		  Public ReadOnly Property ArgType As org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getArgType
			  Get
	'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
	'ORIGINAL LINE: @SuppressWarnings("deprecation") org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType result = org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType.valueOf(argType_);
				Dim result As org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType = org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType.valueOf(argType_)
				Return If(result = Nothing, org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType.UNRECOGNIZED, result)
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		  ''' </summary>
		  Public Function setArgType(ByVal value As org.nd4j.ir.OpNamespace.ArgDescriptor.ArgType) As Builder
			If value = Nothing Then
			  Throw New System.NullReferenceException()
			End If

			argType_ = value.getNumber()
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.ArgDescriptor.ArgType argType = 10;</code>
		  ''' </summary>
		  Public Function clearArgType() As Builder

			argType_ = 0
			onChanged()
			Return Me
		  End Function

		  Friend argIndex_ As Integer
		  ''' <summary>
		  ''' <code>int32 argIndex = 11;</code>
		  ''' </summary>
		  Public ReadOnly Property ArgIndex As Integer Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getArgIndex
			  Get
				Return argIndex_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>int32 argIndex = 11;</code>
		  ''' </summary>
		  Public Function setArgIndex(ByVal value As Integer) As Builder

			argIndex_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>int32 argIndex = 11;</code>
		  ''' </summary>
		  Public Function clearArgIndex() As Builder

			argIndex_ = 0
			onChanged()
			Return Me
		  End Function

		  Friend stringValue_ As Object = ""
		  ''' <summary>
		  ''' <code>string stringValue = 12;</code>
		  ''' </summary>
		  Public ReadOnly Property StringValue As String Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getStringValue
			  Get
				Dim ref As Object = stringValue_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  stringValue_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string stringValue = 12;</code>
		  ''' </summary>
		  Public ReadOnly Property StringValueBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getStringValueBytes
			  Get
				Dim ref As Object = stringValue_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  stringValue_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string stringValue = 12;</code>
		  ''' </summary>
		  Public Function setStringValue(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			stringValue_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string stringValue = 12;</code>
		  ''' </summary>
		  Public Function clearStringValue() As Builder

			stringValue_ = DefaultInstance.StringValue
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string stringValue = 12;</code>
		  ''' </summary>
		  Public Function setStringValueBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			stringValue_ = value
			onChanged()
			Return Me
		  End Function

		  Friend argOptional_ As Boolean
		  ''' <summary>
		  ''' <code>bool argOptional = 13;</code>
		  ''' </summary>
		  Public ReadOnly Property ArgOptional As Boolean Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getArgOptional
			  Get
				Return argOptional_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>bool argOptional = 13;</code>
		  ''' </summary>
		  Public Function setArgOptional(ByVal value As Boolean) As Builder

			argOptional_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>bool argOptional = 13;</code>
		  ''' </summary>
		  Public Function clearArgOptional() As Builder

			argOptional_ = False
			onChanged()
			Return Me
		  End Function

		  Friend convertBoolToInt_ As Boolean
		  ''' <summary>
		  ''' <code>bool convertBoolToInt = 14;</code>
		  ''' </summary>
		  Public ReadOnly Property ConvertBoolToInt As Boolean Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getConvertBoolToInt
			  Get
				Return convertBoolToInt_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>bool convertBoolToInt = 14;</code>
		  ''' </summary>
		  Public Function setConvertBoolToInt(ByVal value As Boolean) As Builder

			convertBoolToInt_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>bool convertBoolToInt = 14;</code>
		  ''' </summary>
		  Public Function clearConvertBoolToInt() As Builder

			convertBoolToInt_ = False
			onChanged()
			Return Me
		  End Function

		  Friend isArray_ As Boolean
		  ''' <summary>
		  ''' <code>bool isArray = 15;</code>
		  ''' </summary>
		  Public ReadOnly Property IsArray As Boolean Implements org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder.getIsArray
			  Get
				Return isArray_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>bool isArray = 15;</code>
		  ''' </summary>
		  Public Function setIsArray(ByVal value As Boolean) As Builder

			isArray_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>bool isArray = 15;</code>
		  ''' </summary>
		  Public Function clearIsArray() As Builder

			isArray_ = False
			onChanged()
			Return Me
		  End Function
'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder setUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function setUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.setUnknownFields(unknownFields)
		  End Function

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder mergeUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function mergeUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.mergeUnknownFields(unknownFields)
		  End Function


		  ' @@protoc_insertion_point(builder_scope:org.nd4j.ir.ArgDescriptor)
		End Class

		' @@protoc_insertion_point(class_scope:org.nd4j.ir.ArgDescriptor)
		Friend Shared ReadOnly DEFAULT_INSTANCE As org.nd4j.ir.OpNamespace.ArgDescriptor
		Shared Sub New()
		  DEFAULT_INSTANCE = New org.nd4j.ir.OpNamespace.ArgDescriptor()
		End Sub

		Public Shared ReadOnly Property DefaultInstance As org.nd4j.ir.OpNamespace.ArgDescriptor
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

'JAVA TO VB CONVERTER NOTE: The field PARSER was renamed since Visual Basic does not allow fields to have the same name as other class members:
		Friend Shared ReadOnly PARSER_Conflict As org.nd4j.shade.protobuf.Parser(Of ArgDescriptor) = New AbstractParserAnonymousInnerClass()

		Private Class AbstractParserAnonymousInnerClass
			Inherits org.nd4j.shade.protobuf.AbstractParser(Of ArgDescriptor)

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public ArgDescriptor parsePartialFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Public Overrides Function parsePartialFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As ArgDescriptor
			  Return New ArgDescriptor(input, extensionRegistry)
			End Function
		End Class

		Public Shared Function parser() As org.nd4j.shade.protobuf.Parser(Of ArgDescriptor)
		  Return PARSER_Conflict
		End Function

		Public Overrides ReadOnly Property ParserForType As org.nd4j.shade.protobuf.Parser(Of ArgDescriptor)
			Get
			  Return PARSER_Conflict
			End Get
		End Property

		Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.OpNamespace.ArgDescriptor
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

	  End Class

	  Public Interface OpDescriptorOrBuilder
		  Inherits org.nd4j.shade.protobuf.MessageOrBuilder

		''' <summary>
		''' <code>string name = 1;</code>
		''' </summary>
		ReadOnly Property Name As String
		''' <summary>
		''' <code>string name = 1;</code>
		''' </summary>
		ReadOnly Property NameBytes As org.nd4j.shade.protobuf.ByteString

		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
		ReadOnly Property ArgDescriptorList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
		Function getArgDescriptor(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
		ReadOnly Property ArgDescriptorCount As Integer
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: java.util.List<? extends org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder> getArgDescriptorOrBuilderList();
		ReadOnly Property ArgDescriptorOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
		Function getArgDescriptorOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder

		''' <summary>
		''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		''' </summary>
		ReadOnly Property OpDeclarationTypeValue As Integer
		''' <summary>
		''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		''' </summary>
		ReadOnly Property OpDeclarationType As org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType
	  End Interface
	  ''' <summary>
	  ''' <pre>
	  ''' Op descriptor
	  ''' </pre>
	  ''' 
	  ''' Protobuf type {@code org.nd4j.ir.OpDescriptor}
	  ''' </summary>
	  Public NotInheritable Class OpDescriptor
		  Inherits org.nd4j.shade.protobuf.GeneratedMessageV3
		  Implements OpDescriptorOrBuilder

	  Friend Const serialVersionUID As Long = 0L
		' Use OpDescriptor.newBuilder() to construct.
'JAVA TO VB CONVERTER TODO TASK: Wildcard generics in constructor parameters are not converted. Move the generic type parameter and constraint to the class header:
'ORIGINAL LINE: private OpDescriptor(org.nd4j.shade.protobuf.GeneratedMessageV3.Builder<?> builder)
'JAVA TO VB CONVERTER NOTE: The parameter builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		Friend Sub New(ByVal builder_Conflict As org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of T1))
		  MyBase.New(builder_Conflict)
		End Sub
		Friend Sub New()
		  name_ = ""
		  argDescriptor_ = java.util.Collections.emptyList()
		  opDeclarationType_ = 0
		End Sub

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @java.lang.Override @SuppressWarnings({"unused"}) protected java.lang.Object newInstance(UnusedPrivateParameter unused)
		Protected Friend Overrides Function newInstance(ByVal unused As UnusedPrivateParameter) As Object
		  Return New OpDescriptor()
		End Function

		Public Overrides ReadOnly Property UnknownFields As org.nd4j.shade.protobuf.UnknownFieldSet
			Get
			  Return Me.unknownFields
			End Get
		End Property
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: private OpDescriptor(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Friend Sub New(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
		  Me.New()
		  If extensionRegistry Is Nothing Then
			Throw New System.NullReferenceException()
		  End If
		  Dim mutable_bitField0_ As Integer = 0
		  Dim unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet.Builder = org.nd4j.shade.protobuf.UnknownFieldSet.newBuilder()
		  Try
			Dim done As Boolean = False
			Do While Not done
			  Dim tag As Integer = input.readTag()
			  Select Case tag
				Case 0
				  done = True
				Case 10
				  Dim s As String = input.readStringRequireUtf8()

				  name_ = s
				Case 18
				  If Not ((mutable_bitField0_ And &H1) <> 0) Then
					argDescriptor_ = New List(Of org.nd4j.ir.OpNamespace.ArgDescriptor)()
					mutable_bitField0_ = mutable_bitField0_ Or &H1
				  End If
				  argDescriptor_.Add(input.readMessage(org.nd4j.ir.OpNamespace.ArgDescriptor.parser(), extensionRegistry))
				Case 24
				  Dim rawValue As Integer = input.readEnum()

				  opDeclarationType_ = rawValue
				Case Else
				  If Not parseUnknownField(input, unknownFields, extensionRegistry, tag) Then
					done = True
				  End If
			  End Select
			Loop
		  Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Throw e.setUnfinishedMessage(Me)
		  Catch e As java.io.IOException
			Throw (New org.nd4j.shade.protobuf.InvalidProtocolBufferException(e)).setUnfinishedMessage(Me)
		  Finally
			If ((mutable_bitField0_ And &H1) <> 0) Then
			  argDescriptor_ = java.util.Collections.unmodifiableList(argDescriptor_)
			End If
			Me.unknownFields = unknownFields.build()
			makeExtensionsImmutable()
		  End Try
		End Sub
		Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			Get
			  Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptor_descriptor
			End Get
		End Property

		Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
		  Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptor_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.OpNamespace.OpDescriptor), GetType(org.nd4j.ir.OpNamespace.OpDescriptor.Builder))
		End Function

		''' <summary>
		''' Protobuf enum {@code org.nd4j.ir.OpDescriptor.OpDeclarationType}
		''' </summary>
		Public NotInheritable Class OpDeclarationType Implements org.nd4j.shade.protobuf.ProtocolMessageEnum
		  ''' <summary>
		  ''' <code>CUSTOM_OP_IMPL = 0;</code>
		  ''' </summary>
		  Public Shared ReadOnly CUSTOM_OP_IMPL As New OpDeclarationType("CUSTOM_OP_IMPL", InnerEnum.CUSTOM_OP_IMPL, 0)
		  ''' <summary>
		  ''' <code>BOOLEAN_OP_IMPL = 1;</code>
		  ''' </summary>
		  Public Shared ReadOnly BOOLEAN_OP_IMPL As New OpDeclarationType("BOOLEAN_OP_IMPL", InnerEnum.BOOLEAN_OP_IMPL, 1)
		  ''' <summary>
		  ''' <code>LIST_OP_IMPL = 2;</code>
		  ''' </summary>
		  Public Shared ReadOnly LIST_OP_IMPL As New OpDeclarationType("LIST_OP_IMPL", InnerEnum.LIST_OP_IMPL, 2)
		  ''' <summary>
		  ''' <code>LOGIC_OP_IMPL = 3;</code>
		  ''' </summary>
		  Public Shared ReadOnly LOGIC_OP_IMPL As New OpDeclarationType("LOGIC_OP_IMPL", InnerEnum.LOGIC_OP_IMPL, 3)
		  ''' <summary>
		  ''' <code>OP_IMPL = 4;</code>
		  ''' </summary>
		  Public Shared ReadOnly OP_IMPL As New OpDeclarationType("OP_IMPL", InnerEnum.OP_IMPL, 4)
		  ''' <summary>
		  ''' <code>DIVERGENT_OP_IMPL = 6;</code>
		  ''' </summary>
		  Public Shared ReadOnly DIVERGENT_OP_IMPL As New OpDeclarationType("DIVERGENT_OP_IMPL", InnerEnum.DIVERGENT_OP_IMPL, 6)
		  ''' <summary>
		  ''' <code>CONFIGURABLE_OP_IMPL = 7;</code>
		  ''' </summary>
		  Public Shared ReadOnly CONFIGURABLE_OP_IMPL As New OpDeclarationType("CONFIGURABLE_OP_IMPL", InnerEnum.CONFIGURABLE_OP_IMPL, 7)
		  ''' <summary>
		  ''' <code>REDUCTION_OP_IMPL = 8;</code>
		  ''' </summary>
		  Public Shared ReadOnly REDUCTION_OP_IMPL As New OpDeclarationType("REDUCTION_OP_IMPL", InnerEnum.REDUCTION_OP_IMPL, 8)
		  ''' <summary>
		  ''' <code>BROADCASTABLE_OP_IMPL = 9;</code>
		  ''' </summary>
		  Public Shared ReadOnly BROADCASTABLE_OP_IMPL As New OpDeclarationType("BROADCASTABLE_OP_IMPL", InnerEnum.BROADCASTABLE_OP_IMPL, 9)
		  ''' <summary>
		  ''' <code>BROADCASTABLE_BOOL_OP_IMPL = 10;</code>
		  ''' </summary>
		  Public Shared ReadOnly BROADCASTABLE_BOOL_OP_IMPL As New OpDeclarationType("BROADCASTABLE_BOOL_OP_IMPL", InnerEnum.BROADCASTABLE_BOOL_OP_IMPL, 10)
		  ''' <summary>
		  ''' <code>LEGACY_XYZ = 11;</code>
		  ''' </summary>
		  Public Shared ReadOnly LEGACY_XYZ As New OpDeclarationType("LEGACY_XYZ", InnerEnum.LEGACY_XYZ, 11)
		  ''' <summary>
		  ''' <code>PLATFORM_IMPL = 12;</code>
		  ''' </summary>
		  Public Shared ReadOnly PLATFORM_IMPL As New OpDeclarationType("PLATFORM_IMPL", InnerEnum.PLATFORM_IMPL, 12)
		  Public Shared ReadOnly UNRECOGNIZED As New OpDeclarationType("UNRECOGNIZED", InnerEnum.UNRECOGNIZED, -1)

		  Private Shared ReadOnly valueList As New List(Of OpDeclarationType)()

		  Shared Sub New()
			  valueList.Add(CUSTOM_OP_IMPL)
			  valueList.Add(BOOLEAN_OP_IMPL)
			  valueList.Add(LIST_OP_IMPL)
			  valueList.Add(LOGIC_OP_IMPL)
			  valueList.Add(OP_IMPL)
			  valueList.Add(DIVERGENT_OP_IMPL)
			  valueList.Add(CONFIGURABLE_OP_IMPL)
			  valueList.Add(REDUCTION_OP_IMPL)
			  valueList.Add(BROADCASTABLE_OP_IMPL)
			  valueList.Add(BROADCASTABLE_BOOL_OP_IMPL)
			  valueList.Add(LEGACY_XYZ)
			  valueList.Add(PLATFORM_IMPL)
			  valueList.Add(UNRECOGNIZED)
		  End Sub

		  Public Enum InnerEnum
			  CUSTOM_OP_IMPL
			  BOOLEAN_OP_IMPL
			  LIST_OP_IMPL
			  LOGIC_OP_IMPL
			  OP_IMPL
			  DIVERGENT_OP_IMPL
			  CONFIGURABLE_OP_IMPL
			  REDUCTION_OP_IMPL
			  BROADCASTABLE_OP_IMPL
			  BROADCASTABLE_BOOL_OP_IMPL
			  LEGACY_XYZ
			  PLATFORM_IMPL
			  UNRECOGNIZED
		  End Enum

		  Public ReadOnly innerEnumValue As InnerEnum
		  Private ReadOnly nameValue As String
		  Private ReadOnly ordinalValue As Integer
		  Private Shared nextOrdinal As Integer = 0

		  ''' <summary>
		  ''' <code>CUSTOM_OP_IMPL = 0;</code>
		  ''' </summary>
		  Public Const CUSTOM_OP_IMPL_VALUE As Integer = 0
		  ''' <summary>
		  ''' <code>BOOLEAN_OP_IMPL = 1;</code>
		  ''' </summary>
		  Public Const BOOLEAN_OP_IMPL_VALUE As Integer = 1
		  ''' <summary>
		  ''' <code>LIST_OP_IMPL = 2;</code>
		  ''' </summary>
		  Public Const LIST_OP_IMPL_VALUE As Integer = 2
		  ''' <summary>
		  ''' <code>LOGIC_OP_IMPL = 3;</code>
		  ''' </summary>
		  Public Const LOGIC_OP_IMPL_VALUE As Integer = 3
		  ''' <summary>
		  ''' <code>OP_IMPL = 4;</code>
		  ''' </summary>
		  Public Const OP_IMPL_VALUE As Integer = 4
		  ''' <summary>
		  ''' <code>DIVERGENT_OP_IMPL = 6;</code>
		  ''' </summary>
		  Public Const DIVERGENT_OP_IMPL_VALUE As Integer = 6
		  ''' <summary>
		  ''' <code>CONFIGURABLE_OP_IMPL = 7;</code>
		  ''' </summary>
		  Public Const CONFIGURABLE_OP_IMPL_VALUE As Integer = 7
		  ''' <summary>
		  ''' <code>REDUCTION_OP_IMPL = 8;</code>
		  ''' </summary>
		  Public Const REDUCTION_OP_IMPL_VALUE As Integer = 8
		  ''' <summary>
		  ''' <code>BROADCASTABLE_OP_IMPL = 9;</code>
		  ''' </summary>
		  Public Const BROADCASTABLE_OP_IMPL_VALUE As Integer = 9
		  ''' <summary>
		  ''' <code>BROADCASTABLE_BOOL_OP_IMPL = 10;</code>
		  ''' </summary>
		  Public Const BROADCASTABLE_BOOL_OP_IMPL_VALUE As Integer = 10
		  ''' <summary>
		  ''' <code>LEGACY_XYZ = 11;</code>
		  ''' </summary>
		  Public Const LEGACY_XYZ_VALUE As Integer = 11
		  ''' <summary>
		  ''' <code>PLATFORM_IMPL = 12;</code>
		  ''' </summary>
		  Public Const PLATFORM_IMPL_VALUE As Integer = 12


		  Public ReadOnly Property Number As Integer
			  Get
				If Me = UNRECOGNIZED Then
				  Throw New System.ArgumentException("Can't get the number of an unknown enum value.")
				End If
				Return outerInstance.value
			  End Get
		  End Property

		  ''' @deprecated Use <seealso cref="forNumber(Integer)"/> instead. 
		  <Obsolete("Use <seealso cref=""forNumber(Integer)""/> instead.")>
		  Public Shared Function valueOf(ByVal value As Integer) As OpDeclarationType
			Return forNumber(value)
		  End Function

		  Public Shared Function forNumber(ByVal value As Integer) As OpDeclarationType
			Select Case value
			  Case 0
				  Return CUSTOM_OP_IMPL
			  Case 1
				  Return BOOLEAN_OP_IMPL
			  Case 2
				  Return LIST_OP_IMPL
			  Case 3
				  Return LOGIC_OP_IMPL
			  Case 4
				  Return OP_IMPL
			  Case 6
				  Return DIVERGENT_OP_IMPL
			  Case 7
				  Return CONFIGURABLE_OP_IMPL
			  Case 8
				  Return REDUCTION_OP_IMPL
			  Case 9
				  Return BROADCASTABLE_OP_IMPL
			  Case 10
				  Return BROADCASTABLE_BOOL_OP_IMPL
			  Case 11
				  Return LEGACY_XYZ
			  Case 12
				  Return PLATFORM_IMPL
			  Case Else
				  Return Nothing
			End Select
		  End Function

		  Public Shared Function internalGetValueMap() As org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of OpDeclarationType)
			Return internalValueMap
		  End Function
		  Friend Shared ReadOnly internalValueMap As org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of OpDeclarationType) = New EnumLiteMapAnonymousInnerClass()

		  Public ReadOnly Property ValueDescriptor As org.nd4j.shade.protobuf.Descriptors.EnumValueDescriptor
			  Get
				Return getDescriptor().getValues().get(ordinal())
			  End Get
		  End Property

'JAVA TO VB CONVERTER TODO TASK: Java to VB Converter does not convert types within enums:
'		  private static class EnumLiteMapAnonymousInnerClass extends org.nd4j.shade.protobuf.Internal.EnumLiteMap(Of OpDeclarationType)
	'	  {
	'		  public OpDeclarationType findValueByNumber(int number)
	'		  {
	'			Return OpDeclarationType.forNumber(number);
	'		  }
	'	  }
		  Public ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.EnumDescriptor
			  Get
				Return getDescriptor()
			  End Get
		  End Property
		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.EnumDescriptor
			  Get
				Return org.nd4j.ir.OpNamespace.OpDescriptor.Descriptor.getEnumTypes().get(0)
			  End Get
		  End Property

		  Friend Shared ReadOnly VALUES() As OpDeclarationType = values()

		  Public Shared Function valueOf(ByVal desc As org.nd4j.shade.protobuf.Descriptors.EnumValueDescriptor) As OpDeclarationType
			If desc.getType() <> getDescriptor() Then
			  Throw New System.ArgumentException("EnumValueDescriptor is not for this type.")
			End If
			If desc.getIndex() = -1 Then
			  Return UNRECOGNIZED
			End If
			Return VALUES(desc.getIndex())
		  End Function

		  Friend ReadOnly value As Integer

		  Friend Sub New(ByVal name As String, ByVal thisInnerEnumValue As InnerEnum, ByVal outerInstance As OpNamespace.OpDescriptor, ByVal value As Integer)
			  Me.outerInstance = outerInstance
			Me.value = value

			  nameValue = name
			  ordinalValue = nextOrdinal
			  nextOrdinal += 1
			  innerEnumValue = thisInnerEnumValue
		  End Sub

		  ' @@protoc_insertion_point(enum_scope:org.nd4j.ir.OpDescriptor.OpDeclarationType)

			Public Shared Function values() As OpDeclarationType()
				Return valueList.ToArray()
			End Function

			Public Function ordinal() As Integer
				Return ordinalValue
			End Function

			Public Overrides Function ToString() As String
				Return nameValue
			End Function

			Public Shared Operator =(ByVal one As OpDeclarationType, ByVal two As OpDeclarationType) As Boolean
				Return one.innerEnumValue = two.innerEnumValue
			End Operator

			Public Shared Operator <>(ByVal one As OpDeclarationType, ByVal two As OpDeclarationType) As Boolean
				Return one.innerEnumValue <> two.innerEnumValue
			End Operator

			Public Shared Function valueOf(ByVal name As String) As OpDeclarationType
				For Each enumInstance As OpDeclarationType In OpDeclarationType.valueList
					If enumInstance.nameValue = name Then
						Return enumInstance
					End If
				Next
				Throw New System.ArgumentException(name)
			End Function
		End Class

		Public Const NAME_FIELD_NUMBER As Integer = 1
'JAVA TO VB CONVERTER TODO TASK: There is no VB equivalent to 'volatile':
'ORIGINAL LINE: private volatile java.lang.Object name_;
		Friend name_ As Object
		''' <summary>
		''' <code>string name = 1;</code>
		''' </summary>
		Public ReadOnly Property Name As String Implements OpDescriptorOrBuilder.getName
			Get
			  Dim ref As Object = name_
			  If TypeOf ref Is String Then
				Return DirectCast(ref, String)
			  Else
				Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				Dim s As String = bs.toStringUtf8()
				name_ = s
				Return s
			  End If
			End Get
		End Property
		''' <summary>
		''' <code>string name = 1;</code>
		''' </summary>
		Public ReadOnly Property NameBytes As org.nd4j.shade.protobuf.ByteString Implements OpDescriptorOrBuilder.getNameBytes
			Get
			  Dim ref As Object = name_
			  If TypeOf ref Is String Then
				Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				name_ = b
				Return b
			  Else
				Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
			  End If
			End Get
		End Property

		Public Const ARGDESCRIPTOR_FIELD_NUMBER As Integer = 2
		Friend argDescriptor_ As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
		Public ReadOnly Property ArgDescriptorList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor) Implements OpDescriptorOrBuilder.getArgDescriptorList
			Get
			  Return argDescriptor_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder> getArgDescriptorOrBuilderList()
		Public ReadOnly Property ArgDescriptorOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder) Implements OpDescriptorOrBuilder.getArgDescriptorOrBuilderList
			Get
			  Return argDescriptor_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
		Public ReadOnly Property ArgDescriptorCount As Integer Implements OpDescriptorOrBuilder.getArgDescriptorCount
			Get
			  Return argDescriptor_.Count
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
		Public Function getArgDescriptor(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor Implements OpDescriptorOrBuilder.getArgDescriptor
		  Return argDescriptor_(index)
		End Function
		''' <summary>
		''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		''' </summary>
		Public Function getArgDescriptorOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder Implements OpDescriptorOrBuilder.getArgDescriptorOrBuilder
		  Return argDescriptor_(index)
		End Function

		Public Const OPDECLARATIONTYPE_FIELD_NUMBER As Integer = 3
		Friend opDeclarationType_ As Integer
		''' <summary>
		''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		''' </summary>
		Public ReadOnly Property OpDeclarationTypeValue As Integer Implements OpDescriptorOrBuilder.getOpDeclarationTypeValue
			Get
			  Return opDeclarationType_
			End Get
		End Property
		''' <summary>
		''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		''' </summary>
		Public ReadOnly Property OpDeclarationType As org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType Implements OpDescriptorOrBuilder.getOpDeclarationType
			Get
	'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
	'ORIGINAL LINE: @SuppressWarnings("deprecation") org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType result = org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType.valueOf(opDeclarationType_);
			  Dim result As org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType = org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType.valueOf(opDeclarationType_)
			  Return If(result = Nothing, org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType.UNRECOGNIZED, result)
			End Get
		End Property

		Friend memoizedIsInitialized As SByte = -1
		Public Overrides ReadOnly Property Initialized As Boolean
			Get
	'JAVA TO VB CONVERTER NOTE: The local variable isInitialized was renamed since Visual Basic will not allow local variables with the same name as their enclosing function or property:
			  Dim isInitialized_Conflict As SByte = memoizedIsInitialized
			  If isInitialized_Conflict = 1 Then
				  Return True
			  End If
			  If isInitialized_Conflict = 0 Then
				  Return False
			  End If
    
			  memoizedIsInitialized = 1
			  Return True
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public void writeTo(org.nd4j.shade.protobuf.CodedOutputStream output) throws java.io.IOException
		Public Overrides Sub writeTo(ByVal output As org.nd4j.shade.protobuf.CodedOutputStream)
		  If Not NameBytes.isEmpty() Then
			org.nd4j.shade.protobuf.GeneratedMessageV3.writeString(output, 1, name_)
		  End If
		  For i As Integer = 0 To argDescriptor_.Count - 1
			output.writeMessage(2, argDescriptor_(i))
		  Next i
		  If opDeclarationType_ <> org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType.CUSTOM_OP_IMPL.getNumber() Then
			output.writeEnum(3, opDeclarationType_)
		  End If
		  unknownFields.writeTo(output)
		End Sub

		Public Overrides ReadOnly Property SerializedSize As Integer
			Get
			  Dim size As Integer = memoizedSize
			  If size <> -1 Then
				  Return size
			  End If
    
			  size = 0
			  If Not NameBytes.isEmpty() Then
				size += org.nd4j.shade.protobuf.GeneratedMessageV3.computeStringSize(1, name_)
			  End If
			  For i As Integer = 0 To argDescriptor_.Count - 1
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(2, argDescriptor_(i))
			  Next i
			  If opDeclarationType_ <> org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType.CUSTOM_OP_IMPL.getNumber() Then
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeEnumSize(3, opDeclarationType_)
			  End If
			  size += unknownFields.getSerializedSize()
			  memoizedSize = size
			  Return size
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public boolean equals(final java.lang.Object obj)
		Public Overrides Function Equals(ByVal obj As Object) As Boolean
		  If obj Is Me Then
		   Return True
		  End If
		  If Not (TypeOf obj Is org.nd4j.ir.OpNamespace.OpDescriptor) Then
			Return MyBase.Equals(obj)
		  End If
		  Dim other As org.nd4j.ir.OpNamespace.OpDescriptor = DirectCast(obj, org.nd4j.ir.OpNamespace.OpDescriptor)

		  If Not Name.Equals(other.Name) Then
			  Return False
		  End If
'JAVA TO VB CONVERTER WARNING: LINQ 'SequenceEqual' is not always identical to Java AbstractList 'equals':
'ORIGINAL LINE: if (!getArgDescriptorList().equals(other.getArgDescriptorList()))
		  If Not getArgDescriptorList().SequenceEqual(other.getArgDescriptorList()) Then
			  Return False
		  End If
		  If opDeclarationType_ <> other.opDeclarationType_ Then
			  Return False
		  End If
		  If Not unknownFields.Equals(other.unknownFields) Then
			  Return False
		  End If
		  Return True
		End Function

		Public Overrides Function GetHashCode() As Integer
		  If memoizedHashCode <> 0 Then
			Return memoizedHashCode
		  End If
		  Dim hash As Integer = 41
		  hash = (19 * hash) + Descriptor.GetHashCode()
		  hash = (37 * hash) + NAME_FIELD_NUMBER
		  hash = (53 * hash) + Name.GetHashCode()
		  If ArgDescriptorCount > 0 Then
			hash = (37 * hash) + ARGDESCRIPTOR_FIELD_NUMBER
			hash = (53 * hash) + getArgDescriptorList().GetHashCode()
		  End If
		  hash = (37 * hash) + OPDECLARATIONTYPE_FIELD_NUMBER
		  hash = (53 * hash) + opDeclarationType_
		  hash = (29 * hash) + unknownFields.GetHashCode()
		  memoizedHashCode = hash
		  Return hash
		End Function

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(java.nio.ByteBuffer data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(java.nio.ByteBuffer data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(org.nd4j.shade.protobuf.ByteString data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(org.nd4j.shade.protobuf.ByteString data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(byte[] data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(byte[] data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseDelimitedFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(org.nd4j.shade.protobuf.CodedInputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptor parseFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptor
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function

		Public Overrides Function newBuilderForType() As Builder
			Return newBuilder()
		End Function
		Public Shared Function newBuilder() As Builder
		  Return DEFAULT_INSTANCE.toBuilder()
		End Function
		Public Shared Function newBuilder(ByVal prototype As org.nd4j.ir.OpNamespace.OpDescriptor) As Builder
		  Return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype)
		End Function
		Public Overrides Function toBuilder() As Builder
		  Return If(Me Is DEFAULT_INSTANCE, New Builder(), (New Builder()).mergeFrom(Me))
		End Function

		Protected Friend Overrides Function newBuilderForType(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent) As Builder
'JAVA TO VB CONVERTER NOTE: The variable builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		  Dim builder_Conflict As New Builder(parent)
		  Return builder_Conflict
		End Function
		''' <summary>
		''' <pre>
		''' Op descriptor
		''' </pre>
		''' 
		''' Protobuf type {@code org.nd4j.ir.OpDescriptor}
		''' </summary>
		Public NotInheritable Class Builder
			Inherits org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of Builder)
			Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder

		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptor_descriptor
			  End Get
		  End Property

		  Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
			Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptor_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.OpNamespace.OpDescriptor), GetType(org.nd4j.ir.OpNamespace.OpDescriptor.Builder))
		  End Function

		  ' Construct using org.nd4j.ir.OpNamespace.OpDescriptor.newBuilder()
		  Friend Sub New()
			maybeForceBuilderInitialization()
		  End Sub

		  Friend Sub New(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent)
			MyBase.New(parent)
			maybeForceBuilderInitialization()
		  End Sub
		  Friend Sub maybeForceBuilderInitialization()
			If org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders Then
			  getArgDescriptorFieldBuilder()
			End If
		  End Sub
		  Public Overrides Function clear() As Builder
			MyBase.clear()
			name_ = ""

			If argDescriptorBuilder_ Is Nothing Then
			  argDescriptor_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			Else
			  argDescriptorBuilder_.clear()
			End If
			opDeclarationType_ = 0

			Return Me
		  End Function

		  Public Overrides ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptor_descriptor
			  End Get
		  End Property

		  Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.OpNamespace.OpDescriptor
			  Get
				Return org.nd4j.ir.OpNamespace.OpDescriptor.DefaultInstance
			  End Get
		  End Property

		  Public Overrides Function build() As org.nd4j.ir.OpNamespace.OpDescriptor
			Dim result As org.nd4j.ir.OpNamespace.OpDescriptor = buildPartial()
			If Not result.Initialized Then
			  Throw newUninitializedMessageException(result)
			End If
			Return result
		  End Function

		  Public Overrides Function buildPartial() As org.nd4j.ir.OpNamespace.OpDescriptor
			Dim result As New org.nd4j.ir.OpNamespace.OpDescriptor(Me)
			Dim from_bitField0_ As Integer = bitField0_
			result.name_ = name_
			If argDescriptorBuilder_ Is Nothing Then
			  If ((bitField0_ And &H1) <> 0) Then
				argDescriptor_ = java.util.Collections.unmodifiableList(argDescriptor_)
				bitField0_ = (bitField0_ And Not &H1)
			  End If
			  result.argDescriptor_ = argDescriptor_
			Else
			  result.argDescriptor_ = argDescriptorBuilder_.build()
			End If
			result.opDeclarationType_ = opDeclarationType_
			onBuilt()
			Return result
		  End Function

		  Public Overrides Function clone() As Builder
			Return MyBase.clone()
		  End Function
		  Public Overrides Function setField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.setField(field, value)
		  End Function
		  Public Overrides Function clearField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor) As Builder
			Return MyBase.clearField(field)
		  End Function
		  Public Overrides Function clearOneof(ByVal oneof As org.nd4j.shade.protobuf.Descriptors.OneofDescriptor) As Builder
			Return MyBase.clearOneof(oneof)
		  End Function
		  Public Overrides Function setRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal index As Integer, ByVal value As Object) As Builder
			Return MyBase.setRepeatedField(field, index, value)
		  End Function
		  Public Overrides Function addRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.addRepeatedField(field, value)
		  End Function
		  Public Overrides Function mergeFrom(ByVal other As org.nd4j.shade.protobuf.Message) As Builder
			If TypeOf other Is org.nd4j.ir.OpNamespace.OpDescriptor Then
			  Return mergeFrom(CType(other, org.nd4j.ir.OpNamespace.OpDescriptor))
			Else
			  MyBase.mergeFrom(other)
			  Return Me
			End If
		  End Function

		  Public Function mergeFrom(ByVal other As org.nd4j.ir.OpNamespace.OpDescriptor) As Builder
			If other Is org.nd4j.ir.OpNamespace.OpDescriptor.DefaultInstance Then
				Return Me
			End If
			If other.Name.Length > 0 Then
			  name_ = other.name_
			  onChanged()
			End If
			If argDescriptorBuilder_ Is Nothing Then
			  If other.argDescriptor_.Count > 0 Then
				If argDescriptor_.Count = 0 Then
				  argDescriptor_ = other.argDescriptor_
				  bitField0_ = (bitField0_ And Not &H1)
				Else
				  ensureArgDescriptorIsMutable()
				  CType(argDescriptor_, List(Of org.nd4j.ir.OpNamespace.ArgDescriptor)).AddRange(other.argDescriptor_)
				End If
				onChanged()
			  End If
			Else
			  If other.argDescriptor_.Count > 0 Then
				If argDescriptorBuilder_.isEmpty() Then
				  argDescriptorBuilder_.dispose()
				  argDescriptorBuilder_ = Nothing
				  argDescriptor_ = other.argDescriptor_
				  bitField0_ = (bitField0_ And Not &H1)
				  argDescriptorBuilder_ = If(org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders, getArgDescriptorFieldBuilder(), Nothing)
				Else
				  argDescriptorBuilder_.addAllMessages(other.argDescriptor_)
				End If
			  End If
			End If
			If other.opDeclarationType_ <> 0 Then
			  OpDeclarationTypeValue = other.OpDeclarationTypeValue
			End If
			Me.mergeUnknownFields(other.unknownFields)
			onChanged()
			Return Me
		  End Function

		  Public Overrides ReadOnly Property Initialized As Boolean
			  Get
				Return True
			  End Get
		  End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public Builder mergeFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		  Public Overrides Function mergeFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As Builder
			Dim parsedMessage As org.nd4j.ir.OpNamespace.OpDescriptor = Nothing
			Try
			  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
			Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			  parsedMessage = CType(e.getUnfinishedMessage(), org.nd4j.ir.OpNamespace.OpDescriptor)
			  Throw e.unwrapIOException()
			Finally
			  If parsedMessage IsNot Nothing Then
				mergeFrom(parsedMessage)
			  End If
			End Try
			Return Me
		  End Function
		  Friend bitField0_ As Integer

		  Friend name_ As Object = ""
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property Name As String Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getName
			  Get
				Dim ref As Object = name_
				If Not (TypeOf ref Is String) Then
				  Dim bs As org.nd4j.shade.protobuf.ByteString = DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				  Dim s As String = bs.toStringUtf8()
				  name_ = s
				  Return s
				Else
				  Return DirectCast(ref, String)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property NameBytes As org.nd4j.shade.protobuf.ByteString Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getNameBytes
			  Get
				Dim ref As Object = name_
				If TypeOf ref Is String Then
				  Dim b As org.nd4j.shade.protobuf.ByteString = org.nd4j.shade.protobuf.ByteString.copyFromUtf8(DirectCast(ref, String))
				  name_ = b
				  Return b
				Else
				  Return DirectCast(ref, org.nd4j.shade.protobuf.ByteString)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public Function setName(ByVal value As String) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If

			name_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public Function clearName() As Builder

			name_ = DefaultInstance.Name
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>string name = 1;</code>
		  ''' </summary>
		  Public Function setNameBytes(ByVal value As org.nd4j.shade.protobuf.ByteString) As Builder
			If value Is Nothing Then
		Throw New System.NullReferenceException()
			End If
	  checkByteStringIsUtf8(value)

			name_ = value
			onChanged()
			Return Me
		  End Function

		  Friend argDescriptor_ As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor) = java.util.Collections.emptyList()
		  Friend Sub ensureArgDescriptorIsMutable()
			If Not ((bitField0_ And &H1) <> 0) Then
			  argDescriptor_ = New List(Of org.nd4j.ir.OpNamespace.ArgDescriptor)(argDescriptor_)
			  bitField0_ = bitField0_ Or &H1
			End If
		  End Sub

		  Friend argDescriptorBuilder_ As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.ArgDescriptor, org.nd4j.ir.OpNamespace.ArgDescriptor.Builder, org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder)

		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property ArgDescriptorList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor) Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getArgDescriptorList
			  Get
				If argDescriptorBuilder_ Is Nothing Then
				  Return java.util.Collections.unmodifiableList(argDescriptor_)
				Else
				  Return argDescriptorBuilder_.getMessageList()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property ArgDescriptorCount As Integer Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getArgDescriptorCount
			  Get
				If argDescriptorBuilder_ Is Nothing Then
				  Return argDescriptor_.Count
				Else
				  Return argDescriptorBuilder_.getCount()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function getArgDescriptor(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getArgDescriptor
			If argDescriptorBuilder_ Is Nothing Then
			  Return argDescriptor_(index)
			Else
			  Return argDescriptorBuilder_.getMessage(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function setArgDescriptor(ByVal index As Integer, ByVal value As org.nd4j.ir.OpNamespace.ArgDescriptor) As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureArgDescriptorIsMutable()
			  argDescriptor_(index) = value
			  onChanged()
			Else
			  argDescriptorBuilder_.setMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function setArgDescriptor(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder) As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  ensureArgDescriptorIsMutable()
			  argDescriptor_(index) = builderForValue.build()
			  onChanged()
			Else
			  argDescriptorBuilder_.setMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function addArgDescriptor(ByVal value As org.nd4j.ir.OpNamespace.ArgDescriptor) As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureArgDescriptorIsMutable()
			  argDescriptor_.Add(value)
			  onChanged()
			Else
			  argDescriptorBuilder_.addMessage(value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function addArgDescriptor(ByVal index As Integer, ByVal value As org.nd4j.ir.OpNamespace.ArgDescriptor) As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureArgDescriptorIsMutable()
			  argDescriptor_.Insert(index, value)
			  onChanged()
			Else
			  argDescriptorBuilder_.addMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function addArgDescriptor(ByVal builderForValue As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder) As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  ensureArgDescriptorIsMutable()
			  argDescriptor_.Add(builderForValue.build())
			  onChanged()
			Else
			  argDescriptorBuilder_.addMessage(builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function addArgDescriptor(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder) As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  ensureArgDescriptorIsMutable()
			  argDescriptor_.Insert(index, builderForValue.build())
			  onChanged()
			Else
			  argDescriptorBuilder_.addMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function addAllArgDescriptor(Of T1 As org.nd4j.ir.OpNamespace.ArgDescriptor)(ByVal values As IEnumerable(Of T1)) As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  ensureArgDescriptorIsMutable()
			  org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, argDescriptor_)
			  onChanged()
			Else
			  argDescriptorBuilder_.addAllMessages(values)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function clearArgDescriptor() As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  argDescriptor_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			  onChanged()
			Else
			  argDescriptorBuilder_.clear()
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function removeArgDescriptor(ByVal index As Integer) As Builder
			If argDescriptorBuilder_ Is Nothing Then
			  ensureArgDescriptorIsMutable()
			  argDescriptor_.RemoveAt(index)
			  onChanged()
			Else
			  argDescriptorBuilder_.remove(index)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function getArgDescriptorBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder
			Return getArgDescriptorFieldBuilder().getBuilder(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function getArgDescriptorOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getArgDescriptorOrBuilder
			If argDescriptorBuilder_ Is Nothing Then
			  Return argDescriptor_(index)
			Else
			  Return argDescriptorBuilder_.getMessageOrBuilder(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder> getArgDescriptorOrBuilderList()
		  Public ReadOnly Property ArgDescriptorOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder) Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getArgDescriptorOrBuilderList
			  Get
				If argDescriptorBuilder_ IsNot Nothing Then
				  Return argDescriptorBuilder_.getMessageOrBuilderList()
				Else
				  Return java.util.Collections.unmodifiableList(argDescriptor_)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function addArgDescriptorBuilder() As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder
			Return getArgDescriptorFieldBuilder().addBuilder(org.nd4j.ir.OpNamespace.ArgDescriptor.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public Function addArgDescriptorBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.ArgDescriptor.Builder
			Return getArgDescriptorFieldBuilder().addBuilder(index, org.nd4j.ir.OpNamespace.ArgDescriptor.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.ArgDescriptor argDescriptor = 2;</code>
		  ''' </summary>
		  Public ReadOnly Property ArgDescriptorBuilderList As IList(Of org.nd4j.ir.OpNamespace.ArgDescriptor.Builder)
			  Get
				Return getArgDescriptorFieldBuilder().getBuilderList()
			  End Get
		  End Property
		  Friend ReadOnly Property ArgDescriptorFieldBuilder As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.ArgDescriptor, org.nd4j.ir.OpNamespace.ArgDescriptor.Builder, org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder)
			  Get
				If argDescriptorBuilder_ Is Nothing Then
				  argDescriptorBuilder_ = New org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.ArgDescriptor, org.nd4j.ir.OpNamespace.ArgDescriptor.Builder, org.nd4j.ir.OpNamespace.ArgDescriptorOrBuilder)(argDescriptor_, ((bitField0_ And &H1) <> 0), getParentForChildren(), isClean())
				  argDescriptor_ = Nothing
				End If
				Return argDescriptorBuilder_
			  End Get
		  End Property

		  Friend opDeclarationType_ As Integer = 0
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		  ''' </summary>
		  Public ReadOnly Property OpDeclarationTypeValue As Integer Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getOpDeclarationTypeValue
			  Get
				Return opDeclarationType_
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		  ''' </summary>
		  Public Function setOpDeclarationTypeValue(ByVal value As Integer) As Builder
			opDeclarationType_ = value
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		  ''' </summary>
		  Public ReadOnly Property OpDeclarationType As org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType Implements org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder.getOpDeclarationType
			  Get
	'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
	'ORIGINAL LINE: @SuppressWarnings("deprecation") org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType result = org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType.valueOf(opDeclarationType_);
				Dim result As org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType = org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType.valueOf(opDeclarationType_)
				Return If(result = Nothing, org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType.UNRECOGNIZED, result)
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		  ''' </summary>
		  Public Function setOpDeclarationType(ByVal value As org.nd4j.ir.OpNamespace.OpDescriptor.OpDeclarationType) As Builder
			If value = Nothing Then
			  Throw New System.NullReferenceException()
			End If

			opDeclarationType_ = value.getNumber()
			onChanged()
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>.org.nd4j.ir.OpDescriptor.OpDeclarationType opDeclarationType = 3;</code>
		  ''' </summary>
		  Public Function clearOpDeclarationType() As Builder

			opDeclarationType_ = 0
			onChanged()
			Return Me
		  End Function
'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder setUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function setUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.setUnknownFields(unknownFields)
		  End Function

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder mergeUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function mergeUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.mergeUnknownFields(unknownFields)
		  End Function


		  ' @@protoc_insertion_point(builder_scope:org.nd4j.ir.OpDescriptor)
		End Class

		' @@protoc_insertion_point(class_scope:org.nd4j.ir.OpDescriptor)
		Friend Shared ReadOnly DEFAULT_INSTANCE As org.nd4j.ir.OpNamespace.OpDescriptor
		Shared Sub New()
		  DEFAULT_INSTANCE = New org.nd4j.ir.OpNamespace.OpDescriptor()
		End Sub

		Public Shared ReadOnly Property DefaultInstance As org.nd4j.ir.OpNamespace.OpDescriptor
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

'JAVA TO VB CONVERTER NOTE: The field PARSER was renamed since Visual Basic does not allow fields to have the same name as other class members:
		Friend Shared ReadOnly PARSER_Conflict As org.nd4j.shade.protobuf.Parser(Of OpDescriptor) = New AbstractParserAnonymousInnerClass()

		Private Class AbstractParserAnonymousInnerClass
			Inherits org.nd4j.shade.protobuf.AbstractParser(Of OpDescriptor)

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public OpDescriptor parsePartialFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Public Overrides Function parsePartialFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As OpDescriptor
			  Return New OpDescriptor(input, extensionRegistry)
			End Function
		End Class

		Public Shared Function parser() As org.nd4j.shade.protobuf.Parser(Of OpDescriptor)
		  Return PARSER_Conflict
		End Function

		Public Overrides ReadOnly Property ParserForType As org.nd4j.shade.protobuf.Parser(Of OpDescriptor)
			Get
			  Return PARSER_Conflict
			End Get
		End Property

		Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.OpNamespace.OpDescriptor
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

	  End Class

	  Public Interface OpDescriptorListOrBuilder
		  Inherits org.nd4j.shade.protobuf.MessageOrBuilder

		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
		ReadOnly Property OpListList As IList(Of org.nd4j.ir.OpNamespace.OpDescriptor)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
		Function getOpList(ByVal index As Integer) As org.nd4j.ir.OpNamespace.OpDescriptor
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
		ReadOnly Property OpListCount As Integer
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: java.util.List<? extends org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder> getOpListOrBuilderList();
		ReadOnly Property OpListOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
		Function getOpListOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder
	  End Interface
	  ''' <summary>
	  ''' Protobuf type {@code org.nd4j.ir.OpDescriptorList}
	  ''' </summary>
	  Public NotInheritable Class OpDescriptorList
		  Inherits org.nd4j.shade.protobuf.GeneratedMessageV3
		  Implements OpDescriptorListOrBuilder

	  Friend Const serialVersionUID As Long = 0L
		' Use OpDescriptorList.newBuilder() to construct.
'JAVA TO VB CONVERTER TODO TASK: Wildcard generics in constructor parameters are not converted. Move the generic type parameter and constraint to the class header:
'ORIGINAL LINE: private OpDescriptorList(org.nd4j.shade.protobuf.GeneratedMessageV3.Builder<?> builder)
'JAVA TO VB CONVERTER NOTE: The parameter builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		Friend Sub New(ByVal builder_Conflict As org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of T1))
		  MyBase.New(builder_Conflict)
		End Sub
		Friend Sub New()
		  opList_ = java.util.Collections.emptyList()
		End Sub

'JAVA TO VB CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
'ORIGINAL LINE: @java.lang.Override @SuppressWarnings({"unused"}) protected java.lang.Object newInstance(UnusedPrivateParameter unused)
		Protected Friend Overrides Function newInstance(ByVal unused As UnusedPrivateParameter) As Object
		  Return New OpDescriptorList()
		End Function

		Public Overrides ReadOnly Property UnknownFields As org.nd4j.shade.protobuf.UnknownFieldSet
			Get
			  Return Me.unknownFields
			End Get
		End Property
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: private OpDescriptorList(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Friend Sub New(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite)
		  Me.New()
		  If extensionRegistry Is Nothing Then
			Throw New System.NullReferenceException()
		  End If
		  Dim mutable_bitField0_ As Integer = 0
		  Dim unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet.Builder = org.nd4j.shade.protobuf.UnknownFieldSet.newBuilder()
		  Try
			Dim done As Boolean = False
			Do While Not done
			  Dim tag As Integer = input.readTag()
			  Select Case tag
				Case 0
				  done = True
				Case 10
				  If Not ((mutable_bitField0_ And &H1) <> 0) Then
					opList_ = New List(Of org.nd4j.ir.OpNamespace.OpDescriptor)()
					mutable_bitField0_ = mutable_bitField0_ Or &H1
				  End If
				  opList_.Add(input.readMessage(org.nd4j.ir.OpNamespace.OpDescriptor.parser(), extensionRegistry))
				Case Else
				  If Not parseUnknownField(input, unknownFields, extensionRegistry, tag) Then
					done = True
				  End If
			  End Select
			Loop
		  Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Throw e.setUnfinishedMessage(Me)
		  Catch e As java.io.IOException
			Throw (New org.nd4j.shade.protobuf.InvalidProtocolBufferException(e)).setUnfinishedMessage(Me)
		  Finally
			If ((mutable_bitField0_ And &H1) <> 0) Then
			  opList_ = java.util.Collections.unmodifiableList(opList_)
			End If
			Me.unknownFields = unknownFields.build()
			makeExtensionsImmutable()
		  End Try
		End Sub
		Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			Get
			  Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptorList_descriptor
			End Get
		End Property

		Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
		  Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptorList_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.OpNamespace.OpDescriptorList), GetType(org.nd4j.ir.OpNamespace.OpDescriptorList.Builder))
		End Function

		Public Const OPLIST_FIELD_NUMBER As Integer = 1
		Friend opList_ As IList(Of org.nd4j.ir.OpNamespace.OpDescriptor)
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
		Public ReadOnly Property OpListList As IList(Of org.nd4j.ir.OpNamespace.OpDescriptor) Implements OpDescriptorListOrBuilder.getOpListList
			Get
			  Return opList_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder> getOpListOrBuilderList()
		Public ReadOnly Property OpListOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder) Implements OpDescriptorListOrBuilder.getOpListOrBuilderList
			Get
			  Return opList_
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
		Public ReadOnly Property OpListCount As Integer Implements OpDescriptorListOrBuilder.getOpListCount
			Get
			  Return opList_.Count
			End Get
		End Property
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
		Public Function getOpList(ByVal index As Integer) As org.nd4j.ir.OpNamespace.OpDescriptor Implements OpDescriptorListOrBuilder.getOpList
		  Return opList_(index)
		End Function
		''' <summary>
		''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		''' </summary>
		Public Function getOpListOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder Implements OpDescriptorListOrBuilder.getOpListOrBuilder
		  Return opList_(index)
		End Function

		Friend memoizedIsInitialized As SByte = -1
		Public Overrides ReadOnly Property Initialized As Boolean
			Get
	'JAVA TO VB CONVERTER NOTE: The local variable isInitialized was renamed since Visual Basic will not allow local variables with the same name as their enclosing function or property:
			  Dim isInitialized_Conflict As SByte = memoizedIsInitialized
			  If isInitialized_Conflict = 1 Then
				  Return True
			  End If
			  If isInitialized_Conflict = 0 Then
				  Return False
			  End If
    
			  memoizedIsInitialized = 1
			  Return True
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public void writeTo(org.nd4j.shade.protobuf.CodedOutputStream output) throws java.io.IOException
		Public Overrides Sub writeTo(ByVal output As org.nd4j.shade.protobuf.CodedOutputStream)
		  For i As Integer = 0 To opList_.Count - 1
			output.writeMessage(1, opList_(i))
		  Next i
		  unknownFields.writeTo(output)
		End Sub

		Public Overrides ReadOnly Property SerializedSize As Integer
			Get
			  Dim size As Integer = memoizedSize
			  If size <> -1 Then
				  Return size
			  End If
    
			  size = 0
			  For i As Integer = 0 To opList_.Count - 1
				size += org.nd4j.shade.protobuf.CodedOutputStream.computeMessageSize(1, opList_(i))
			  Next i
			  size += unknownFields.getSerializedSize()
			  memoizedSize = size
			  Return size
			End Get
		End Property

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public boolean equals(final java.lang.Object obj)
		Public Overrides Function Equals(ByVal obj As Object) As Boolean
		  If obj Is Me Then
		   Return True
		  End If
		  If Not (TypeOf obj Is org.nd4j.ir.OpNamespace.OpDescriptorList) Then
			Return MyBase.Equals(obj)
		  End If
		  Dim other As org.nd4j.ir.OpNamespace.OpDescriptorList = DirectCast(obj, org.nd4j.ir.OpNamespace.OpDescriptorList)

'JAVA TO VB CONVERTER WARNING: LINQ 'SequenceEqual' is not always identical to Java AbstractList 'equals':
'ORIGINAL LINE: if (!getOpListList().equals(other.getOpListList()))
		  If Not getOpListList().SequenceEqual(other.getOpListList()) Then
			  Return False
		  End If
		  If Not unknownFields.Equals(other.unknownFields) Then
			  Return False
		  End If
		  Return True
		End Function

		Public Overrides Function GetHashCode() As Integer
		  If memoizedHashCode <> 0 Then
			Return memoizedHashCode
		  End If
		  Dim hash As Integer = 41
		  hash = (19 * hash) + Descriptor.GetHashCode()
		  If OpListCount > 0 Then
			hash = (37 * hash) + OPLIST_FIELD_NUMBER
			hash = (53 * hash) + getOpListList().GetHashCode()
		  End If
		  hash = (29 * hash) + unknownFields.GetHashCode()
		  memoizedHashCode = hash
		  Return hash
		End Function

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(java.nio.ByteBuffer data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(java.nio.ByteBuffer data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As java.nio.ByteBuffer, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(org.nd4j.shade.protobuf.ByteString data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(org.nd4j.shade.protobuf.ByteString data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data As org.nd4j.shade.protobuf.ByteString, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(byte[] data) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return PARSER_Conflict.parseFrom(data)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(byte[] data, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
		Public Shared Function parseFrom(ByVal data() As SByte, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return PARSER_Conflict.parseFrom(data, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseDelimitedFrom(java.io.InputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseDelimitedFrom(ByVal input As Stream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(org.nd4j.shade.protobuf.CodedInputStream input) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input)
		End Function
'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: public static org.nd4j.ir.OpNamespace.OpDescriptorList parseFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		Public Shared Function parseFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As org.nd4j.ir.OpNamespace.OpDescriptorList
		  Return org.nd4j.shade.protobuf.GeneratedMessageV3.parseWithIOException(PARSER_Conflict, input, extensionRegistry)
		End Function

		Public Overrides Function newBuilderForType() As Builder
			Return newBuilder()
		End Function
		Public Shared Function newBuilder() As Builder
		  Return DEFAULT_INSTANCE.toBuilder()
		End Function
		Public Shared Function newBuilder(ByVal prototype As org.nd4j.ir.OpNamespace.OpDescriptorList) As Builder
		  Return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype)
		End Function
		Public Overrides Function toBuilder() As Builder
		  Return If(Me Is DEFAULT_INSTANCE, New Builder(), (New Builder()).mergeFrom(Me))
		End Function

		Protected Friend Overrides Function newBuilderForType(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent) As Builder
'JAVA TO VB CONVERTER NOTE: The variable builder was renamed since it may cause conflicts with calls to static members of the user-defined type with this name:
		  Dim builder_Conflict As New Builder(parent)
		  Return builder_Conflict
		End Function
		''' <summary>
		''' Protobuf type {@code org.nd4j.ir.OpDescriptorList}
		''' </summary>
		Public NotInheritable Class Builder
			Inherits org.nd4j.shade.protobuf.GeneratedMessageV3.Builder(Of Builder)
			Implements org.nd4j.ir.OpNamespace.OpDescriptorListOrBuilder

		  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptorList_descriptor
			  End Get
		  End Property

		  Protected Friend Overrides Function internalGetFieldAccessorTable() As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
			Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptorList_fieldAccessorTable.ensureFieldAccessorsInitialized(GetType(org.nd4j.ir.OpNamespace.OpDescriptorList), GetType(org.nd4j.ir.OpNamespace.OpDescriptorList.Builder))
		  End Function

		  ' Construct using org.nd4j.ir.OpNamespace.OpDescriptorList.newBuilder()
		  Friend Sub New()
			maybeForceBuilderInitialization()
		  End Sub

		  Friend Sub New(ByVal parent As org.nd4j.shade.protobuf.GeneratedMessageV3.BuilderParent)
			MyBase.New(parent)
			maybeForceBuilderInitialization()
		  End Sub
		  Friend Sub maybeForceBuilderInitialization()
			If org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders Then
			  getOpListFieldBuilder()
			End If
		  End Sub
		  Public Overrides Function clear() As Builder
			MyBase.clear()
			If opListBuilder_ Is Nothing Then
			  opList_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			Else
			  opListBuilder_.clear()
			End If
			Return Me
		  End Function

		  Public Overrides ReadOnly Property DescriptorForType As org.nd4j.shade.protobuf.Descriptors.Descriptor
			  Get
				Return org.nd4j.ir.OpNamespace.internal_static_org_nd4j_ir_OpDescriptorList_descriptor
			  End Get
		  End Property

		  Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.OpNamespace.OpDescriptorList
			  Get
				Return org.nd4j.ir.OpNamespace.OpDescriptorList.DefaultInstance
			  End Get
		  End Property

		  Public Overrides Function build() As org.nd4j.ir.OpNamespace.OpDescriptorList
			Dim result As org.nd4j.ir.OpNamespace.OpDescriptorList = buildPartial()
			If Not result.Initialized Then
			  Throw newUninitializedMessageException(result)
			End If
			Return result
		  End Function

		  Public Overrides Function buildPartial() As org.nd4j.ir.OpNamespace.OpDescriptorList
			Dim result As New org.nd4j.ir.OpNamespace.OpDescriptorList(Me)
			Dim from_bitField0_ As Integer = bitField0_
			If opListBuilder_ Is Nothing Then
			  If ((bitField0_ And &H1) <> 0) Then
				opList_ = java.util.Collections.unmodifiableList(opList_)
				bitField0_ = (bitField0_ And Not &H1)
			  End If
			  result.opList_ = opList_
			Else
			  result.opList_ = opListBuilder_.build()
			End If
			onBuilt()
			Return result
		  End Function

		  Public Overrides Function clone() As Builder
			Return MyBase.clone()
		  End Function
		  Public Overrides Function setField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.setField(field, value)
		  End Function
		  Public Overrides Function clearField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor) As Builder
			Return MyBase.clearField(field)
		  End Function
		  Public Overrides Function clearOneof(ByVal oneof As org.nd4j.shade.protobuf.Descriptors.OneofDescriptor) As Builder
			Return MyBase.clearOneof(oneof)
		  End Function
		  Public Overrides Function setRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal index As Integer, ByVal value As Object) As Builder
			Return MyBase.setRepeatedField(field, index, value)
		  End Function
		  Public Overrides Function addRepeatedField(ByVal field As org.nd4j.shade.protobuf.Descriptors.FieldDescriptor, ByVal value As Object) As Builder
			Return MyBase.addRepeatedField(field, value)
		  End Function
		  Public Overrides Function mergeFrom(ByVal other As org.nd4j.shade.protobuf.Message) As Builder
			If TypeOf other Is org.nd4j.ir.OpNamespace.OpDescriptorList Then
			  Return mergeFrom(CType(other, org.nd4j.ir.OpNamespace.OpDescriptorList))
			Else
			  MyBase.mergeFrom(other)
			  Return Me
			End If
		  End Function

		  Public Function mergeFrom(ByVal other As org.nd4j.ir.OpNamespace.OpDescriptorList) As Builder
			If other Is org.nd4j.ir.OpNamespace.OpDescriptorList.DefaultInstance Then
				Return Me
			End If
			If opListBuilder_ Is Nothing Then
			  If other.opList_.Count > 0 Then
				If opList_.Count = 0 Then
				  opList_ = other.opList_
				  bitField0_ = (bitField0_ And Not &H1)
				Else
				  ensureOpListIsMutable()
				  CType(opList_, List(Of org.nd4j.ir.OpNamespace.OpDescriptor)).AddRange(other.opList_)
				End If
				onChanged()
			  End If
			Else
			  If other.opList_.Count > 0 Then
				If opListBuilder_.isEmpty() Then
				  opListBuilder_.dispose()
				  opListBuilder_ = Nothing
				  opList_ = other.opList_
				  bitField0_ = (bitField0_ And Not &H1)
				  opListBuilder_ = If(org.nd4j.shade.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders, getOpListFieldBuilder(), Nothing)
				Else
				  opListBuilder_.addAllMessages(other.opList_)
				End If
			  End If
			End If
			Me.mergeUnknownFields(other.unknownFields)
			onChanged()
			Return Me
		  End Function

		  Public Overrides ReadOnly Property Initialized As Boolean
			  Get
				Return True
			  End Get
		  End Property

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public Builder mergeFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException
		  Public Overrides Function mergeFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As Builder
			Dim parsedMessage As org.nd4j.ir.OpNamespace.OpDescriptorList = Nothing
			Try
			  parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
			Catch e As org.nd4j.shade.protobuf.InvalidProtocolBufferException
			  parsedMessage = CType(e.getUnfinishedMessage(), org.nd4j.ir.OpNamespace.OpDescriptorList)
			  Throw e.unwrapIOException()
			Finally
			  If parsedMessage IsNot Nothing Then
				mergeFrom(parsedMessage)
			  End If
			End Try
			Return Me
		  End Function
		  Friend bitField0_ As Integer

		  Friend opList_ As IList(Of org.nd4j.ir.OpNamespace.OpDescriptor) = java.util.Collections.emptyList()
		  Friend Sub ensureOpListIsMutable()
			If Not ((bitField0_ And &H1) <> 0) Then
			  opList_ = New List(Of org.nd4j.ir.OpNamespace.OpDescriptor)(opList_)
			  bitField0_ = bitField0_ Or &H1
			End If
		  End Sub

		  Friend opListBuilder_ As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.OpDescriptor, org.nd4j.ir.OpNamespace.OpDescriptor.Builder, org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder)

		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property OpListList As IList(Of org.nd4j.ir.OpNamespace.OpDescriptor) Implements org.nd4j.ir.OpNamespace.OpDescriptorListOrBuilder.getOpListList
			  Get
				If opListBuilder_ Is Nothing Then
				  Return java.util.Collections.unmodifiableList(opList_)
				Else
				  Return opListBuilder_.getMessageList()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property OpListCount As Integer Implements org.nd4j.ir.OpNamespace.OpDescriptorListOrBuilder.getOpListCount
			  Get
				If opListBuilder_ Is Nothing Then
				  Return opList_.Count
				Else
				  Return opListBuilder_.getCount()
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function getOpList(ByVal index As Integer) As org.nd4j.ir.OpNamespace.OpDescriptor Implements org.nd4j.ir.OpNamespace.OpDescriptorListOrBuilder.getOpList
			If opListBuilder_ Is Nothing Then
			  Return opList_(index)
			Else
			  Return opListBuilder_.getMessage(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function setOpList(ByVal index As Integer, ByVal value As org.nd4j.ir.OpNamespace.OpDescriptor) As Builder
			If opListBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureOpListIsMutable()
			  opList_(index) = value
			  onChanged()
			Else
			  opListBuilder_.setMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function setOpList(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.OpNamespace.OpDescriptor.Builder) As Builder
			If opListBuilder_ Is Nothing Then
			  ensureOpListIsMutable()
			  opList_(index) = builderForValue.build()
			  onChanged()
			Else
			  opListBuilder_.setMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function addOpList(ByVal value As org.nd4j.ir.OpNamespace.OpDescriptor) As Builder
			If opListBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureOpListIsMutable()
			  opList_.Add(value)
			  onChanged()
			Else
			  opListBuilder_.addMessage(value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function addOpList(ByVal index As Integer, ByVal value As org.nd4j.ir.OpNamespace.OpDescriptor) As Builder
			If opListBuilder_ Is Nothing Then
			  If value Is Nothing Then
				Throw New System.NullReferenceException()
			  End If
			  ensureOpListIsMutable()
			  opList_.Insert(index, value)
			  onChanged()
			Else
			  opListBuilder_.addMessage(index, value)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function addOpList(ByVal builderForValue As org.nd4j.ir.OpNamespace.OpDescriptor.Builder) As Builder
			If opListBuilder_ Is Nothing Then
			  ensureOpListIsMutable()
			  opList_.Add(builderForValue.build())
			  onChanged()
			Else
			  opListBuilder_.addMessage(builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function addOpList(ByVal index As Integer, ByVal builderForValue As org.nd4j.ir.OpNamespace.OpDescriptor.Builder) As Builder
			If opListBuilder_ Is Nothing Then
			  ensureOpListIsMutable()
			  opList_.Insert(index, builderForValue.build())
			  onChanged()
			Else
			  opListBuilder_.addMessage(index, builderForValue.build())
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function addAllOpList(Of T1 As org.nd4j.ir.OpNamespace.OpDescriptor)(ByVal values As IEnumerable(Of T1)) As Builder
			If opListBuilder_ Is Nothing Then
			  ensureOpListIsMutable()
			  org.nd4j.shade.protobuf.AbstractMessageLite.Builder.addAll(values, opList_)
			  onChanged()
			Else
			  opListBuilder_.addAllMessages(values)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function clearOpList() As Builder
			If opListBuilder_ Is Nothing Then
			  opList_ = java.util.Collections.emptyList()
			  bitField0_ = (bitField0_ And Not &H1)
			  onChanged()
			Else
			  opListBuilder_.clear()
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function removeOpList(ByVal index As Integer) As Builder
			If opListBuilder_ Is Nothing Then
			  ensureOpListIsMutable()
			  opList_.RemoveAt(index)
			  onChanged()
			Else
			  opListBuilder_.remove(index)
			End If
			Return Me
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function getOpListBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.OpDescriptor.Builder
			Return getOpListFieldBuilder().getBuilder(index)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function getOpListOrBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder Implements org.nd4j.ir.OpNamespace.OpDescriptorListOrBuilder.getOpListOrBuilder
			If opListBuilder_ Is Nothing Then
			  Return opList_(index)
			Else
			  Return opListBuilder_.getMessageOrBuilder(index)
			End If
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
'JAVA TO VB CONVERTER WARNING: Java wildcard generics have no direct equivalent in VB:
'ORIGINAL LINE: public java.util.List<? extends org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder> getOpListOrBuilderList()
		  Public ReadOnly Property OpListOrBuilderList As IList(Of org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder) Implements org.nd4j.ir.OpNamespace.OpDescriptorListOrBuilder.getOpListOrBuilderList
			  Get
				If opListBuilder_ IsNot Nothing Then
				  Return opListBuilder_.getMessageOrBuilderList()
				Else
				  Return java.util.Collections.unmodifiableList(opList_)
				End If
			  End Get
		  End Property
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function addOpListBuilder() As org.nd4j.ir.OpNamespace.OpDescriptor.Builder
			Return getOpListFieldBuilder().addBuilder(org.nd4j.ir.OpNamespace.OpDescriptor.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public Function addOpListBuilder(ByVal index As Integer) As org.nd4j.ir.OpNamespace.OpDescriptor.Builder
			Return getOpListFieldBuilder().addBuilder(index, org.nd4j.ir.OpNamespace.OpDescriptor.DefaultInstance)
		  End Function
		  ''' <summary>
		  ''' <code>repeated .org.nd4j.ir.OpDescriptor opList = 1;</code>
		  ''' </summary>
		  Public ReadOnly Property OpListBuilderList As IList(Of org.nd4j.ir.OpNamespace.OpDescriptor.Builder)
			  Get
				Return getOpListFieldBuilder().getBuilderList()
			  End Get
		  End Property
		  Friend ReadOnly Property OpListFieldBuilder As org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.OpDescriptor, org.nd4j.ir.OpNamespace.OpDescriptor.Builder, org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder)
			  Get
				If opListBuilder_ Is Nothing Then
				  opListBuilder_ = New org.nd4j.shade.protobuf.RepeatedFieldBuilderV3(Of org.nd4j.ir.OpNamespace.OpDescriptor, org.nd4j.ir.OpNamespace.OpDescriptor.Builder, org.nd4j.ir.OpNamespace.OpDescriptorOrBuilder)(opList_, ((bitField0_ And &H1) <> 0), getParentForChildren(), isClean())
				  opList_ = Nothing
				End If
				Return opListBuilder_
			  End Get
		  End Property
'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder setUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function setUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.setUnknownFields(unknownFields)
		  End Function

'JAVA TO VB CONVERTER WARNING: 'final' parameters are not available in VB:
'ORIGINAL LINE: @java.lang.Override public final Builder mergeUnknownFields(final org.nd4j.shade.protobuf.UnknownFieldSet unknownFields)
		  Public Overrides Function mergeUnknownFields(ByVal unknownFields As org.nd4j.shade.protobuf.UnknownFieldSet) As Builder
			Return MyBase.mergeUnknownFields(unknownFields)
		  End Function


		  ' @@protoc_insertion_point(builder_scope:org.nd4j.ir.OpDescriptorList)
		End Class

		' @@protoc_insertion_point(class_scope:org.nd4j.ir.OpDescriptorList)
		Friend Shared ReadOnly DEFAULT_INSTANCE As org.nd4j.ir.OpNamespace.OpDescriptorList
		Shared Sub New()
		  DEFAULT_INSTANCE = New org.nd4j.ir.OpNamespace.OpDescriptorList()
		End Sub

		Public Shared ReadOnly Property DefaultInstance As org.nd4j.ir.OpNamespace.OpDescriptorList
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

'JAVA TO VB CONVERTER NOTE: The field PARSER was renamed since Visual Basic does not allow fields to have the same name as other class members:
		Friend Shared ReadOnly PARSER_Conflict As org.nd4j.shade.protobuf.Parser(Of OpDescriptorList) = New AbstractParserAnonymousInnerClass()

		Private Class AbstractParserAnonymousInnerClass
			Inherits org.nd4j.shade.protobuf.AbstractParser(Of OpDescriptorList)

'JAVA TO VB CONVERTER WARNING: Method 'throws' clauses are not available in VB:
'ORIGINAL LINE: @java.lang.Override public OpDescriptorList parsePartialFrom(org.nd4j.shade.protobuf.CodedInputStream input, org.nd4j.shade.protobuf.ExtensionRegistryLite extensionRegistry) throws org.nd4j.shade.protobuf.InvalidProtocolBufferException
			Public Overrides Function parsePartialFrom(ByVal input As org.nd4j.shade.protobuf.CodedInputStream, ByVal extensionRegistry As org.nd4j.shade.protobuf.ExtensionRegistryLite) As OpDescriptorList
			  Return New OpDescriptorList(input, extensionRegistry)
			End Function
		End Class

		Public Shared Function parser() As org.nd4j.shade.protobuf.Parser(Of OpDescriptorList)
		  Return PARSER_Conflict
		End Function

		Public Overrides ReadOnly Property ParserForType As org.nd4j.shade.protobuf.Parser(Of OpDescriptorList)
			Get
			  Return PARSER_Conflict
			End Get
		End Property

		Public Overrides ReadOnly Property DefaultInstanceForType As org.nd4j.ir.OpNamespace.OpDescriptorList
			Get
			  Return DEFAULT_INSTANCE
			End Get
		End Property

	  End Class

	  Private Shared ReadOnly internal_static_org_nd4j_ir_ArgDescriptor_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_ArgDescriptor_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
	  Private Shared ReadOnly internal_static_org_nd4j_ir_OpDescriptor_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_OpDescriptor_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable
	  Private Shared ReadOnly internal_static_org_nd4j_ir_OpDescriptorList_descriptor As org.nd4j.shade.protobuf.Descriptors.Descriptor
	  Private Shared ReadOnly internal_static_org_nd4j_ir_OpDescriptorList_fieldAccessorTable As org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable

	  Public Shared ReadOnly Property Descriptor As org.nd4j.shade.protobuf.Descriptors.FileDescriptor
		  Get
			Return descriptor
		  End Get
	  End Property
	  Private Shared descriptor As org.nd4j.shade.protobuf.Descriptors.FileDescriptor
	  Shared Sub New()
		Dim descriptorData() As String = { vbLf & ChrW(&O010).ToString() & "op.proto" & ChrW(&O022).ToString() & ChrW(&O013).ToString() & "org.nd4j.ir" & ChrW(&O032).ToString() & ChrW(&O014).ToString() & "tensor.proto""" & ChrW(&O253).ToString() & ChrW(&O004).ToString() & vbLf & vbCr & "ArgDescriptor" & ChrW(&O022).ToString() & ChrW(&O014).ToString() & vbLf & ChrW(&O004).ToString() & "name" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O022).ToString() & vbLf & vbLf & "floatVa" & "lue" & ChrW(&O030).ToString() & ChrW(&O002).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O002).ToString() & ChrW(&O022).ToString() & ChrW(&O023).ToString() & vbLf & ChrW(&O013).ToString() & "doubleValue" & ChrW(&O030).ToString() & ChrW(&O003).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O001).ToString() & ChrW(&O022).ToString() & ChrW(&O022).ToString() & vbLf & vbLf & "int32V" & "alue" & ChrW(&O030).ToString() & ChrW(&O004).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O005).ToString() & ChrW(&O022).ToString() & ChrW(&O022).ToString() & vbLf & vbLf & "int64Value" & ChrW(&O030).ToString() & ChrW(&O005).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O003).ToString() & ChrW(&O022).ToString() & ChrW(&O021).ToString() & vbLf & vbTab & "boolVa" & "lue" & ChrW(&O030).ToString() & ChrW(&O006).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O010).ToString() & ChrW(&O022).ToString() & "," & vbLf & vbCr & "dataTypeValue" & ChrW(&O030).ToString() & ChrW(&O007).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O016).ToString() & "2" & ChrW(&O025).ToString() & ".org.n" & "d4j.ir.DataType" & ChrW(&O022).ToString() & "," & vbLf & vbLf & "inputValue" & ChrW(&O030).ToString() & ChrW(&O010).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O013).ToString() & "2" & ChrW(&O030).ToString() & ".or" & "g.nd4j.ir.TensorProto" & ChrW(&O022).ToString() & "-" & vbLf & ChrW(&O013).ToString() & "outputValue" & ChrW(&O030).ToString() & vbTab & " " & ChrW(&O001).ToString() & "(" & ChrW(&O013).ToString() & "2" & ChrW(&O030).ToString() & ".org.nd4j.ir.TensorProto" & ChrW(&O022).ToString() & "3" & vbLf & ChrW(&O007).ToString() & "argType" & ChrW(&O030).ToString() & vbLf & " " & ChrW(&O001).ToString() & "(" & ChrW(&O016).ToString() & "2"".org.nd4j.ir.ArgDescriptor.ArgTyp" & "e" & ChrW(&O022).ToString() & ChrW(&O020).ToString() & vbLf & ChrW(&O010).ToString() & "argIndex" & ChrW(&O030).ToString() & ChrW(&O013).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O005).ToString() & ChrW(&O022).ToString() & ChrW(&O023).ToString() & vbLf & ChrW(&O013).ToString() & "stringValue" & ChrW(&O030).ToString() & ChrW(&O014).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & ChrW(&O023).ToString() & vbLf & ChrW(&O013).ToString() & "argOptional" & ChrW(&O030).ToString() & vbCr & " " & ChrW(&O001).ToString() & "(" & ChrW(&O010).ToString() & ChrW(&O022).ToString() & ChrW(&O030).ToString() & vbLf & ChrW(&O020).ToString() & "convertBoolToIn" & "t" & ChrW(&O030).ToString() & ChrW(&O016).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O010).ToString() & ChrW(&O022).ToString() & ChrW(&O017).ToString() & vbLf & ChrW(&O007).ToString() & "isArray" & ChrW(&O030).ToString() & ChrW(&O017).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O010).ToString() & """" & ChrW(&O200).ToString() & ChrW(&O001).ToString() & vbLf & ChrW(&O007).ToString() & "ArgType" & ChrW(&O022).ToString() & vbTab & vbLf & ChrW(&O005).ToString() & "FLOAT" & ChrW(&O020).ToString() & ChrW(&O000).ToString() & ChrW(&O022).ToString() & vbLf & vbLf & ChrW(&O006).ToString() & "DOUBLE" & ChrW(&O020).ToString() & ChrW(&O001).ToString() & ChrW(&O022).ToString() & vbTab & vbLf & ChrW(&O005).ToString() & "INT32" & ChrW(&O020).ToString() & ChrW(&O002).ToString() & ChrW(&O022).ToString() & vbTab & vbLf & ChrW(&O005).ToString() & "INT64" & ChrW(&O020).ToString() & ChrW(&O003).ToString() & ChrW(&O022).ToString() & ChrW(&O010).ToString() & vbLf & ChrW(&O004).ToString() & "BOOL" & ChrW(&O020).ToString() & ChrW(&O004).ToString() & ChrW(&O022).ToString() & vbCrLf & vbTab & "DATA_TYPE" & ChrW(&O020).ToString() & ChrW(&O005).ToString() & ChrW(&O022).ToString() & ChrW(&O020).ToString() & vbLf & ChrW(&O014).ToString() & "INPUT_TENS" & "OR" & ChrW(&O020).ToString() & ChrW(&O006).ToString() & ChrW(&O022).ToString() & ChrW(&O021).ToString() & vbLf & vbCr & "OUTPUT_TENSOR" & ChrW(&O020).ToString() & ChrW(&O007).ToString() & ChrW(&O022).ToString() & vbLf & vbLf & ChrW(&O006).ToString() & "STRING" & ChrW(&O020).ToString() & ChrW(&O010).ToString() & """" & ChrW(&O256).ToString() & ChrW(&O003).ToString() & vbLf & ChrW(&O014).ToString() & "OpDescriptor" & ChrW(&O022).ToString() & ChrW(&O014).ToString() & vbLf & ChrW(&O004).ToString() & "name" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O001).ToString() & "(" & vbTab & ChrW(&O022).ToString() & "1" & vbLf & vbCr & "argDescrip" & "tor" & ChrW(&O030).ToString() & ChrW(&O002).ToString() & " " & ChrW(&O003).ToString() & "(" & ChrW(&O013).ToString() & "2" & ChrW(&O032).ToString() & ".org.nd4j.ir.ArgDescriptor" & ChrW(&O022).ToString() & "F" & vbLf & ChrW(&O021).ToString() & "opDeclarationType" & ChrW(&O030).ToString() & ChrW(&O003).ToString() & " " & ChrW(&O001).ToString() & "(" & ChrW(&O016).ToString() & "2+.org.nd4j.ir.O" & "pDescriptor.OpDeclarationType""" & ChrW(&O224).ToString() & ChrW(&O002).ToString() & vbLf & ChrW(&O021).ToString() & "OpDecl" & "arationType" & ChrW(&O022).ToString() & ChrW(&O022).ToString() & vbLf & ChrW(&O016).ToString() & "CUSTOM_OP_IMPL" & ChrW(&O020).ToString() & ChrW(&O000).ToString() & ChrW(&O022).ToString() & ChrW(&O023).ToString() & vbLf & ChrW(&O017).ToString() & "BOOLE" & "AN_OP_IMPL" & ChrW(&O020).ToString() & ChrW(&O001).ToString() & ChrW(&O022).ToString() & ChrW(&O020).ToString() & vbLf & ChrW(&O014).ToString() & "LIST_OP_IMPL" & ChrW(&O020).ToString() & ChrW(&O002).ToString() & ChrW(&O022).ToString() & ChrW(&O021).ToString() & vbLf & vbCr & "LOGIC_" & "OP_IMPL" & ChrW(&O020).ToString() & ChrW(&O003).ToString() & ChrW(&O022).ToString() & ChrW(&O013).ToString() & vbLf & ChrW(&O007).ToString() & "OP_IMPL" & ChrW(&O020).ToString() & ChrW(&O004).ToString() & ChrW(&O022).ToString() & ChrW(&O025).ToString() & vbLf & ChrW(&O021).ToString() & "DIVERGENT_OP_I" & "MPL" & ChrW(&O020).ToString() & ChrW(&O006).ToString() & ChrW(&O022).ToString() & ChrW(&O030).ToString() & vbLf & ChrW(&O024).ToString() & "CONFIGURABLE_OP_IMPL" & ChrW(&O020).ToString() & ChrW(&O007).ToString() & ChrW(&O022).ToString() & ChrW(&O025).ToString() & vbLf & ChrW(&O021).ToString() & "REDUC" & "TION_OP_IMPL" & ChrW(&O020).ToString() & ChrW(&O010).ToString() & ChrW(&O022).ToString() & ChrW(&O031).ToString() & vbLf & ChrW(&O025).ToString() & "BROADCASTABLE_OP_IMPL" & ChrW(&O020).ToString() & vbTab & ChrW(&O022).ToString() & ChrW(&O036).ToString() & vbLf & ChrW(&O032).ToString() & "BROADCASTABLE_BOOL_OP_IMPL" & ChrW(&O020).ToString() & vbLf & ChrW(&O022).ToString() & ChrW(&O016).ToString() & vbLf & vbLf & "LEG" & "ACY_XYZ" & ChrW(&O020).ToString() & ChrW(&O013).ToString() & ChrW(&O022).ToString() & ChrW(&O021).ToString() & vbLf & vbCr & "PLATFORM_IMPL" & ChrW(&O020).ToString() & ChrW(&O014).ToString() & """=" & vbLf & ChrW(&O020).ToString() & "OpDescri" & "ptorList" & ChrW(&O022).ToString() & ")" & vbLf & ChrW(&O006).ToString() & "opList" & ChrW(&O030).ToString() & ChrW(&O001).ToString() & " " & ChrW(&O003).ToString() & "(" & ChrW(&O013).ToString() & "2" & ChrW(&O031).ToString() & ".org.nd4j.ir.O" & "pDescriptorB" & vbCr & "B" & ChrW(&O013).ToString() & "OpNamespaceb" & ChrW(&O006).ToString() & "proto3" }
		descriptor = org.nd4j.shade.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, New org.nd4j.shade.protobuf.Descriptors.FileDescriptor() { org.nd4j.ir.TensorNamespace.Descriptor})
		internal_static_org_nd4j_ir_ArgDescriptor_descriptor = Descriptor.getMessageTypes().get(0)
		internal_static_org_nd4j_ir_ArgDescriptor_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_ArgDescriptor_descriptor, New String() { "Name", "FloatValue", "DoubleValue", "Int32Value", "Int64Value", "BoolValue", "DataTypeValue", "InputValue", "OutputValue", "ArgType", "ArgIndex", "StringValue", "ArgOptional", "ConvertBoolToInt", "IsArray"})
		internal_static_org_nd4j_ir_OpDescriptor_descriptor = Descriptor.getMessageTypes().get(1)
		internal_static_org_nd4j_ir_OpDescriptor_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_OpDescriptor_descriptor, New String() { "Name", "ArgDescriptor", "OpDeclarationType"})
		internal_static_org_nd4j_ir_OpDescriptorList_descriptor = Descriptor.getMessageTypes().get(2)
		internal_static_org_nd4j_ir_OpDescriptorList_fieldAccessorTable = New org.nd4j.shade.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_org_nd4j_ir_OpDescriptorList_descriptor, New String() { "OpList"})
		org.nd4j.ir.TensorNamespace.Descriptor
	  End Sub

	  ' @@protoc_insertion_point(outer_class_scope)
	End Class

End Namespace